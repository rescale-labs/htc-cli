{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Rescale HTC API",
    "description" : "### Changelog\n#### 2024-09-10\n- Added additional validation for the HTCJobDefinition during job submission. (ENK-2155)\n#### 2024-09-09\n- Added additional metrics for vCPU scheduling. (ENK-2039)\n#### 2024-08-26\n- Added additional metrics for swap and disk usage. (ENK-2023, ENK-2044, ENK-2045, ENK-2120)\n#### 2024-08-19\n- Added support for jobs in GCP to use the experimental real swap feature for workspaces where swap infrastructure has been configured. The amount of swap provided is approximately equal to the memory requested by the job. This feature can be enabled by setting the experimental.kubernetesSwap field to true in the Job submit request (ENK-2065)\n#### 2024-08-14\n- Updated job cancellation to correctly update job status. (ENK-2069)\n#### 2024-08-09\n- Updated the response from `/htc/gcp/clusters/{workspaceId}` to include the cluster's autoscaling profile and subnetwork name. (ENK-2042)\n#### 2024-07-22\n- Fixed issue where jobs in multi-region projects were all getting routed to a single region instead of being spread out\n#### 2024-07-18\n- Added htc_job_limit_vcpus metric to response from /htc/metrics\n#### 2024-07-08\n- Allow workspace and organization admin to cancel jobs, view job logs and view job events\n#### 2024-04-23\n- Workspaces can now also be configured with a task retention policy which governs the auto-archival and auto-deletion of tasks. The project task retention policy is prioritized.\n#### 2024-03-01\n- Projects can now be configured with a task retention policy which governs the auto-archival and auto-deletion of tasks.\n- The API now supports manual archival of tasks.\n#### 2024-01-31\n- Added pagination support for GET /htc/projects/{projectId}/tasks/{taskId}/groups endpoint.\n#### 2024-01-26\n- Added workspace dimensions endpoint to enable viewing of predefined computing environment options for a workspace.\n- Added project dimensions endpoints to enable inspection of a project's current computing environment configuration as well as facilitate customization and adjustment of a project's computing environment settings.\n#### 2023-09-25\n- Introduced new `/limits` API endpoints for resource limit management at workspace and project levels.\n- If limits are set for both workspace and project, jobs within the project may be throttled based on resource consumption across either.\n#### 2023-06-20\n- Do not allow jobs submission to deleted tasks \n#### 2023-05-05\n- Fixed issue where jobs would be stuck in running despite completing successfully \n#### 2023-04-20\n- Added clearer error messages for jobs that failed because they exceeded disk space limits \n#### 2023-04-06\n- Added support for validating HTC Bearer tokens using JWKs \n#### 2023-03-07\n- Added support for adding user-defined claims to job bearer tokens during job submission\n- Limited the scope of API endpoints that job bearer tokens are allowed to access \n#### 2023-01-10\n- Added support for extending an existing project with additional regions.\n- Note: this does not currently consolidate images and objects in storage to new regions.\n#### 2022-11-30\n- Updated maxSwap minimum value to 0.\n- If maxSwap is 0 it will not be set in the job definition.\n#### 2022-11-23\n- Changed maxDiskGb field to maxDiskGiB. Fix GCP to use MiB and GiB instead of MB and GB to be consistent with AWS.  \n#### 2022-11-21\n- Updated job submit request body to allow maxDiskGb to be optionally set by the user for GCP only. \n#### 2022-11-18\n- Updated job submit request body to include only maxSwap to be optionally set by user. See HTCJobDefinition model for more details.\n- maxSwap defaults to 2000MB if no value is provided.\n- maxSwap is currently only supported on AWS.\n#### 2022-10-17\n- Added endpoint to return group names associated with a task.\n#### 2022-08-01\n - Added validation for system environment variables during job submission.\n#### 2022-07-25\n - Added support for image tags on GCP. Images pushed to ECR with a tag will be replicated with the tag attached to GCP, and can be submitted in the same way as AWS\n- Resolved bug where log lines were duplicated several times.\n#### 2022-07-08\n - Added validation for image name during job submission\n#### 2022-06-30\n - Added capability to run AARCH64 jobs (specified on the job definition endpoint) on <em>GCP_US_CENTRAL_1</em> and <em>GCP_EU_WEST_4</em> for all users.\n- Added capability to run jobs in GCP region <em>GCP_US_CENTRAL_1</em> for all users.\n#### 2022-06-23\n - Added capability to run jobs in GCP region <em>GCP_EU_WEST_4</em> for all users. This is set during project creation.",
    "version" : "Beta V1"
  },
  "servers" : [ {
    "url" : "https://htc.rescale.com/api/v1"
  } ],
  "paths" : {
    "/.well-known/jwks.json" : {
      "get" : {
        "tags" : [ "Token Resource" ],
        "summary" : "Get JWKS",
        "description" : "This endpoint will get the public keys used to verify JWT",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonWebKeySet"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuth2ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/token" : {
      "get" : {
        "tags" : [ "Token Resource" ],
        "summary" : "Get JWT Token",
        "description" : "This endpoint will get a JWT token given an API key",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HTCToken"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuth2ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/token/whoami" : {
      "get" : {
        "tags" : [ "Token Resource" ],
        "summary" : "Get JWT Token Payload",
        "description" : "This endpoint will get a JWT token payload given a bearer token.",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HTCTokenPayload"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuth2ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/auth/whoami" : {
      "get" : {
        "tags" : [ "Token Resource" ],
        "summary" : "Get Rescale User",
        "description" : "This endpoint will get Rescale user information given a Rescale API key.",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "user" : {
                      "$ref" : "#/components/schemas/RescaleUser"
                    },
                    "userFeatures" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/FeatureFlagsResult"
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuth2ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/htc/gcp/clusters/{workspaceId}" : {
      "get" : {
        "tags" : [ "Provider Resource" ],
        "summary" : "Get Status of GCP Cluster",
        "description" : "This endpoint returns details about all GCP clusters that can run jobs for the specified HTC workspace",
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HTCClusterStatusResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuth2ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/metrics" : {
      "get" : {
        "tags" : [ "Metrics Resource" ],
        "summary" : "Get Metrics",
        "description" : "Get all HTC Metrics for a workspace",
        "parameters" : [ {
          "name" : "Accept-Encoding",
          "in" : "header",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects" : {
      "get" : {
        "tags" : [ "Project Resource" ],
        "summary" : "Get All Projects",
        "description" : "This endpoint will get all projects",
        "parameters" : [ {
          "name" : "onlyMyProjects",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "default" : 100,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/HTCProject"
                      }
                    },
                    "next" : {
                      "format" : "uri",
                      "type" : "string",
                      "example" : "https://page2.com"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Project Resource" ],
        "summary" : "Create Project",
        "description" : "This endpoint will create a project. A project is a collection of tasks and container images used to run jobs. Several projects can belong to a single workspace.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HTCProject"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HTCProject"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}" : {
      "get" : {
        "tags" : [ "Project Resource" ],
        "summary" : "Get Project",
        "description" : "This endpoint will get a project by id",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HTCProject"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "Project Resource" ],
        "summary" : "Update Project Regions",
        "description" : "This endpoint allows for updating a project's regions.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HTCProjectUpdate"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HTCProject"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/container-registry/images" : {
      "get" : {
        "tags" : [ "Container Registry Resource" ],
        "summary" : "Get All Images",
        "description" : "This endpoint will list all images for a project",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HTCImages"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/container-registry/images/{imageName}" : {
      "get" : {
        "tags" : [ "Container Registry Resource" ],
        "summary" : "Get Image",
        "description" : "This endpoint will get the status of an image by name",
        "parameters" : [ {
          "name" : "imageName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HTCImageStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/container-registry/repo/{repoName}" : {
      "post" : {
        "tags" : [ "Container Registry Resource" ],
        "summary" : "Create a Private Repo",
        "description" : "This endpoint will create a private container repository belonging to this project\n\nPrivate container registries are collections of repositories, and private repositories are collections of container images. These images are referenced when running jobs within this project. In order to upload an image to a repository, you will need the `registryURI`, the `repositoryName`, and the token (see `/htc/projects/:projectId/container-registry/token`).",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "repoName",
          "in" : "path",
          "description" : "must match the regex '(?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*'",
          "required" : true,
          "schema" : {
            "pattern" : "(?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HTCRepository"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/container-registry/token" : {
      "get" : {
        "tags" : [ "Container Registry Resource" ],
        "summary" : "Get Container Registry Token",
        "description" : "This endpoint will get a container registry authorization token.\n\n To use this token run `docker login --username AWS --password {TOKEN} {CONTAINER_REGISTRY_DOMAIN}`.\n\ne.g. `docker login --username AWS --password \"eyJwYXlsb2FkIjoiZHhtSzJuQ0x...\" 183929446192.dkr.ecr.us-west-2.amazonaws.com`",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string",
                  "example" : "registry-token-12345"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/dimensions" : {
      "get" : {
        "tags" : [ "Project Resource" ],
        "summary" : "Get Project Dimensions",
        "description" : "This endpoint is designed to retrieve the current set of dimension combinations configured for a specific project so that users can understand the existing computing environment constraints of a project. It returns a list of dimension combinations such as pricing priority, geographical region, compute scaling policy, and hyperthreading options.\n\nAny user who _belongs to the workspace this project belongs to_ can use this endpoint to verify or audit the current configuration of a project. This can be helpful in ensuring that the project's settings align with expectations.\n\nThe payload also includes a read-only set of `derived` dimensions which help describe the currently configured `machineType`",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HTCComputeEnvironment"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Project Resource" ],
        "summary" : "Modify Project Dimensions",
        "description" : "This endpoint allows _workspace_, _organization_, and _Rescale administrators_ to _create_, _update_, or _delete_ the dimension combinations for a project. It accepts a list of dimension combinations, each specifying a unique set of computing environment attributes to tailor the computing environment(s) of a project to match specific job requirements.\n\nFor example, a project’s dimensions can be configured to require jobs to run on a particular type of processor architecture, within a certain region, and with or without hyperthreading.\n\nIt's important to note that the dimensions set through this endpoint must align with the available dimensions at the workspace level.\n\n**In the event that a project's dimension requirements need to be reset to allow for a broader range of job types, sending an empty list to this endpoint will remove all existing dimension restrictions, returning the project to a state where it can accommodate any dimension available in the workspace.**",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/HTCComputeEnvironment"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HTCComputeEnvironment"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/limits" : {
      "get" : {
        "tags" : [ "Project Resource" ],
        "summary" : "Get Project Limits",
        "description" : "This endpoint will list all resource limitations associated with this project.\n\nA job running in this project will be subject to all resulting limits as well as any associated with the workspace (see `/htc/workspaces/{workspaceId}/limits`)",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HTCProjectLimit"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Project Resource" ],
        "summary" : "Create a Project Limit",
        "description" : "This endpoint will add a new limit to this project or overwrite an existing limit if one already exists with the provided `modifierRole`.\n\nJobs submitted to this project will only run when the active resource count falls below the minimum of all limits associated with this project.\n\nAny user who belongs the project's workspace can modify the `PROJECT_ADMIN` limit. Higher permissions are required to modify the `WORKSPACE_ADMIN` limit",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HTCLimitCreate"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HTCProjectLimit"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Project Resource" ],
        "summary" : "Delete Project Limits",
        "description" : "This endpoint will remove all resource limits associated with this project.\n\nAny jobs `SUBMITTED_TO_RESCALE` will transition to `SUBMITTED_TO_PROVIDER` if no other limits apply",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/limits/{id}" : {
      "get" : {
        "tags" : [ "Project Resource" ],
        "summary" : "Get Project Limit",
        "description" : "This endpoint will get either the `PROJECT_ADMIN` or `WORKSPACE_ADMIN` limit for this project",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HTCProjectLimit"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Project Resource" ],
        "summary" : "Delete a Project Limit",
        "description" : "This endpoint will remove a single resource limit associated with this project if it exists",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "Project Resource" ],
        "summary" : "Update Project Limit",
        "description" : "This endpoint will update one of the existing resource limits associated with this project.\n\nAny user who belongs the project's workspace can modify the `PROJECT_ADMIN` limit. Higher permissions are required to modify the `WORKSPACE_ADMIN` limit",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "format" : "int32",
            "type" : "integer"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HTCLimitUpdate"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HTCProjectLimit"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/storage/presigned-url" : {
      "get" : {
        "tags" : [ "Project Resource" ],
        "summary" : "Get Project Storage Presigned URL",
        "description" : "This endpoint will get a presigned url for project storage",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filePath",
          "in" : "query",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PresignedPutUrlResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/storage/token" : {
      "get" : {
        "tags" : [ "Project Resource" ],
        "summary" : "Get Project Storage Token",
        "description" : "This endpoint will get temporary access information for a project storage",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageAccessToken"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/storage/token/{region}" : {
      "get" : {
        "tags" : [ "Project Resource" ],
        "summary" : "Get Project Storage Token for a Region",
        "description" : "This endpoint will get temporary access information for a project storage given a region",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "region",
          "in" : "path",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/SupportedRescaleRegion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageAccessToken"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/storage/tokens" : {
      "get" : {
        "tags" : [ "Project Resource" ],
        "summary" : "Get All Project Storage Tokens",
        "description" : "This endpoint will get temporary access information for all project storages",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageAccessTokens"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/task-retention-policy" : {
      "get" : {
        "tags" : [ "Project Resource" ],
        "summary" : "Get Project Task Retention Policy",
        "description" : "This endpoint is used to retrieve the current task retention policy of a specific project. The task retention policy is necessary in managing the lifecycle of tasks within a project. The task retention policy includes two key aspects:\n\n* **Deletion Grace Period**: The `deleteAfter` field represents the duration (in hours) after which an archived task is automatically deleted. Archived tasks can be unarchived during this period, protecting users from prematurely deleting task resources.\n\n* **Auto-Archive After Inactivity**: The `archiveAfter` field represents the duration (in hours) of inactivity after which an active task is automatically archived. This feature helps in keeping the project organized by archiving active tasks, ensuring that storage resources are freed optimistically.\n\nSetting either value to `0` will result in disabling of that feature. For example, a project's task retention policy with `deleteAfter` set to `0` will result in tasks within that project never auto-deleting. \n\nIf no policy is set at the project level (i.e., the response is a 404), the policy at the workspace level will apply. If the policy has archiveAfter or deleteAfter set to 0, it means that auto-archival or auto-deletion is disabled at the project level and any workspace level policy is ignored",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskRetentionPolicy"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Project Resource" ],
        "summary" : "Modify Project Task Retention Policy",
        "description" : "This endpoint enables project administrators to define or update the task retention policy for a specific project. The task retention policy includes two key aspects:\n\n* **Deletion Grace Period**: The `deleteAfter` field allows administrators to set the duration (in hours) after which an archived task is automatically deleted. This control allows for flexibility in managing the lifecycle of tasks, ensuring that data is retained for an adequate period before being permanently deleted. Archived tasks can be unarchived during this period, protecting users from prematurely deleting task resources\n\n* **Auto-Archive After Inactivity**: The `archiveAfter` field allows administrators to specify the duration (in hours) of inactivity after which an active task is automatically archived. This feature helps in keeping the project organized by archiving active tasks, ensuring that storage resources are freed optimistically.\n\nSetting either value to `0` will result in disabling of that feature. For example, a project's task retention policy with `deleteAfter` set to `0` will result in tasks within that project never auto-deleting.If no policy is set at the project level, the workspace-level policy (if any) will be applied to the project.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaskRetentionPolicy"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskRetentionPolicy"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Project Resource" ],
        "summary" : "Delete Project Task Retention Policy",
        "description" : "This endpoint allows users to delete the task retention policy for the specified project. When a project-level policy is deleted, the auto-archival and auto-deletion behavior for tasks within the project will fall back to the workspace-level policy (if any). If no workspace-level policy is set, tasks within the project will not be subject to any auto-archival or auto-deletion.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/tasks" : {
      "get" : {
        "tags" : [ "Task Resource" ],
        "summary" : "Get All Tasks for a Project",
        "description" : "This endpoint will get all tasks in a project",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "default" : 100,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/HTCTask"
                      }
                    },
                    "next" : {
                      "format" : "uri",
                      "type" : "string",
                      "example" : "https://page2.com"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Task Resource" ],
        "summary" : "Create a Task",
        "description" : "This endpoint will create a task for a project",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HTCTask"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HTCTask"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/tasks/{taskId}" : {
      "get" : {
        "tags" : [ "Task Resource" ],
        "summary" : "Get Task",
        "description" : "This endpoint will get a task by ID",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HTCTask"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Task Resource" ],
        "summary" : "Delete Task",
        "description" : "This endpoint will delete a task by ID",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "taskName", "taskDescription" ],
                  "type" : "object",
                  "properties" : {
                    "projectId" : {
                      "type" : "string",
                      "readOnly" : true,
                      "example" : "project-12345"
                    },
                    "taskId" : {
                      "type" : "string",
                      "readOnly" : true,
                      "example" : "task-12345"
                    },
                    "taskName" : {
                      "type" : "string",
                      "example" : "my-task"
                    },
                    "taskDescription" : {
                      "type" : "string",
                      "example" : "my sample task"
                    },
                    "createdBy" : {
                      "type" : "string",
                      "readOnly" : true,
                      "example" : "qWoUF"
                    },
                    "createdAt" : {
                      "type" : "string",
                      "allOf" : [ {
                        "$ref" : "#/components/schemas/Instant"
                      } ],
                      "readOnly" : true
                    },
                    "lastActiveAt" : {
                      "type" : "string",
                      "allOf" : [ {
                        "$ref" : "#/components/schemas/Instant"
                      } ],
                      "readOnly" : true
                    },
                    "archivedAt" : {
                      "type" : "string",
                      "allOf" : [ {
                        "$ref" : "#/components/schemas/Instant"
                      } ],
                      "readOnly" : true
                    },
                    "deletedAt" : {
                      "type" : "string",
                      "allOf" : [ {
                        "$ref" : "#/components/schemas/Instant"
                      } ],
                      "readOnly" : true
                    },
                    "workspaceId" : {
                      "type" : "string",
                      "readOnly" : true,
                      "example" : "04-8473942"
                    },
                    "taskFolderPath" : {
                      "type" : "string",
                      "readOnly" : true,
                      "example" : "projects/project-12345/tasks/task-12345"
                    },
                    "lifecycleStatus" : {
                      "enum" : [ "DELETED", "ACTIVE", "ARCHIVED" ],
                      "type" : "string",
                      "allOf" : [ {
                        "$ref" : "#/components/schemas/LifecycleStatus"
                      } ],
                      "readOnly" : true,
                      "example" : "DELETED"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "Task Resource" ],
        "summary" : "Archive or Unarchive a Task",
        "description" : "This endpoint allows for managing the lifecycle of tasks. Users may set the `LifecycleStatus` of an HTCTask in accordance with their data retention requirements.\n\nArchiving a Task: To archive an active task, submit a PATCH request with \"lifecycleStatus\": \"ARCHIVED\". This action is permissible only if the task is currently active and has no running jobs. Once archived, the task enters a state where it is no longer operational, but its data is retained. An archived task will be automatically scheduled for deletion after a period defined in the project's task retention policy.\n\nUnarchiving a Task: If a task is in an archived state and you wish to defer its automatic deletion, you can restore it to an active state. To unarchive a task, PATCH it with \"lifecycleStatus\": \"ACTIVE\". This action reactivates the task, making it modifiable and operational again. Note that this action is only applicable to tasks in the ARCHIVED state.\n\nRestrictions: Tasks in a DELETED state are immutable and cannot be transitioned to any other state using this endpoint. Similarly, tasks can only be archived if they are in an ACTIVE state and do not have any running jobs.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HTCTaskUpdate"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HTCTask"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/tasks/{taskId}/group-summary-statistics" : {
      "get" : {
        "tags" : [ "Task Resource" ],
        "summary" : "Get Task Group Summary Statistics",
        "description" : "This endpoint will get job status summary statistics for each group in a task.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "default" : 100,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/JobStatusSummary"
                      }
                    },
                    "next" : {
                      "format" : "uri",
                      "type" : "string",
                      "example" : "https://page2.com"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/tasks/{taskId}/groups" : {
      "get" : {
        "tags" : [ "Task Resource" ],
        "summary" : "Get Task Groups",
        "description" : "This endpoint will get task groups",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "default" : 100,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "example" : [ "group1", "group2" ]
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/tasks/{taskId}/jobs" : {
      "get" : {
        "tags" : [ "Job Resource" ],
        "summary" : "Get All Jobs For a Task",
        "description" : "This endpoint will get all jobs for a task",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "default" : 100,
            "type" : "integer"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/RescaleJobStatus"
          }
        }, {
          "name" : "viewType",
          "in" : "query",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ViewType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/HTCJob"
                      }
                    },
                    "next" : {
                      "format" : "uri",
                      "type" : "string",
                      "example" : "https://page2.com"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/tasks/{taskId}/jobs/batch" : {
      "post" : {
        "tags" : [ "Job Resource" ],
        "summary" : "Submit Jobs",
        "description" : "This endpoint will submit a batch of jobs for a task",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Job submit requests",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/HTCJobSubmitRequest"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HTCJobSubmitRequest"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/tasks/{taskId}/jobs/cancel" : {
      "post" : {
        "tags" : [ "Job Resource" ],
        "summary" : "Cancel Jobs",
        "description" : "This endpoint will attempt to cancel submitted jobs.\n\nNote a 200 response status code does not mean all jobs were cancelled.",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group",
          "in" : "query",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/tasks/{taskId}/jobs/{jobId}" : {
      "get" : {
        "tags" : [ "Job Resource" ],
        "summary" : "Get Job",
        "description" : "This endpoint will get a job by id",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HTCJob"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/tasks/{taskId}/jobs/{jobId}/events" : {
      "get" : {
        "tags" : [ "Job Resource" ],
        "summary" : "Get Job Events",
        "description" : "This endpoint will get events for a job",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "format" : "int32",
            "default" : 100,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/RescaleJobStatusEvent"
                      }
                    },
                    "next" : {
                      "format" : "uri",
                      "type" : "string",
                      "example" : "https://page2.com"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/tasks/{taskId}/jobs/{jobId}/logs" : {
      "get" : {
        "tags" : [ "Job Resource" ],
        "summary" : "Get Job Logs",
        "description" : "This endpoint will get job logs",
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Maximum value: 10000",
          "schema" : {
            "format" : "int32",
            "default" : 100,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/HTCLogEvent"
                      }
                    },
                    "next" : {
                      "format" : "uri",
                      "type" : "string",
                      "example" : "https://page2.com"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/tasks/{taskId}/storage/presigned-url" : {
      "get" : {
        "tags" : [ "Task Resource" ],
        "summary" : "Get Task Storage Presigned URL",
        "description" : "This endpoint will get a presigned url for task storage",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filePath",
          "in" : "query",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PresignedPutUrlResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/tasks/{taskId}/storage/regional-storage" : {
      "get" : {
        "tags" : [ "Task Resource" ],
        "summary" : "Get All Task Storage Tokens",
        "description" : "This endpoint will get temporary access information for all task storages",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegionalStorageResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/tasks/{taskId}/storage/token" : {
      "get" : {
        "tags" : [ "Task Resource" ],
        "summary" : "Get Task Storage Token",
        "description" : "This endpoint will get temporary access information for a task storage",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageAccessToken"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/tasks/{taskId}/storage/token/{region}" : {
      "get" : {
        "tags" : [ "Task Resource" ],
        "summary" : "Get Task Storage Token for a Region",
        "description" : "This endpoint will get temporary access information for a task storage given a region",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "region",
          "in" : "path",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/SupportedRescaleRegion"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageAccessToken"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/tasks/{taskId}/storage/tokens" : {
      "get" : {
        "tags" : [ "Task Resource" ],
        "summary" : "Get All Task Storage Tokens",
        "description" : "This endpoint will get temporary access information for all task storages",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageAccessTokens"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/projects/{projectId}/tasks/{taskId}/summary-statistics" : {
      "get" : {
        "tags" : [ "Task Resource" ],
        "summary" : "Get Task Summary Statistics",
        "description" : "This endpoint will get task summary statistics",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobStatusSummary"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/regions" : {
      "get" : {
        "tags" : [ "Provider Resource" ],
        "summary" : "Get Region Settings For All Regions",
        "description" : "This endpoint will get HTC region settings for all regions",
        "parameters" : [ {
          "name" : "cloudProvider",
          "in" : "query",
          "schema" : {
            "$ref" : "#/components/schemas/CloudProvider"
          }
        }, {
          "name" : "enabled",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HTCInfraResource"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuth2ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/regions/{region}" : {
      "get" : {
        "tags" : [ "Provider Resource" ],
        "summary" : "Get Region Settings for a Region",
        "description" : "This endpoint will get HTC region settings for a specific region",
        "parameters" : [ {
          "name" : "region",
          "in" : "path",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/SupportedRescaleRegion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HTCRegionAdminSettings"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuth2ErrorResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/storage" : {
      "get" : {
        "tags" : [ "Storage Resource" ],
        "summary" : "Get Regional Storages",
        "description" : "This endpoint will get storages in all enabled regions",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RegionStorageOption"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/storage/region/{region}" : {
      "get" : {
        "tags" : [ "Storage Resource" ],
        "summary" : "Get Regional Storage",
        "description" : "This endpoint will get a storage for a region",
        "parameters" : [ {
          "name" : "region",
          "in" : "path",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/SupportedRescaleRegion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegionStorageOption"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/workspaces/{workspaceId}/dimensions" : {
      "get" : {
        "tags" : [ "Workspace Resource" ],
        "summary" : "Get Workspace Dimensions",
        "description" : "This endpoint provides a comprehensive view of the various hardware configurations and environments available within a specific workspace. This read-only API is primarily designed for users who need to understand the different \"dimensions\" or attributes that describe the hardware and other aspects of job runs within their workspace. By offering insights into available environments, it aids users in selecting the most suitable configuration for their jobs, especially when performance testing across different hardware setups.\n\nNormal users can access this endpoint for the workspace they belong to\n\nRescale personnel are required in order to modify any of these dimensions.",
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/HTCComputeEnvironment"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/workspaces/{workspaceId}/limits" : {
      "get" : {
        "tags" : [ "Workspace Resource" ],
        "summary" : "Get Workspace Limit",
        "description" : "This endpoint will get the resource limit applied to this workspace",
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HTCWorkspaceLimit"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/htc/workspaces/{workspaceId}/task-retention-policy" : {
      "get" : {
        "tags" : [ "Workspace Resource" ],
        "summary" : "Get Workspace Task Retention Policy",
        "description" : "This endpoint is used to retrieve the current task retention policy of a specific Workspace. The task retention policy is necessary in managing the lifecycle of tasks within a Workspace. The task retention policy includes two key aspects:\n\n* **Deletion Grace Period**: The `deleteAfter` field represents the duration (in hours) after which an archived task is automatically deleted. Archived tasks can be unarchived during this period, protecting users from prematurely deleting task resources.\n\n* **Auto-Archive After Inactivity**: The `archiveAfter` field represents the duration (in hours) of inactivity after which an active task is automatically archived. This feature helps in keeping the project organized by archiving active tasks, ensuring that storage resources are freed optimistically.\n\nSetting either value to `0` will result in disabling of that feature. For example, a project's task retention policy with `deleteAfter` set to `0` will result in tasks within that project never auto-deleting.",
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkspaceTaskRetentionPolicy"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Workspace Resource" ],
        "summary" : "Modify Workspace Task Retention Policy",
        "description" : "This endpoint enables Workspace administrators to define or update the task retention policy for a specific workspace. The task retention policy includes two key aspects:\n\n* **Deletion Grace Period**: The `deleteAfter` field allows administrators to set the duration (in hours) after which an archived task is automatically deleted. This control allows for flexibility in managing the lifecycle of tasks, ensuring that data is retained for an adequate period before being permanently deleted. Archived tasks can be unarchived during this period, protecting users from prematurely deleting task resources\n\n* **Auto-Archive After Inactivity**: The `archiveAfter` field allows administrators to specify the duration (in hours) of inactivity after which an active task is automatically archived. This feature helps in keeping the project organized by archiving active tasks, ensuring that storage resources are freed optimistically.\n\nSetting either value to `0` will result in disabling of that feature. For example, a workspace's task retention policy with `deleteAfter` set to `0` will result in tasks within that project never auto-deleting. The policy applies to all projects within the workspace that do not have their own project-level policy defined. If a project within the workspace has its own retention policy defined, the project-level policy takes precedence over the workspace-level policy.",
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkspaceTaskRetentionPolicy"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkspaceTaskRetentionPolicy"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/oauth2/token" : {
      "post" : {
        "tags" : [ "Token Resource" ],
        "summary" : "Get OAuth Access Token",
        "description" : "This endpoint will get an OAuth access token",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuth2Token"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OAuth2ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Architecture" : {
        "enum" : [ "AARCH64", "X86", "A100" ],
        "type" : "string"
      },
      "AutoscalingConfig" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "minNodeCount" : {
            "format" : "int32",
            "type" : "integer"
          },
          "maxNodeCount" : {
            "format" : "int32",
            "type" : "integer"
          }
        }
      },
      "AutoscalingProfile" : {
        "enum" : [ "PROFILE_UNSPECIFIED", "OPTIMIZE_UTILIZATION", "BALANCED", "UNRECOGNIZED" ],
        "type" : "string"
      },
      "CloudProvider" : {
        "enum" : [ "AWS", "GCP", "NGC", "AZURE", "RC", "UNASSIGNED" ],
        "type" : "string"
      },
      "ContainerDetails" : {
        "type" : "object",
        "properties" : {
          "exitCode" : {
            "type" : "number",
            "example" : 3
          },
          "reason" : {
            "type" : "string",
            "example" : "Container Exited"
          }
        }
      },
      "DerivedComputeAttributes" : {
        "type" : "object",
        "properties" : {
          "architecture" : {
            "description" : "The CPU architecture of the environment.",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Architecture"
            } ]
          },
          "vCPUs" : {
            "format" : "int32",
            "description" : "The number of virtual CPU cores allocated to the environment.",
            "type" : "integer"
          },
          "memory" : {
            "format" : "double",
            "description" : "The total memory available in the compute environment.",
            "type" : "number"
          }
        }
      },
      "EnvPair" : {
        "required" : [ "name", "value" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "pattern" : "^(?!.*AWS_BATCH_|RESCALE_PROJECT_ID|RESCALE_TASK_ID|RESCALE_JOB_ID|PROJECT_SHARED_FOLDER|TASK_SHARED_FOLDER|AWS_SESSION_TOKEN|AWS_ACCESS_KEY_ID|AWS_SECRET_ACCESS_KEY).*",
            "type" : "string",
            "example" : "FOO"
          },
          "value" : {
            "type" : "string",
            "example" : "bar"
          }
        }
      },
      "ExperimentalFields" : {
        "type" : "object",
        "properties" : {
          "kubernetesSwap" : {
            "type" : "boolean"
          }
        }
      },
      "FeatureFlagsResult" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "format" : "int32",
            "type" : "integer"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RescaleFlag"
            }
          }
        }
      },
      "HTCCluster" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "region" : {
            "$ref" : "#/components/schemas/RescaleRegion"
          },
          "version" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "nodePools" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HTCNodePool"
            }
          },
          "subnetwork" : {
            "type" : "string"
          },
          "autoscaling" : {
            "$ref" : "#/components/schemas/AutoscalingProfile"
          }
        }
      },
      "HTCClusterStatusResponse" : {
        "type" : "object",
        "properties" : {
          "gcpProjectId" : {
            "type" : "string"
          },
          "clusters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HTCCluster"
            }
          }
        }
      },
      "HTCComputeEnvironment" : {
        "type" : "object",
        "properties" : {
          "derived" : {
            "description" : "This nested object provides detailed information about the compute resources allocated to the environment, aiding users in understanding the capabilities specifically of the `machineType`.",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/components/schemas/DerivedComputeAttributes"
            } ],
            "readOnly" : true
          },
          "machineType" : {
            "description" : "The CSP-specific name for the instance type.",
            "type" : "string",
            "example" : "t2d-standard-16"
          },
          "priority" : {
            "description" : "The instance priority type. \"ON_DEMAND_ECONOMY\" for spot instances, \"ON_DEMAND_PRIORITY\" for on-demand instances. Spot instances (\"ON_DEMAND_ECONOMY\") offer cost savings but less reliability compared to on-demand instances.",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/JobPriority"
            } ]
          },
          "region" : {
            "description" : "The CSP-specific region where the job will run. Selecting a region close to data sources or users can reduce latency.",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/RescaleRegion"
            } ]
          },
          "computeScalingPolicy" : {
            "description" : "The autoscaling profile used in the environment. Relevant only for GCP environments. \"BALANCED\" is the default. \"OPTIMIZE-UTILIZATION\" aggressively scales down clusters, optimizing for batch workloads with less sensitivity to start-up latency.",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/AutoscalingProfile"
            } ]
          },
          "hyperthreading" : {
            "description" : "Indicates if simultaneous multithreading (SMT) is enabled. Affects performance for tasks that may not benefit from parallelism. Useful for understanding the nature of CPU allocation for high-performance tasks.",
            "type" : "boolean"
          }
        }
      },
      "HTCImageStatus" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/Status"
          }
        }
      },
      "HTCImages" : {
        "type" : "object",
        "properties" : {
          "containerRegistry" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "123456789.dkr.ecr.us-west-2.amazonaws.com/rescale/project-12345/"
          },
          "images" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "example" : [ "repo1:latest", "repo1:v2", "repo2:latest" ]
          }
        }
      },
      "HTCInfraResource" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "resourceId" : {
            "type" : "string"
          },
          "resourceStatus" : {
            "$ref" : "#/components/schemas/Status1"
          }
        }
      },
      "HTCJob" : {
        "type" : "object",
        "properties" : {
          "jobUUID" : {
            "type" : "string",
            "example" : "155f18d4"
          },
          "providerJobId" : {
            "type" : "string",
            "example" : "provider-id-12345"
          },
          "region" : {
            "$ref" : "#/components/schemas/RescaleRegion"
          },
          "taskId" : {
            "type" : "string",
            "example" : "task-12345"
          },
          "projectId" : {
            "type" : "string",
            "example" : "project-12345"
          },
          "status" : {
            "$ref" : "#/components/schemas/RescaleJobStatus"
          },
          "statusReason" : {
            "type" : "string",
            "example" : "Completed"
          },
          "container" : {
            "$ref" : "#/components/schemas/ContainerDetails"
          },
          "createdAt" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "createdBy" : {
            "type" : "string",
            "example" : "qWoUF"
          },
          "failureCode" : {
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/HTCJobErrorCodeName"
            } ],
            "example" : "ErrorTimeout"
          },
          "workspaceId" : {
            "type" : "string",
            "example" : "04-8098234"
          },
          "group" : {
            "type" : "string",
            "example" : "sample-group"
          },
          "commands" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : [ "python", "script.py" ]
          },
          "envs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvPair"
            }
          },
          "jobExecutionEnvironment" : {
            "$ref" : "#/components/schemas/JobExecutionEnvironment"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tag"
            }
          },
          "architecture" : {
            "$ref" : "#/components/schemas/Architecture"
          },
          "maxVCpus" : {
            "format" : "int32",
            "type" : "integer"
          },
          "maxMemory" : {
            "format" : "int32",
            "type" : "integer"
          },
          "maxDiskGiB" : {
            "format" : "int32",
            "type" : "integer"
          },
          "maxSwap" : {
            "format" : "int32",
            "type" : "integer"
          },
          "imageName" : {
            "type" : "string"
          },
          "execTimeoutSeconds" : {
            "format" : "int32",
            "type" : "integer"
          },
          "updatedAt" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "instanceId" : {
            "type" : "string"
          },
          "instanceLabels" : {
            "$ref" : "#/components/schemas/InstanceLabels"
          },
          "startedAt" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "completedAt" : {
            "$ref" : "#/components/schemas/Instant"
          }
        }
      },
      "HTCJobDefinition" : {
        "required" : [ "imageName" ],
        "type" : "object",
        "properties" : {
          "imageName" : {
            "minLength" : 1,
            "pattern" : "(?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*(:[\\_a-zA-Z0-9]([\\-\\.\\_a-zA-Z0-9])*)?",
            "type" : "string",
            "example" : "my-image"
          },
          "maxVCpus" : {
            "format" : "int32",
            "maximum" : 64,
            "minimum" : 1,
            "type" : "integer",
            "example" : 8
          },
          "maxMemory" : {
            "format" : "int32",
            "maximum" : 235520,
            "minimum" : 4,
            "type" : "integer",
            "example" : 128
          },
          "maxDiskGiB" : {
            "format" : "int32",
            "description" : "maxDiskGiB is supported on GCP only.",
            "maximum" : 64000,
            "minimum" : 0,
            "type" : "integer",
            "example" : 1
          },
          "maxSwap" : {
            "format" : "int32",
            "description" : "On AWS, maxSwap allows swap memory to be used, up to the limit. On other providers, swap is not available, but maxSwap is added to the maxMemory to provide the same amount of available space. The default value is 2000 MB",
            "minimum" : 0,
            "type" : "integer"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "example" : {
              "HOME" : "foo_bar"
            }
          },
          "commands" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "example" : [ "python", "script.py" ]
          },
          "envs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvPair"
            }
          },
          "claims" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NameValuePair"
            }
          },
          "execTimeoutSeconds" : {
            "format" : "int32",
            "maximum" : 1209600,
            "minimum" : 60,
            "type" : "integer",
            "example" : 300
          },
          "architecture" : {
            "$ref" : "#/components/schemas/Architecture"
          },
          "priority" : {
            "$ref" : "#/components/schemas/JobPriority"
          }
        }
      },
      "HTCJobErrorCodeName" : {
        "enum" : [ "ErrorUnknownFailure", "ErrorTimeout", "ErrorNotEnoughMemory", "ErrorNonZeroContainerExitCode", "ErrorCostExceeded", "ErrorInfrastructureFault", "ErrorInstanceTermination", "ErrorStartingContainer", "ErrorProviderDown", "ErrorProviderRegionDown" ],
        "type" : "string"
      },
      "HTCJobSubmitRequest" : {
        "required" : [ "htcJobDefinition" ],
        "type" : "object",
        "properties" : {
          "jobName" : {
            "type" : "string",
            "example" : "Sample job"
          },
          "taskId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "task-12345"
          },
          "projectId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "project-12345"
          },
          "parentJobId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "job-12345"
          },
          "createdBy" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "qWoUF"
          },
          "workspaceId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "04-8234074"
          },
          "group" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "sample-group"
          },
          "batchSize" : {
            "format" : "int32",
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "example" : 10
          },
          "regions" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RescaleRegion"
            },
            "writeOnly" : true
          },
          "rescaleTimeReceived" : {
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Instant"
            } ],
            "readOnly" : true
          },
          "htcJobDefinition" : {
            "$ref" : "#/components/schemas/HTCJobDefinition"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tag"
            }
          },
          "retryStrategy" : {
            "$ref" : "#/components/schemas/HTCRetryStrategy"
          },
          "experimental" : {
            "$ref" : "#/components/schemas/ExperimentalFields"
          },
          "jobDefinitionName" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "job-definition-321"
          },
          "cloudProvider" : {
            "$ref" : "#/components/schemas/CloudProvider"
          }
        }
      },
      "HTCLimitCreate" : {
        "required" : [ "vCPUs", "modifierRole" ],
        "type" : "object",
        "properties" : {
          "vCPUs" : {
            "format" : "int32",
            "type" : "integer"
          },
          "modifierRole" : {
            "$ref" : "#/components/schemas/ModifierRole"
          }
        }
      },
      "HTCLimitUpdate" : {
        "required" : [ "vCPUs" ],
        "type" : "object",
        "properties" : {
          "vCPUs" : {
            "format" : "int32",
            "type" : "integer"
          }
        }
      },
      "HTCLogEvent" : {
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "message" : {
            "type" : "string",
            "example" : "JOB COMPLETED SUCCESSFULLY"
          }
        }
      },
      "HTCNodePool" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "instanceType" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "autoscaling" : {
            "$ref" : "#/components/schemas/AutoscalingConfig"
          }
        }
      },
      "HTCProject" : {
        "required" : [ "projectName", "projectDescription" ],
        "type" : "object",
        "properties" : {
          "projectId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "project-12345"
          },
          "projectName" : {
            "type" : "string",
            "example" : "my-project"
          },
          "projectDescription" : {
            "type" : "string",
            "example" : "my-first-project"
          },
          "createdBy" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "qWoUF"
          },
          "workspaceId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "04-8473942"
          },
          "organizationCode" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "my-org"
          },
          "createdAt" : {
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Instant"
            } ],
            "readOnly" : true
          },
          "containerRegistry" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "123456789.dkr.ecr.us-west-2.amazonaws.com/rescale/project-12345/"
          },
          "repositories" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "example" : [ "repo1", "repo2" ]
          },
          "regions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RescaleRegion"
            },
            "example" : [ "AWS_US_EAST_2", "AWS_US_WEST_2" ]
          },
          "regionSettings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HTCRegionSettings"
            }
          },
          "projectFolderPath" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "projects/project-12345/"
          }
        }
      },
      "HTCProjectLimit" : {
        "required" : [ "vCPUs" ],
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "qWoUF"
          },
          "vCPUs" : {
            "format" : "int32",
            "maximum" : 999999,
            "minimum" : 0,
            "type" : "integer"
          },
          "updatedBy" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "qWoUF"
          },
          "updatedAt" : {
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Instant"
            } ],
            "readOnly" : true,
            "example" : ""
          },
          "createdAt" : {
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Instant"
            } ],
            "readOnly" : true,
            "example" : ""
          },
          "workspaceId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "04-8473942"
          },
          "id" : {
            "format" : "int32",
            "type" : "integer",
            "readOnly" : true,
            "example" : 1
          },
          "projectId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "project-12345"
          },
          "modifierRole" : {
            "description" : "The highest role that can modify this limit",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/ModifierRole"
            } ],
            "example" : "PROJECT_ADMIN"
          }
        }
      },
      "HTCProjectUpdate" : {
        "type" : "object",
        "properties" : {
          "regions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RescaleRegion"
            },
            "example" : [ "AWS_US_EAST_2", "AWS_US_WEST_2" ]
          }
        }
      },
      "HTCRegionAdminSettings" : {
        "type" : "object",
        "properties" : {
          "region" : {
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/RescaleRegion"
            } ],
            "readOnly" : true
          },
          "enabled" : {
            "type" : "boolean"
          },
          "weight" : {
            "type" : "number",
            "example" : 4
          },
          "updatedBy" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "qWoUF"
          },
          "updatedAt" : {
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Instant"
            } ],
            "readOnly" : true
          },
          "supportedArchitectures" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Architecture"
            }
          },
          "cloudProvider" : {
            "$ref" : "#/components/schemas/CloudProvider"
          }
        }
      },
      "HTCRegionComputeSettings" : {
        "type" : "object",
        "properties" : {
          "computeRegion" : {
            "$ref" : "#/components/schemas/RescaleRegion"
          }
        }
      },
      "HTCRegionSettings" : {
        "required" : [ "computeSettings", "storageSettings" ],
        "type" : "object",
        "properties" : {
          "computeSettings" : {
            "$ref" : "#/components/schemas/HTCRegionComputeSettings"
          },
          "storageSettings" : {
            "$ref" : "#/components/schemas/HTCRegionStorageSettings"
          }
        }
      },
      "HTCRegionStorageSettings" : {
        "type" : "object",
        "properties" : {
          "storageRegion" : {
            "$ref" : "#/components/schemas/RescaleRegion"
          }
        }
      },
      "HTCRepository" : {
        "type" : "object",
        "properties" : {
          "repositoryName" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "repo1"
          },
          "successfullyCreated" : {
            "type" : "boolean",
            "example" : true
          },
          "projectId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "project-12345"
          },
          "createdBy" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "qWoUF"
          },
          "workspaceId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "04-8473942"
          },
          "registryURI" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "123456789.dkr.ecr.us-west-2.amazonaws.com/rescale/project-12345/"
          }
        }
      },
      "HTCRetryStrategy" : {
        "type" : "object",
        "properties" : {
          "maxRetries" : {
            "format" : "int32",
            "maximum" : 10,
            "minimum" : 0,
            "type" : "integer"
          }
        }
      },
      "HTCTask" : {
        "required" : [ "taskName", "taskDescription" ],
        "type" : "object",
        "properties" : {
          "projectId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "project-12345"
          },
          "taskId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "task-12345"
          },
          "taskName" : {
            "type" : "string",
            "example" : "my-task"
          },
          "taskDescription" : {
            "type" : "string",
            "example" : "my sample task"
          },
          "createdBy" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "qWoUF"
          },
          "createdAt" : {
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Instant"
            } ],
            "readOnly" : true
          },
          "lastActiveAt" : {
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Instant"
            } ],
            "readOnly" : true
          },
          "archivedAt" : {
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Instant"
            } ],
            "readOnly" : true
          },
          "deletedAt" : {
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Instant"
            } ],
            "readOnly" : true
          },
          "workspaceId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "04-8473942"
          },
          "taskFolderPath" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "projects/project-12345/tasks/task-12345"
          },
          "lifecycleStatus" : {
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/LifecycleStatus"
            } ],
            "readOnly" : true,
            "example" : "ACTIVE"
          }
        }
      },
      "HTCTaskUpdate" : {
        "required" : [ "lifecycleStatus" ],
        "type" : "object",
        "properties" : {
          "lifecycleStatus" : {
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/LifecycleStatus"
            } ],
            "example" : "ARCHIVED"
          }
        }
      },
      "HTCToken" : {
        "type" : "object",
        "properties" : {
          "tokenValue" : {
            "description" : "JWT Token",
            "type" : "string",
            "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          },
          "expiresIn" : {
            "format" : "int64",
            "description" : "Number of seconds until this token expires",
            "type" : "integer"
          }
        }
      },
      "HTCWorkspaceLimit" : {
        "required" : [ "vCPUs" ],
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "qWoUF"
          },
          "vCPUs" : {
            "format" : "int32",
            "maximum" : 999999,
            "minimum" : 0,
            "type" : "integer"
          },
          "updatedBy" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "qWoUF"
          },
          "updatedAt" : {
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Instant"
            } ],
            "readOnly" : true,
            "example" : ""
          },
          "createdAt" : {
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Instant"
            } ],
            "readOnly" : true,
            "example" : ""
          },
          "workspaceId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "04-8473942"
          }
        }
      },
      "InstanceLabels" : {
        "type" : "object",
        "properties" : {
          "csp" : {
            "type" : "string"
          },
          "priority" : {
            "type" : "string"
          },
          "instanceType" : {
            "type" : "string"
          },
          "instanceArchitecture" : {
            "type" : "string"
          },
          "accountId" : {
            "type" : "string"
          },
          "region" : {
            "type" : "string"
          }
        }
      },
      "Instant" : {
        "format" : "date-time",
        "type" : "string",
        "example" : "2022-03-10T16:15:50Z"
      },
      "JobExecutionEnvironment" : {
        "type" : "object",
        "properties" : {
          "instanceId" : {
            "type" : "string",
            "example" : "123456789"
          },
          "instanceType" : {
            "type" : "string",
            "example" : "c7g.medium"
          },
          "architecture" : {
            "type" : "number",
            "example" : 2
          }
        }
      },
      "JobPriority" : {
        "enum" : [ "ON_DEMAND_PRIORITY", "ON_DEMAND_ECONOMY" ],
        "type" : "string"
      },
      "JobStatusSummary" : {
        "type" : "object",
        "properties" : {
          "group" : {
            "type" : "string",
            "example" : "my-job-group"
          },
          "jobStatuses" : {
            "enum" : [ "SUBMITTED_TO_RESCALE", "SUBMITTED_TO_PROVIDER", "RUNNABLE", "STARTING", "RUNNING", "SUCCEEDED", "FAILED", "POD_SUCCEEDED", "POD_FAILED" ],
            "type" : "object",
            "properties" : {
              "SUBMITTED_TO_RESCALE" : {
                "type" : "integer",
                "example" : 5
              },
              "SUBMITTED_TO_PROVIDER" : {
                "type" : "integer",
                "example" : 5
              },
              "RUNNABLE" : {
                "type" : "integer",
                "example" : 5
              },
              "STARTING" : {
                "type" : "integer",
                "example" : 5
              },
              "RUNNING" : {
                "type" : "integer",
                "example" : 5
              },
              "SUCCEEDED" : {
                "type" : "integer",
                "example" : 5
              },
              "FAILED" : {
                "type" : "integer",
                "example" : 5
              }
            }
          }
        }
      },
      "JsonWebKey" : {
        "type" : "object",
        "properties" : {
          "use" : {
            "type" : "string"
          },
          "keyId" : {
            "type" : "string"
          },
          "algorithm" : {
            "type" : "string"
          },
          "keyOps" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "otherParameters" : {
            "type" : "object",
            "additionalProperties" : { }
          },
          "key" : {
            "$ref" : "#/components/schemas/Key"
          },
          "keyType" : {
            "type" : "string"
          },
          "publicKey" : {
            "$ref" : "#/components/schemas/PublicKey"
          }
        }
      },
      "JsonWebKeySet" : {
        "type" : "object",
        "properties" : {
          "keys" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/JsonWebKey"
            }
          },
          "jsonWebKeys" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/JsonWebKey"
            }
          }
        }
      },
      "Key" : {
        "type" : "object",
        "properties" : {
          "algorithm" : {
            "type" : "string"
          },
          "format" : {
            "type" : "string"
          },
          "encoded" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      },
      "LifecycleStatus" : {
        "enum" : [ "DELETED", "ACTIVE", "ARCHIVED" ],
        "type" : "string"
      },
      "ModifierRole" : {
        "enum" : [ "WORKSPACE_ADMIN", "PROJECT_ADMIN" ],
        "type" : "string"
      },
      "NameValuePair" : {
        "required" : [ "name", "value" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "OAuth2ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "string"
          },
          "errorDescription" : {
            "type" : "string"
          }
        }
      },
      "OAuth2Token" : {
        "type" : "object",
        "properties" : {
          "access_token" : {
            "type" : "string"
          },
          "token_type" : {
            "type" : "string"
          },
          "expires_in" : {
            "format" : "int64",
            "type" : "integer"
          }
        }
      },
      "Organization" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "example" : "849506"
          },
          "canViewOrganizationJobs" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "PresignedPutUrlResponse" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "object",
            "properties" : {
              "protocol" : {
                "type" : "string"
              },
              "host" : {
                "type" : "string"
              },
              "port" : {
                "format" : "int32",
                "type" : "integer"
              },
              "file" : {
                "type" : "string"
              },
              "authority" : {
                "type" : "string"
              },
              "ref" : {
                "type" : "string"
              },
              "hashCode" : {
                "format" : "int32",
                "type" : "integer"
              },
              "defaultPort" : {
                "format" : "int32",
                "type" : "integer"
              },
              "content" : { },
              "serializedHashCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "example" : "https://presigned-put-url/my-storage"
          },
          "storageName" : {
            "type" : "string",
            "example" : "my-storage"
          },
          "region" : {
            "$ref" : "#/components/schemas/RescaleRegion"
          },
          "expiration" : {
            "$ref" : "#/components/schemas/Instant"
          }
        }
      },
      "PublicKey" : {
        "type" : "object",
        "properties" : {
          "algorithm" : {
            "type" : "string"
          },
          "format" : {
            "type" : "string"
          },
          "encoded" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      },
      "RegionStorageOption" : {
        "type" : "object",
        "properties" : {
          "storageName" : {
            "type" : "string",
            "example" : "my-storage"
          },
          "region" : {
            "$ref" : "#/components/schemas/RescaleRegion"
          },
          "provider" : {
            "$ref" : "#/components/schemas/CloudProvider"
          }
        }
      },
      "RegionalStorageResponse" : {
        "type" : "object",
        "properties" : {
          "rescaleRegion" : {
            "$ref" : "#/components/schemas/RescaleRegion"
          },
          "regionalStores" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionalStore"
            }
          }
        }
      },
      "RegionalStore" : {
        "type" : "object",
        "properties" : {
          "region" : {
            "$ref" : "#/components/schemas/RescaleRegion"
          },
          "projectPath" : {
            "type" : "string"
          },
          "taskPath" : {
            "type" : "string"
          },
          "credentials" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "provider" : {
            "$ref" : "#/components/schemas/CloudProvider"
          }
        }
      },
      "RescaleFlag" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "boolean"
          }
        }
      },
      "RescaleJobStatus" : {
        "enum" : [ "SUBMITTED_TO_RESCALE", "SUBMITTED_TO_PROVIDER", "RUNNABLE", "STARTING", "RUNNING", "SUCCEEDED", "FAILED", "POD_SUCCEEDED", "POD_FAILED" ],
        "type" : "string"
      },
      "RescaleJobStatusEvent" : {
        "type" : "object",
        "properties" : {
          "eventId" : {
            "type" : "string",
            "example" : "event-13"
          },
          "jobId" : {
            "type" : "string",
            "example" : "job-12345"
          },
          "dateTime" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "statusReason" : {
            "type" : "string",
            "example" : "Completed"
          },
          "container" : {
            "$ref" : "#/components/schemas/ContainerDetails"
          },
          "status" : {
            "$ref" : "#/components/schemas/RescaleJobStatus"
          },
          "instanceLabels" : {
            "$ref" : "#/components/schemas/InstanceLabels"
          },
          "instanceId" : {
            "type" : "string"
          },
          "userCancelledEvent" : {
            "type" : "boolean"
          }
        }
      },
      "RescaleRegion" : {
        "enum" : [ "AWS_AP_SOUTHEAST_1", "AWS_CA_CENTRAL_1", "AWS_EU_NORTH_1", "AWS_EU_CENTRAL_1", "AWS_EU_WEST_1", "AWS_EU_WEST_2", "AWS_EU_WEST_3", "AWS_SA_EAST_1", "AWS_US_EAST_2", "AWS_US_WEST_2", "AWS_US_EAST_1", "GCP_ASIA_SOUTHEAST_1", "GCP_US_CENTRAL_1", "GCP_US_EAST_1", "GCP_US_EAST_2", "GCP_US_EAST_4", "GCP_US_WEST_1", "GCP_US_WEST_4", "GCP_EU_WEST_1", "GCP_EU_WEST_2", "GCP_EU_WEST_3", "GCP_EU_WEST_4", "GCP_CA_CENTRAL_1", "NGC_ENOCH_1", "AZURE_US_WEST_2", "AZURE_US_EAST_2", "AZURE_EU_NORTH", "RC_ICELAND_1", "UNASSIGNED" ],
        "type" : "string"
      },
      "RescaleUser" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "string",
            "example" : "qWoUF"
          },
          "email" : {
            "type" : "string",
            "example" : "user1@rescale.com"
          },
          "fullName" : {
            "type" : "string",
            "example" : "Juliet Doe"
          },
          "isRescaleAdmin" : {
            "type" : "boolean",
            "example" : true
          },
          "isOrganizationAdmin" : {
            "type" : "boolean",
            "example" : true
          },
          "isWorkspaceAdmin" : {
            "type" : "boolean",
            "example" : true
          },
          "isSuperuser" : {
            "type" : "boolean",
            "example" : true
          },
          "workspace" : {
            "$ref" : "#/components/schemas/Workspace"
          },
          "organization" : {
            "$ref" : "#/components/schemas/Organization"
          },
          "rescaleAdmin" : {
            "type" : "boolean"
          },
          "organizationAdmin" : {
            "type" : "boolean"
          },
          "workspaceAdmin" : {
            "type" : "boolean"
          },
          "superuser" : {
            "type" : "boolean"
          }
        }
      },
      "Status" : {
        "enum" : [ "READY", "PENDING" ],
        "type" : "string"
      },
      "Status1" : {
        "enum" : [ "PASS", "FAIL" ],
        "type" : "string"
      },
      "StorageAccessToken" : {
        "type" : "object",
        "properties" : {
          "projectSharedStoragePath" : {
            "type" : "string",
            "example" : "s3://my-storage/projects/project-12345/shared/"
          },
          "projectId" : {
            "type" : "string",
            "example" : "project-12345"
          },
          "storageName" : {
            "type" : "string",
            "example" : "my-storage"
          },
          "region" : {
            "$ref" : "#/components/schemas/RescaleRegion"
          },
          "user" : {
            "type" : "string",
            "example" : "123456789:qWoUF"
          },
          "expiration" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "credentials" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "example" : {
              "AWS_ACCESS_KEY_ID" : "key-12345",
              "AWS_SECRET_ACCESS_KEY" : "secret-key-12345789",
              "AWS_SESSION_TOKEN" : "token-12345////12345"
            }
          },
          "provider" : {
            "$ref" : "#/components/schemas/CloudProvider"
          }
        }
      },
      "StorageAccessTokens" : {
        "type" : "object",
        "properties" : {
          "defaultRegion" : {
            "$ref" : "#/components/schemas/RescaleRegion"
          },
          "regionStores" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StorageAccessToken"
            }
          }
        }
      },
      "SupportedRescaleRegion" : {
        "enum" : [ "AWS_AP_SOUTHEAST_1", "AWS_CA_CENTRAL_1", "AWS_EU_NORTH_1", "AWS_EU_CENTRAL_1", "AWS_EU_WEST_1", "AWS_EU_WEST_2", "AWS_EU_WEST_3", "AWS_SA_EAST_1", "AWS_US_EAST_2", "AWS_US_WEST_2", "AWS_US_EAST_1", "GCP_ASIA_SOUTHEAST_1", "GCP_US_CENTRAL_1", "GCP_US_EAST_1", "GCP_US_EAST_2", "GCP_US_EAST_4", "GCP_US_WEST_1", "GCP_US_WEST_4", "GCP_EU_WEST_1", "GCP_EU_WEST_2", "GCP_EU_WEST_3", "GCP_EU_WEST_4", "GCP_CA_CENTRAL_1" ],
        "type" : "string"
      },
      "Tag" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "example" : "HOME"
          },
          "value" : {
            "type" : "string",
            "example" : "/home/users/"
          }
        }
      },
      "TaskRetentionPolicy" : {
        "required" : [ "deleteAfter", "archiveAfter" ],
        "type" : "object",
        "properties" : {
          "projectId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "project-12345"
          },
          "deleteAfter" : {
            "format" : "int32",
            "description" : "The time in hours before an archived task is deleted. A value of `0` disables auto-deletion, keeping the task archived indefinitely.",
            "minimum" : 0,
            "type" : "integer",
            "example" : 24
          },
          "archiveAfter" : {
            "format" : "int32",
            "description" : "The time in hours of inactivity after which an active task is automatically archived. Setting this to `0` turns off auto-archiving, leaving the task active indefinitely.",
            "minimum" : 0,
            "type" : "integer",
            "example" : 168
          },
          "createdAt" : {
            "description" : "When this TaskRetentionPolicy was applied to this project.",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Instant"
            } ],
            "readOnly" : true
          }
        }
      },
      "ViewType" : {
        "enum" : [ "FULL", "SIMPLE" ],
        "type" : "string"
      },
      "WhoAmI" : {
        "type" : "object",
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/RescaleUser"
          },
          "userFeatures" : {
            "$ref" : "#/components/schemas/FeatureFlagsResult"
          }
        }
      },
      "Workspace" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "04-8473942"
          },
          "name" : {
            "type" : "string",
            "example" : "Juliet's Workspace"
          }
        }
      },
      "WorkspaceTaskRetentionPolicy" : {
        "required" : [ "deleteAfter", "archiveAfter" ],
        "type" : "object",
        "properties" : {
          "workspaceId" : {
            "type" : "string",
            "readOnly" : true,
            "example" : "workspace-12345"
          },
          "deleteAfter" : {
            "format" : "int32",
            "description" : "The time in hours before an archived task is deleted. A value of `0` disables auto-deletion, keeping the task archived indefinitely.",
            "minimum" : 0,
            "type" : "integer",
            "example" : 24
          },
          "archiveAfter" : {
            "format" : "int32",
            "description" : "The time in hours of inactivity after which an active task is automatically archived. Setting this to `0` turns off auto-archiving, leaving the task active indefinitely.",
            "minimum" : 0,
            "type" : "integer",
            "example" : 168
          },
          "createdAt" : {
            "description" : "When this TaskRetentionPolicy was applied to this workspace.",
            "type" : "string",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Instant"
            } ],
            "readOnly" : true
          }
        }
      }
    },
    "securitySchemes" : {
      "SecurityScheme" : {
        "type" : "http",
        "description" : "Authentication",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}