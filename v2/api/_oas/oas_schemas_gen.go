// Code generated by ogen, DO NOT EDIT.

package _oas

import (
	"io"
	"net/url"
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
)

// Ref: #/components/schemas/Architecture
type Architecture string

const (
	ArchitectureAARCH64 Architecture = "AARCH64"
	ArchitectureX86     Architecture = "X86"
	ArchitectureA100    Architecture = "A100"
)

// AllValues returns all Architecture values.
func (Architecture) AllValues() []Architecture {
	return []Architecture{
		ArchitectureAARCH64,
		ArchitectureX86,
		ArchitectureA100,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Architecture) MarshalText() ([]byte, error) {
	switch s {
	case ArchitectureAARCH64:
		return []byte(s), nil
	case ArchitectureX86:
		return []byte(s), nil
	case ArchitectureA100:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Architecture) UnmarshalText(data []byte) error {
	switch Architecture(data) {
	case ArchitectureAARCH64:
		*s = ArchitectureAARCH64
		return nil
	case ArchitectureX86:
		*s = ArchitectureX86
		return nil
	case ArchitectureA100:
		*s = ArchitectureA100
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// AuthTokenWhoamiGetForbidden is response for AuthTokenWhoamiGet operation.
type AuthTokenWhoamiGetForbidden struct{}

func (*AuthTokenWhoamiGetForbidden) authTokenWhoamiGetRes() {}

// Ref: #/components/schemas/AutoscalingConfig
type AutoscalingConfig struct {
	Enabled      OptBool  `json:"enabled"`
	MaxNodeCount OptInt32 `json:"maxNodeCount"`
	MinNodeCount OptInt32 `json:"minNodeCount"`
}

// GetEnabled returns the value of Enabled.
func (s *AutoscalingConfig) GetEnabled() OptBool {
	return s.Enabled
}

// GetMaxNodeCount returns the value of MaxNodeCount.
func (s *AutoscalingConfig) GetMaxNodeCount() OptInt32 {
	return s.MaxNodeCount
}

// GetMinNodeCount returns the value of MinNodeCount.
func (s *AutoscalingConfig) GetMinNodeCount() OptInt32 {
	return s.MinNodeCount
}

// SetEnabled sets the value of Enabled.
func (s *AutoscalingConfig) SetEnabled(val OptBool) {
	s.Enabled = val
}

// SetMaxNodeCount sets the value of MaxNodeCount.
func (s *AutoscalingConfig) SetMaxNodeCount(val OptInt32) {
	s.MaxNodeCount = val
}

// SetMinNodeCount sets the value of MinNodeCount.
func (s *AutoscalingConfig) SetMinNodeCount(val OptInt32) {
	s.MinNodeCount = val
}

// Ref: #/components/schemas/AutoscalingProfile
type AutoscalingProfile string

const (
	AutoscalingProfilePROFILEUNSPECIFIED  AutoscalingProfile = "PROFILE_UNSPECIFIED"
	AutoscalingProfileOPTIMIZEUTILIZATION AutoscalingProfile = "OPTIMIZE_UTILIZATION"
	AutoscalingProfileBALANCED            AutoscalingProfile = "BALANCED"
	AutoscalingProfileUNRECOGNIZED        AutoscalingProfile = "UNRECOGNIZED"
)

// AllValues returns all AutoscalingProfile values.
func (AutoscalingProfile) AllValues() []AutoscalingProfile {
	return []AutoscalingProfile{
		AutoscalingProfilePROFILEUNSPECIFIED,
		AutoscalingProfileOPTIMIZEUTILIZATION,
		AutoscalingProfileBALANCED,
		AutoscalingProfileUNRECOGNIZED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AutoscalingProfile) MarshalText() ([]byte, error) {
	switch s {
	case AutoscalingProfilePROFILEUNSPECIFIED:
		return []byte(s), nil
	case AutoscalingProfileOPTIMIZEUTILIZATION:
		return []byte(s), nil
	case AutoscalingProfileBALANCED:
		return []byte(s), nil
	case AutoscalingProfileUNRECOGNIZED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AutoscalingProfile) UnmarshalText(data []byte) error {
	switch AutoscalingProfile(data) {
	case AutoscalingProfilePROFILEUNSPECIFIED:
		*s = AutoscalingProfilePROFILEUNSPECIFIED
		return nil
	case AutoscalingProfileOPTIMIZEUTILIZATION:
		*s = AutoscalingProfileOPTIMIZEUTILIZATION
		return nil
	case AutoscalingProfileBALANCED:
		*s = AutoscalingProfileBALANCED
		return nil
	case AutoscalingProfileUNRECOGNIZED:
		*s = AutoscalingProfileUNRECOGNIZED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CloudProvider
type CloudProvider string

const (
	CloudProviderAWS        CloudProvider = "AWS"
	CloudProviderGCP        CloudProvider = "GCP"
	CloudProviderNGC        CloudProvider = "NGC"
	CloudProviderAZURE      CloudProvider = "AZURE"
	CloudProviderRC         CloudProvider = "RC"
	CloudProviderUNASSIGNED CloudProvider = "UNASSIGNED"
)

// AllValues returns all CloudProvider values.
func (CloudProvider) AllValues() []CloudProvider {
	return []CloudProvider{
		CloudProviderAWS,
		CloudProviderGCP,
		CloudProviderNGC,
		CloudProviderAZURE,
		CloudProviderRC,
		CloudProviderUNASSIGNED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CloudProvider) MarshalText() ([]byte, error) {
	switch s {
	case CloudProviderAWS:
		return []byte(s), nil
	case CloudProviderGCP:
		return []byte(s), nil
	case CloudProviderNGC:
		return []byte(s), nil
	case CloudProviderAZURE:
		return []byte(s), nil
	case CloudProviderRC:
		return []byte(s), nil
	case CloudProviderUNASSIGNED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CloudProvider) UnmarshalText(data []byte) error {
	switch CloudProvider(data) {
	case CloudProviderAWS:
		*s = CloudProviderAWS
		return nil
	case CloudProviderGCP:
		*s = CloudProviderGCP
		return nil
	case CloudProviderNGC:
		*s = CloudProviderNGC
		return nil
	case CloudProviderAZURE:
		*s = CloudProviderAZURE
		return nil
	case CloudProviderRC:
		*s = CloudProviderRC
		return nil
	case CloudProviderUNASSIGNED:
		*s = CloudProviderUNASSIGNED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/ContainerDetails
type ContainerDetails struct {
	ExitCode OptFloat64 `json:"exitCode"`
	Reason   OptString  `json:"reason"`
}

// GetExitCode returns the value of ExitCode.
func (s *ContainerDetails) GetExitCode() OptFloat64 {
	return s.ExitCode
}

// GetReason returns the value of Reason.
func (s *ContainerDetails) GetReason() OptString {
	return s.Reason
}

// SetExitCode sets the value of ExitCode.
func (s *ContainerDetails) SetExitCode(val OptFloat64) {
	s.ExitCode = val
}

// SetReason sets the value of Reason.
func (s *ContainerDetails) SetReason(val OptString) {
	s.Reason = val
}

// Ref: #/components/schemas/EnvPair
type EnvPair struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

// GetName returns the value of Name.
func (s *EnvPair) GetName() string {
	return s.Name
}

// GetValue returns the value of Value.
func (s *EnvPair) GetValue() string {
	return s.Value
}

// SetName sets the value of Name.
func (s *EnvPair) SetName(val string) {
	s.Name = val
}

// SetValue sets the value of Value.
func (s *EnvPair) SetValue(val string) {
	s.Value = val
}

// Ref: #/components/schemas/ExperimentalFields
type ExperimentalFields struct {
	KubernetesSwap OptBool `json:"kubernetesSwap"`
}

// GetKubernetesSwap returns the value of KubernetesSwap.
func (s *ExperimentalFields) GetKubernetesSwap() OptBool {
	return s.KubernetesSwap
}

// SetKubernetesSwap sets the value of KubernetesSwap.
func (s *ExperimentalFields) SetKubernetesSwap(val OptBool) {
	s.KubernetesSwap = val
}

// Ref: #/components/schemas/FeatureFlagsResult
type FeatureFlagsResult struct {
	Count   OptInt32      `json:"count"`
	Results []RescaleFlag `json:"results"`
}

// GetCount returns the value of Count.
func (s *FeatureFlagsResult) GetCount() OptInt32 {
	return s.Count
}

// GetResults returns the value of Results.
func (s *FeatureFlagsResult) GetResults() []RescaleFlag {
	return s.Results
}

// SetCount sets the value of Count.
func (s *FeatureFlagsResult) SetCount(val OptInt32) {
	s.Count = val
}

// SetResults sets the value of Results.
func (s *FeatureFlagsResult) SetResults(val []RescaleFlag) {
	s.Results = val
}

// Ref: #/components/schemas/HTCCluster
type HTCCluster struct {
	Autoscaling OptAutoscalingProfile `json:"autoscaling"`
	Name        OptString             `json:"name"`
	NodePools   []HTCNodePool         `json:"nodePools"`
	Region      OptRescaleRegion      `json:"region"`
	Status      OptString             `json:"status"`
	Subnetwork  OptString             `json:"subnetwork"`
	Version     OptString             `json:"version"`
}

// GetAutoscaling returns the value of Autoscaling.
func (s *HTCCluster) GetAutoscaling() OptAutoscalingProfile {
	return s.Autoscaling
}

// GetName returns the value of Name.
func (s *HTCCluster) GetName() OptString {
	return s.Name
}

// GetNodePools returns the value of NodePools.
func (s *HTCCluster) GetNodePools() []HTCNodePool {
	return s.NodePools
}

// GetRegion returns the value of Region.
func (s *HTCCluster) GetRegion() OptRescaleRegion {
	return s.Region
}

// GetStatus returns the value of Status.
func (s *HTCCluster) GetStatus() OptString {
	return s.Status
}

// GetSubnetwork returns the value of Subnetwork.
func (s *HTCCluster) GetSubnetwork() OptString {
	return s.Subnetwork
}

// GetVersion returns the value of Version.
func (s *HTCCluster) GetVersion() OptString {
	return s.Version
}

// SetAutoscaling sets the value of Autoscaling.
func (s *HTCCluster) SetAutoscaling(val OptAutoscalingProfile) {
	s.Autoscaling = val
}

// SetName sets the value of Name.
func (s *HTCCluster) SetName(val OptString) {
	s.Name = val
}

// SetNodePools sets the value of NodePools.
func (s *HTCCluster) SetNodePools(val []HTCNodePool) {
	s.NodePools = val
}

// SetRegion sets the value of Region.
func (s *HTCCluster) SetRegion(val OptRescaleRegion) {
	s.Region = val
}

// SetStatus sets the value of Status.
func (s *HTCCluster) SetStatus(val OptString) {
	s.Status = val
}

// SetSubnetwork sets the value of Subnetwork.
func (s *HTCCluster) SetSubnetwork(val OptString) {
	s.Subnetwork = val
}

// SetVersion sets the value of Version.
func (s *HTCCluster) SetVersion(val OptString) {
	s.Version = val
}

// Ref: #/components/schemas/HTCClusterStatusResponse
type HTCClusterStatusResponse struct {
	Clusters     []HTCCluster `json:"clusters"`
	GcpProjectId OptString    `json:"gcpProjectId"`
}

// GetClusters returns the value of Clusters.
func (s *HTCClusterStatusResponse) GetClusters() []HTCCluster {
	return s.Clusters
}

// GetGcpProjectId returns the value of GcpProjectId.
func (s *HTCClusterStatusResponse) GetGcpProjectId() OptString {
	return s.GcpProjectId
}

// SetClusters sets the value of Clusters.
func (s *HTCClusterStatusResponse) SetClusters(val []HTCCluster) {
	s.Clusters = val
}

// SetGcpProjectId sets the value of GcpProjectId.
func (s *HTCClusterStatusResponse) SetGcpProjectId(val OptString) {
	s.GcpProjectId = val
}

func (*HTCClusterStatusResponse) htcGcpClustersWorkspaceIdGetRes() {}

// Ref: #/components/schemas/HTCComputeEnvironment
type HTCComputeEnvironment struct {
	// The autoscaling profile used in the environment. Relevant only for GCP environments. "BALANCED" is
	// the default. "OPTIMIZE-UTILIZATION" aggressively scales down clusters, optimizing for batch
	// workloads with less sensitivity to start-up latency.
	ComputeScalingPolicy OptHTCComputeEnvironmentComputeScalingPolicy `json:"computeScalingPolicy"`
	// This nested object provides detailed information about the compute resources allocated to the
	// environment, aiding users in understanding the capabilities specifically of the `machineType`.
	Derived OptHTCComputeEnvironmentDerived `json:"derived"`
	// Indicates if simultaneous multithreading (SMT) is enabled. Affects performance for tasks that may
	// not benefit from parallelism. Useful for understanding the nature of CPU allocation for
	// high-performance tasks.
	Hyperthreading OptBool `json:"hyperthreading"`
	// The CSP-specific name for the instance type.
	MachineType OptString `json:"machineType"`
	// The instance priority type. "ON_DEMAND_ECONOMY" for spot instances, "ON_DEMAND_PRIORITY" for
	// on-demand instances. Spot instances ("ON_DEMAND_ECONOMY") offer cost savings but less reliability
	// compared to on-demand instances.
	Priority OptHTCComputeEnvironmentPriority `json:"priority"`
	// The CSP-specific region where the job will run. Selecting a region close to data sources or users
	// can reduce latency.
	Region OptHTCComputeEnvironmentRegion `json:"region"`
}

// GetComputeScalingPolicy returns the value of ComputeScalingPolicy.
func (s *HTCComputeEnvironment) GetComputeScalingPolicy() OptHTCComputeEnvironmentComputeScalingPolicy {
	return s.ComputeScalingPolicy
}

// GetDerived returns the value of Derived.
func (s *HTCComputeEnvironment) GetDerived() OptHTCComputeEnvironmentDerived {
	return s.Derived
}

// GetHyperthreading returns the value of Hyperthreading.
func (s *HTCComputeEnvironment) GetHyperthreading() OptBool {
	return s.Hyperthreading
}

// GetMachineType returns the value of MachineType.
func (s *HTCComputeEnvironment) GetMachineType() OptString {
	return s.MachineType
}

// GetPriority returns the value of Priority.
func (s *HTCComputeEnvironment) GetPriority() OptHTCComputeEnvironmentPriority {
	return s.Priority
}

// GetRegion returns the value of Region.
func (s *HTCComputeEnvironment) GetRegion() OptHTCComputeEnvironmentRegion {
	return s.Region
}

// SetComputeScalingPolicy sets the value of ComputeScalingPolicy.
func (s *HTCComputeEnvironment) SetComputeScalingPolicy(val OptHTCComputeEnvironmentComputeScalingPolicy) {
	s.ComputeScalingPolicy = val
}

// SetDerived sets the value of Derived.
func (s *HTCComputeEnvironment) SetDerived(val OptHTCComputeEnvironmentDerived) {
	s.Derived = val
}

// SetHyperthreading sets the value of Hyperthreading.
func (s *HTCComputeEnvironment) SetHyperthreading(val OptBool) {
	s.Hyperthreading = val
}

// SetMachineType sets the value of MachineType.
func (s *HTCComputeEnvironment) SetMachineType(val OptString) {
	s.MachineType = val
}

// SetPriority sets the value of Priority.
func (s *HTCComputeEnvironment) SetPriority(val OptHTCComputeEnvironmentPriority) {
	s.Priority = val
}

// SetRegion sets the value of Region.
func (s *HTCComputeEnvironment) SetRegion(val OptHTCComputeEnvironmentRegion) {
	s.Region = val
}

type HTCComputeEnvironmentComputeScalingPolicy string

const (
	HTCComputeEnvironmentComputeScalingPolicyPROFILEUNSPECIFIED  HTCComputeEnvironmentComputeScalingPolicy = "PROFILE_UNSPECIFIED"
	HTCComputeEnvironmentComputeScalingPolicyOPTIMIZEUTILIZATION HTCComputeEnvironmentComputeScalingPolicy = "OPTIMIZE_UTILIZATION"
	HTCComputeEnvironmentComputeScalingPolicyBALANCED            HTCComputeEnvironmentComputeScalingPolicy = "BALANCED"
	HTCComputeEnvironmentComputeScalingPolicyUNRECOGNIZED        HTCComputeEnvironmentComputeScalingPolicy = "UNRECOGNIZED"
)

// AllValues returns all HTCComputeEnvironmentComputeScalingPolicy values.
func (HTCComputeEnvironmentComputeScalingPolicy) AllValues() []HTCComputeEnvironmentComputeScalingPolicy {
	return []HTCComputeEnvironmentComputeScalingPolicy{
		HTCComputeEnvironmentComputeScalingPolicyPROFILEUNSPECIFIED,
		HTCComputeEnvironmentComputeScalingPolicyOPTIMIZEUTILIZATION,
		HTCComputeEnvironmentComputeScalingPolicyBALANCED,
		HTCComputeEnvironmentComputeScalingPolicyUNRECOGNIZED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s HTCComputeEnvironmentComputeScalingPolicy) MarshalText() ([]byte, error) {
	switch s {
	case HTCComputeEnvironmentComputeScalingPolicyPROFILEUNSPECIFIED:
		return []byte(s), nil
	case HTCComputeEnvironmentComputeScalingPolicyOPTIMIZEUTILIZATION:
		return []byte(s), nil
	case HTCComputeEnvironmentComputeScalingPolicyBALANCED:
		return []byte(s), nil
	case HTCComputeEnvironmentComputeScalingPolicyUNRECOGNIZED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *HTCComputeEnvironmentComputeScalingPolicy) UnmarshalText(data []byte) error {
	switch HTCComputeEnvironmentComputeScalingPolicy(data) {
	case HTCComputeEnvironmentComputeScalingPolicyPROFILEUNSPECIFIED:
		*s = HTCComputeEnvironmentComputeScalingPolicyPROFILEUNSPECIFIED
		return nil
	case HTCComputeEnvironmentComputeScalingPolicyOPTIMIZEUTILIZATION:
		*s = HTCComputeEnvironmentComputeScalingPolicyOPTIMIZEUTILIZATION
		return nil
	case HTCComputeEnvironmentComputeScalingPolicyBALANCED:
		*s = HTCComputeEnvironmentComputeScalingPolicyBALANCED
		return nil
	case HTCComputeEnvironmentComputeScalingPolicyUNRECOGNIZED:
		*s = HTCComputeEnvironmentComputeScalingPolicyUNRECOGNIZED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type HTCComputeEnvironmentDerived struct {
	// The CPU architecture of the environment.
	Architecture OptHTCComputeEnvironmentDerivedArchitecture `json:"architecture"`
	// The total memory available in the compute environment.
	Memory OptFloat64 `json:"memory"`
	// If swap is enabled for the node pool. Only for GCP.
	Swap OptBool `json:"swap"`
	// The number of virtual CPU cores allocated to the environment.
	VCPUs OptInt32 `json:"vCPUs"`
}

// GetArchitecture returns the value of Architecture.
func (s *HTCComputeEnvironmentDerived) GetArchitecture() OptHTCComputeEnvironmentDerivedArchitecture {
	return s.Architecture
}

// GetMemory returns the value of Memory.
func (s *HTCComputeEnvironmentDerived) GetMemory() OptFloat64 {
	return s.Memory
}

// GetSwap returns the value of Swap.
func (s *HTCComputeEnvironmentDerived) GetSwap() OptBool {
	return s.Swap
}

// GetVCPUs returns the value of VCPUs.
func (s *HTCComputeEnvironmentDerived) GetVCPUs() OptInt32 {
	return s.VCPUs
}

// SetArchitecture sets the value of Architecture.
func (s *HTCComputeEnvironmentDerived) SetArchitecture(val OptHTCComputeEnvironmentDerivedArchitecture) {
	s.Architecture = val
}

// SetMemory sets the value of Memory.
func (s *HTCComputeEnvironmentDerived) SetMemory(val OptFloat64) {
	s.Memory = val
}

// SetSwap sets the value of Swap.
func (s *HTCComputeEnvironmentDerived) SetSwap(val OptBool) {
	s.Swap = val
}

// SetVCPUs sets the value of VCPUs.
func (s *HTCComputeEnvironmentDerived) SetVCPUs(val OptInt32) {
	s.VCPUs = val
}

type HTCComputeEnvironmentDerivedArchitecture string

const (
	HTCComputeEnvironmentDerivedArchitectureAARCH64 HTCComputeEnvironmentDerivedArchitecture = "AARCH64"
	HTCComputeEnvironmentDerivedArchitectureX86     HTCComputeEnvironmentDerivedArchitecture = "X86"
	HTCComputeEnvironmentDerivedArchitectureA100    HTCComputeEnvironmentDerivedArchitecture = "A100"
)

// AllValues returns all HTCComputeEnvironmentDerivedArchitecture values.
func (HTCComputeEnvironmentDerivedArchitecture) AllValues() []HTCComputeEnvironmentDerivedArchitecture {
	return []HTCComputeEnvironmentDerivedArchitecture{
		HTCComputeEnvironmentDerivedArchitectureAARCH64,
		HTCComputeEnvironmentDerivedArchitectureX86,
		HTCComputeEnvironmentDerivedArchitectureA100,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s HTCComputeEnvironmentDerivedArchitecture) MarshalText() ([]byte, error) {
	switch s {
	case HTCComputeEnvironmentDerivedArchitectureAARCH64:
		return []byte(s), nil
	case HTCComputeEnvironmentDerivedArchitectureX86:
		return []byte(s), nil
	case HTCComputeEnvironmentDerivedArchitectureA100:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *HTCComputeEnvironmentDerivedArchitecture) UnmarshalText(data []byte) error {
	switch HTCComputeEnvironmentDerivedArchitecture(data) {
	case HTCComputeEnvironmentDerivedArchitectureAARCH64:
		*s = HTCComputeEnvironmentDerivedArchitectureAARCH64
		return nil
	case HTCComputeEnvironmentDerivedArchitectureX86:
		*s = HTCComputeEnvironmentDerivedArchitectureX86
		return nil
	case HTCComputeEnvironmentDerivedArchitectureA100:
		*s = HTCComputeEnvironmentDerivedArchitectureA100
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type HTCComputeEnvironmentPriority string

const (
	HTCComputeEnvironmentPriorityONDEMANDPRIORITY HTCComputeEnvironmentPriority = "ON_DEMAND_PRIORITY"
	HTCComputeEnvironmentPriorityONDEMANDECONOMY  HTCComputeEnvironmentPriority = "ON_DEMAND_ECONOMY"
)

// AllValues returns all HTCComputeEnvironmentPriority values.
func (HTCComputeEnvironmentPriority) AllValues() []HTCComputeEnvironmentPriority {
	return []HTCComputeEnvironmentPriority{
		HTCComputeEnvironmentPriorityONDEMANDPRIORITY,
		HTCComputeEnvironmentPriorityONDEMANDECONOMY,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s HTCComputeEnvironmentPriority) MarshalText() ([]byte, error) {
	switch s {
	case HTCComputeEnvironmentPriorityONDEMANDPRIORITY:
		return []byte(s), nil
	case HTCComputeEnvironmentPriorityONDEMANDECONOMY:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *HTCComputeEnvironmentPriority) UnmarshalText(data []byte) error {
	switch HTCComputeEnvironmentPriority(data) {
	case HTCComputeEnvironmentPriorityONDEMANDPRIORITY:
		*s = HTCComputeEnvironmentPriorityONDEMANDPRIORITY
		return nil
	case HTCComputeEnvironmentPriorityONDEMANDECONOMY:
		*s = HTCComputeEnvironmentPriorityONDEMANDECONOMY
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type HTCComputeEnvironmentRegion string

const (
	HTCComputeEnvironmentRegionAWSAPSOUTHEAST1     HTCComputeEnvironmentRegion = "AWS_AP_SOUTHEAST_1"
	HTCComputeEnvironmentRegionAWSCACENTRAL1       HTCComputeEnvironmentRegion = "AWS_CA_CENTRAL_1"
	HTCComputeEnvironmentRegionAWSEUNORTH1         HTCComputeEnvironmentRegion = "AWS_EU_NORTH_1"
	HTCComputeEnvironmentRegionAWSEUCENTRAL1       HTCComputeEnvironmentRegion = "AWS_EU_CENTRAL_1"
	HTCComputeEnvironmentRegionAWSEUWEST1          HTCComputeEnvironmentRegion = "AWS_EU_WEST_1"
	HTCComputeEnvironmentRegionAWSEUWEST2          HTCComputeEnvironmentRegion = "AWS_EU_WEST_2"
	HTCComputeEnvironmentRegionAWSEUWEST3          HTCComputeEnvironmentRegion = "AWS_EU_WEST_3"
	HTCComputeEnvironmentRegionAWSSAEAST1          HTCComputeEnvironmentRegion = "AWS_SA_EAST_1"
	HTCComputeEnvironmentRegionAWSUSEAST2          HTCComputeEnvironmentRegion = "AWS_US_EAST_2"
	HTCComputeEnvironmentRegionAWSUSWEST2          HTCComputeEnvironmentRegion = "AWS_US_WEST_2"
	HTCComputeEnvironmentRegionAWSUSEAST1          HTCComputeEnvironmentRegion = "AWS_US_EAST_1"
	HTCComputeEnvironmentRegionGCPASIASOUTHEAST1   HTCComputeEnvironmentRegion = "GCP_ASIA_SOUTHEAST_1"
	HTCComputeEnvironmentRegionGCPUSCENTRAL1       HTCComputeEnvironmentRegion = "GCP_US_CENTRAL_1"
	HTCComputeEnvironmentRegionGCPUSEAST1          HTCComputeEnvironmentRegion = "GCP_US_EAST_1"
	HTCComputeEnvironmentRegionGCPUSEAST2          HTCComputeEnvironmentRegion = "GCP_US_EAST_2"
	HTCComputeEnvironmentRegionGCPUSEAST4          HTCComputeEnvironmentRegion = "GCP_US_EAST_4"
	HTCComputeEnvironmentRegionGCPUSWEST1          HTCComputeEnvironmentRegion = "GCP_US_WEST_1"
	HTCComputeEnvironmentRegionGCPUSWEST4          HTCComputeEnvironmentRegion = "GCP_US_WEST_4"
	HTCComputeEnvironmentRegionGCPEUWEST1          HTCComputeEnvironmentRegion = "GCP_EU_WEST_1"
	HTCComputeEnvironmentRegionGCPEUWEST2          HTCComputeEnvironmentRegion = "GCP_EU_WEST_2"
	HTCComputeEnvironmentRegionGCPEUWEST3          HTCComputeEnvironmentRegion = "GCP_EU_WEST_3"
	HTCComputeEnvironmentRegionGCPEUWEST4          HTCComputeEnvironmentRegion = "GCP_EU_WEST_4"
	HTCComputeEnvironmentRegionGCPCACENTRAL1       HTCComputeEnvironmentRegion = "GCP_CA_CENTRAL_1"
	HTCComputeEnvironmentRegionNGCENOCH1           HTCComputeEnvironmentRegion = "NGC_ENOCH_1"
	HTCComputeEnvironmentRegionAZUREUSWEST2        HTCComputeEnvironmentRegion = "AZURE_US_WEST_2"
	HTCComputeEnvironmentRegionAZUREUSEAST2        HTCComputeEnvironmentRegion = "AZURE_US_EAST_2"
	HTCComputeEnvironmentRegionAZUREUSSOUTHCENTRAL HTCComputeEnvironmentRegion = "AZURE_US_SOUTHCENTRAL"
	HTCComputeEnvironmentRegionAZUREEUNORTH        HTCComputeEnvironmentRegion = "AZURE_EU_NORTH"
	HTCComputeEnvironmentRegionRCICELAND1          HTCComputeEnvironmentRegion = "RC_ICELAND_1"
	HTCComputeEnvironmentRegionUNASSIGNED          HTCComputeEnvironmentRegion = "UNASSIGNED"
)

// AllValues returns all HTCComputeEnvironmentRegion values.
func (HTCComputeEnvironmentRegion) AllValues() []HTCComputeEnvironmentRegion {
	return []HTCComputeEnvironmentRegion{
		HTCComputeEnvironmentRegionAWSAPSOUTHEAST1,
		HTCComputeEnvironmentRegionAWSCACENTRAL1,
		HTCComputeEnvironmentRegionAWSEUNORTH1,
		HTCComputeEnvironmentRegionAWSEUCENTRAL1,
		HTCComputeEnvironmentRegionAWSEUWEST1,
		HTCComputeEnvironmentRegionAWSEUWEST2,
		HTCComputeEnvironmentRegionAWSEUWEST3,
		HTCComputeEnvironmentRegionAWSSAEAST1,
		HTCComputeEnvironmentRegionAWSUSEAST2,
		HTCComputeEnvironmentRegionAWSUSWEST2,
		HTCComputeEnvironmentRegionAWSUSEAST1,
		HTCComputeEnvironmentRegionGCPASIASOUTHEAST1,
		HTCComputeEnvironmentRegionGCPUSCENTRAL1,
		HTCComputeEnvironmentRegionGCPUSEAST1,
		HTCComputeEnvironmentRegionGCPUSEAST2,
		HTCComputeEnvironmentRegionGCPUSEAST4,
		HTCComputeEnvironmentRegionGCPUSWEST1,
		HTCComputeEnvironmentRegionGCPUSWEST4,
		HTCComputeEnvironmentRegionGCPEUWEST1,
		HTCComputeEnvironmentRegionGCPEUWEST2,
		HTCComputeEnvironmentRegionGCPEUWEST3,
		HTCComputeEnvironmentRegionGCPEUWEST4,
		HTCComputeEnvironmentRegionGCPCACENTRAL1,
		HTCComputeEnvironmentRegionNGCENOCH1,
		HTCComputeEnvironmentRegionAZUREUSWEST2,
		HTCComputeEnvironmentRegionAZUREUSEAST2,
		HTCComputeEnvironmentRegionAZUREUSSOUTHCENTRAL,
		HTCComputeEnvironmentRegionAZUREEUNORTH,
		HTCComputeEnvironmentRegionRCICELAND1,
		HTCComputeEnvironmentRegionUNASSIGNED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s HTCComputeEnvironmentRegion) MarshalText() ([]byte, error) {
	switch s {
	case HTCComputeEnvironmentRegionAWSAPSOUTHEAST1:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionAWSCACENTRAL1:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionAWSEUNORTH1:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionAWSEUCENTRAL1:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionAWSEUWEST1:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionAWSEUWEST2:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionAWSEUWEST3:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionAWSSAEAST1:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionAWSUSEAST2:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionAWSUSWEST2:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionAWSUSEAST1:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionGCPASIASOUTHEAST1:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionGCPUSCENTRAL1:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionGCPUSEAST1:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionGCPUSEAST2:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionGCPUSEAST4:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionGCPUSWEST1:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionGCPUSWEST4:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionGCPEUWEST1:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionGCPEUWEST2:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionGCPEUWEST3:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionGCPEUWEST4:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionGCPCACENTRAL1:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionNGCENOCH1:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionAZUREUSWEST2:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionAZUREUSEAST2:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionAZUREUSSOUTHCENTRAL:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionAZUREEUNORTH:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionRCICELAND1:
		return []byte(s), nil
	case HTCComputeEnvironmentRegionUNASSIGNED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *HTCComputeEnvironmentRegion) UnmarshalText(data []byte) error {
	switch HTCComputeEnvironmentRegion(data) {
	case HTCComputeEnvironmentRegionAWSAPSOUTHEAST1:
		*s = HTCComputeEnvironmentRegionAWSAPSOUTHEAST1
		return nil
	case HTCComputeEnvironmentRegionAWSCACENTRAL1:
		*s = HTCComputeEnvironmentRegionAWSCACENTRAL1
		return nil
	case HTCComputeEnvironmentRegionAWSEUNORTH1:
		*s = HTCComputeEnvironmentRegionAWSEUNORTH1
		return nil
	case HTCComputeEnvironmentRegionAWSEUCENTRAL1:
		*s = HTCComputeEnvironmentRegionAWSEUCENTRAL1
		return nil
	case HTCComputeEnvironmentRegionAWSEUWEST1:
		*s = HTCComputeEnvironmentRegionAWSEUWEST1
		return nil
	case HTCComputeEnvironmentRegionAWSEUWEST2:
		*s = HTCComputeEnvironmentRegionAWSEUWEST2
		return nil
	case HTCComputeEnvironmentRegionAWSEUWEST3:
		*s = HTCComputeEnvironmentRegionAWSEUWEST3
		return nil
	case HTCComputeEnvironmentRegionAWSSAEAST1:
		*s = HTCComputeEnvironmentRegionAWSSAEAST1
		return nil
	case HTCComputeEnvironmentRegionAWSUSEAST2:
		*s = HTCComputeEnvironmentRegionAWSUSEAST2
		return nil
	case HTCComputeEnvironmentRegionAWSUSWEST2:
		*s = HTCComputeEnvironmentRegionAWSUSWEST2
		return nil
	case HTCComputeEnvironmentRegionAWSUSEAST1:
		*s = HTCComputeEnvironmentRegionAWSUSEAST1
		return nil
	case HTCComputeEnvironmentRegionGCPASIASOUTHEAST1:
		*s = HTCComputeEnvironmentRegionGCPASIASOUTHEAST1
		return nil
	case HTCComputeEnvironmentRegionGCPUSCENTRAL1:
		*s = HTCComputeEnvironmentRegionGCPUSCENTRAL1
		return nil
	case HTCComputeEnvironmentRegionGCPUSEAST1:
		*s = HTCComputeEnvironmentRegionGCPUSEAST1
		return nil
	case HTCComputeEnvironmentRegionGCPUSEAST2:
		*s = HTCComputeEnvironmentRegionGCPUSEAST2
		return nil
	case HTCComputeEnvironmentRegionGCPUSEAST4:
		*s = HTCComputeEnvironmentRegionGCPUSEAST4
		return nil
	case HTCComputeEnvironmentRegionGCPUSWEST1:
		*s = HTCComputeEnvironmentRegionGCPUSWEST1
		return nil
	case HTCComputeEnvironmentRegionGCPUSWEST4:
		*s = HTCComputeEnvironmentRegionGCPUSWEST4
		return nil
	case HTCComputeEnvironmentRegionGCPEUWEST1:
		*s = HTCComputeEnvironmentRegionGCPEUWEST1
		return nil
	case HTCComputeEnvironmentRegionGCPEUWEST2:
		*s = HTCComputeEnvironmentRegionGCPEUWEST2
		return nil
	case HTCComputeEnvironmentRegionGCPEUWEST3:
		*s = HTCComputeEnvironmentRegionGCPEUWEST3
		return nil
	case HTCComputeEnvironmentRegionGCPEUWEST4:
		*s = HTCComputeEnvironmentRegionGCPEUWEST4
		return nil
	case HTCComputeEnvironmentRegionGCPCACENTRAL1:
		*s = HTCComputeEnvironmentRegionGCPCACENTRAL1
		return nil
	case HTCComputeEnvironmentRegionNGCENOCH1:
		*s = HTCComputeEnvironmentRegionNGCENOCH1
		return nil
	case HTCComputeEnvironmentRegionAZUREUSWEST2:
		*s = HTCComputeEnvironmentRegionAZUREUSWEST2
		return nil
	case HTCComputeEnvironmentRegionAZUREUSEAST2:
		*s = HTCComputeEnvironmentRegionAZUREUSEAST2
		return nil
	case HTCComputeEnvironmentRegionAZUREUSSOUTHCENTRAL:
		*s = HTCComputeEnvironmentRegionAZUREUSSOUTHCENTRAL
		return nil
	case HTCComputeEnvironmentRegionAZUREEUNORTH:
		*s = HTCComputeEnvironmentRegionAZUREEUNORTH
		return nil
	case HTCComputeEnvironmentRegionRCICELAND1:
		*s = HTCComputeEnvironmentRegionRCICELAND1
		return nil
	case HTCComputeEnvironmentRegionUNASSIGNED:
		*s = HTCComputeEnvironmentRegionUNASSIGNED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/HTCImageStatus
type HTCImageStatus struct {
	Status OptStatus `json:"status"`
}

// GetStatus returns the value of Status.
func (s *HTCImageStatus) GetStatus() OptStatus {
	return s.Status
}

// SetStatus sets the value of Status.
func (s *HTCImageStatus) SetStatus(val OptStatus) {
	s.Status = val
}

func (*HTCImageStatus) htcProjectsProjectIdContainerRegistryImagesImageNameGetRes() {}

// Ref: #/components/schemas/HTCImages
type HTCImages struct {
	ContainerRegistry OptString `json:"containerRegistry"`
	Images            []string  `json:"images"`
}

// GetContainerRegistry returns the value of ContainerRegistry.
func (s *HTCImages) GetContainerRegistry() OptString {
	return s.ContainerRegistry
}

// GetImages returns the value of Images.
func (s *HTCImages) GetImages() []string {
	return s.Images
}

// SetContainerRegistry sets the value of ContainerRegistry.
func (s *HTCImages) SetContainerRegistry(val OptString) {
	s.ContainerRegistry = val
}

// SetImages sets the value of Images.
func (s *HTCImages) SetImages(val []string) {
	s.Images = val
}

func (*HTCImages) htcProjectsProjectIdContainerRegistryImagesGetRes() {}

// Ref: #/components/schemas/HTCInfraResource
type HTCInfraResource struct {
	Name           OptString  `json:"name"`
	ResourceId     OptString  `json:"resourceId"`
	ResourceStatus OptStatus1 `json:"resourceStatus"`
}

// GetName returns the value of Name.
func (s *HTCInfraResource) GetName() OptString {
	return s.Name
}

// GetResourceId returns the value of ResourceId.
func (s *HTCInfraResource) GetResourceId() OptString {
	return s.ResourceId
}

// GetResourceStatus returns the value of ResourceStatus.
func (s *HTCInfraResource) GetResourceStatus() OptStatus1 {
	return s.ResourceStatus
}

// SetName sets the value of Name.
func (s *HTCInfraResource) SetName(val OptString) {
	s.Name = val
}

// SetResourceId sets the value of ResourceId.
func (s *HTCInfraResource) SetResourceId(val OptString) {
	s.ResourceId = val
}

// SetResourceStatus sets the value of ResourceStatus.
func (s *HTCInfraResource) SetResourceStatus(val OptStatus1) {
	s.ResourceStatus = val
}

func (*HTCInfraResource) htcRegionsGetRes() {}

// Ref: #/components/schemas/HTCJob
type HTCJob struct {
	Architecture            OptArchitecture            `json:"architecture"`
	Commands                []string                   `json:"commands"`
	CompletedAt             OptInstant                 `json:"completedAt"`
	Container               OptContainerDetails        `json:"container"`
	CreatedAt               OptInstant                 `json:"createdAt"`
	CreatedBy               OptString                  `json:"createdBy"`
	Envs                    []EnvPair                  `json:"envs"`
	ExecTimeoutSeconds      OptInt32                   `json:"execTimeoutSeconds"`
	FailureCode             OptHTCJobFailureCode       `json:"failureCode"`
	Group                   OptString                  `json:"group"`
	ImageName               OptString                  `json:"imageName"`
	InstanceId              OptString                  `json:"instanceId"`
	InstanceLabels          OptInstanceLabels          `json:"instanceLabels"`
	JobExecutionEnvironment OptJobExecutionEnvironment `json:"jobExecutionEnvironment"`
	JobUUID                 OptString                  `json:"jobUUID"`
	MaxDiskGiB              OptInt32                   `json:"maxDiskGiB"`
	MaxMemory               OptInt32                   `json:"maxMemory"`
	MaxSwap                 OptInt32                   `json:"maxSwap"`
	MaxVCpus                OptInt32                   `json:"maxVCpus"`
	ProjectId               OptString                  `json:"projectId"`
	ProviderJobId           OptString                  `json:"providerJobId"`
	Region                  OptRescaleRegion           `json:"region"`
	StartedAt               OptInstant                 `json:"startedAt"`
	Status                  OptRescaleJobStatus        `json:"status"`
	StatusReason            OptString                  `json:"statusReason"`
	Tags                    []Tag                      `json:"tags"`
	TaskId                  OptString                  `json:"taskId"`
	UpdatedAt               OptInstant                 `json:"updatedAt"`
	WorkspaceId             OptString                  `json:"workspaceId"`
}

// GetArchitecture returns the value of Architecture.
func (s *HTCJob) GetArchitecture() OptArchitecture {
	return s.Architecture
}

// GetCommands returns the value of Commands.
func (s *HTCJob) GetCommands() []string {
	return s.Commands
}

// GetCompletedAt returns the value of CompletedAt.
func (s *HTCJob) GetCompletedAt() OptInstant {
	return s.CompletedAt
}

// GetContainer returns the value of Container.
func (s *HTCJob) GetContainer() OptContainerDetails {
	return s.Container
}

// GetCreatedAt returns the value of CreatedAt.
func (s *HTCJob) GetCreatedAt() OptInstant {
	return s.CreatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *HTCJob) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetEnvs returns the value of Envs.
func (s *HTCJob) GetEnvs() []EnvPair {
	return s.Envs
}

// GetExecTimeoutSeconds returns the value of ExecTimeoutSeconds.
func (s *HTCJob) GetExecTimeoutSeconds() OptInt32 {
	return s.ExecTimeoutSeconds
}

// GetFailureCode returns the value of FailureCode.
func (s *HTCJob) GetFailureCode() OptHTCJobFailureCode {
	return s.FailureCode
}

// GetGroup returns the value of Group.
func (s *HTCJob) GetGroup() OptString {
	return s.Group
}

// GetImageName returns the value of ImageName.
func (s *HTCJob) GetImageName() OptString {
	return s.ImageName
}

// GetInstanceId returns the value of InstanceId.
func (s *HTCJob) GetInstanceId() OptString {
	return s.InstanceId
}

// GetInstanceLabels returns the value of InstanceLabels.
func (s *HTCJob) GetInstanceLabels() OptInstanceLabels {
	return s.InstanceLabels
}

// GetJobExecutionEnvironment returns the value of JobExecutionEnvironment.
func (s *HTCJob) GetJobExecutionEnvironment() OptJobExecutionEnvironment {
	return s.JobExecutionEnvironment
}

// GetJobUUID returns the value of JobUUID.
func (s *HTCJob) GetJobUUID() OptString {
	return s.JobUUID
}

// GetMaxDiskGiB returns the value of MaxDiskGiB.
func (s *HTCJob) GetMaxDiskGiB() OptInt32 {
	return s.MaxDiskGiB
}

// GetMaxMemory returns the value of MaxMemory.
func (s *HTCJob) GetMaxMemory() OptInt32 {
	return s.MaxMemory
}

// GetMaxSwap returns the value of MaxSwap.
func (s *HTCJob) GetMaxSwap() OptInt32 {
	return s.MaxSwap
}

// GetMaxVCpus returns the value of MaxVCpus.
func (s *HTCJob) GetMaxVCpus() OptInt32 {
	return s.MaxVCpus
}

// GetProjectId returns the value of ProjectId.
func (s *HTCJob) GetProjectId() OptString {
	return s.ProjectId
}

// GetProviderJobId returns the value of ProviderJobId.
func (s *HTCJob) GetProviderJobId() OptString {
	return s.ProviderJobId
}

// GetRegion returns the value of Region.
func (s *HTCJob) GetRegion() OptRescaleRegion {
	return s.Region
}

// GetStartedAt returns the value of StartedAt.
func (s *HTCJob) GetStartedAt() OptInstant {
	return s.StartedAt
}

// GetStatus returns the value of Status.
func (s *HTCJob) GetStatus() OptRescaleJobStatus {
	return s.Status
}

// GetStatusReason returns the value of StatusReason.
func (s *HTCJob) GetStatusReason() OptString {
	return s.StatusReason
}

// GetTags returns the value of Tags.
func (s *HTCJob) GetTags() []Tag {
	return s.Tags
}

// GetTaskId returns the value of TaskId.
func (s *HTCJob) GetTaskId() OptString {
	return s.TaskId
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *HTCJob) GetUpdatedAt() OptInstant {
	return s.UpdatedAt
}

// GetWorkspaceId returns the value of WorkspaceId.
func (s *HTCJob) GetWorkspaceId() OptString {
	return s.WorkspaceId
}

// SetArchitecture sets the value of Architecture.
func (s *HTCJob) SetArchitecture(val OptArchitecture) {
	s.Architecture = val
}

// SetCommands sets the value of Commands.
func (s *HTCJob) SetCommands(val []string) {
	s.Commands = val
}

// SetCompletedAt sets the value of CompletedAt.
func (s *HTCJob) SetCompletedAt(val OptInstant) {
	s.CompletedAt = val
}

// SetContainer sets the value of Container.
func (s *HTCJob) SetContainer(val OptContainerDetails) {
	s.Container = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *HTCJob) SetCreatedAt(val OptInstant) {
	s.CreatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *HTCJob) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetEnvs sets the value of Envs.
func (s *HTCJob) SetEnvs(val []EnvPair) {
	s.Envs = val
}

// SetExecTimeoutSeconds sets the value of ExecTimeoutSeconds.
func (s *HTCJob) SetExecTimeoutSeconds(val OptInt32) {
	s.ExecTimeoutSeconds = val
}

// SetFailureCode sets the value of FailureCode.
func (s *HTCJob) SetFailureCode(val OptHTCJobFailureCode) {
	s.FailureCode = val
}

// SetGroup sets the value of Group.
func (s *HTCJob) SetGroup(val OptString) {
	s.Group = val
}

// SetImageName sets the value of ImageName.
func (s *HTCJob) SetImageName(val OptString) {
	s.ImageName = val
}

// SetInstanceId sets the value of InstanceId.
func (s *HTCJob) SetInstanceId(val OptString) {
	s.InstanceId = val
}

// SetInstanceLabels sets the value of InstanceLabels.
func (s *HTCJob) SetInstanceLabels(val OptInstanceLabels) {
	s.InstanceLabels = val
}

// SetJobExecutionEnvironment sets the value of JobExecutionEnvironment.
func (s *HTCJob) SetJobExecutionEnvironment(val OptJobExecutionEnvironment) {
	s.JobExecutionEnvironment = val
}

// SetJobUUID sets the value of JobUUID.
func (s *HTCJob) SetJobUUID(val OptString) {
	s.JobUUID = val
}

// SetMaxDiskGiB sets the value of MaxDiskGiB.
func (s *HTCJob) SetMaxDiskGiB(val OptInt32) {
	s.MaxDiskGiB = val
}

// SetMaxMemory sets the value of MaxMemory.
func (s *HTCJob) SetMaxMemory(val OptInt32) {
	s.MaxMemory = val
}

// SetMaxSwap sets the value of MaxSwap.
func (s *HTCJob) SetMaxSwap(val OptInt32) {
	s.MaxSwap = val
}

// SetMaxVCpus sets the value of MaxVCpus.
func (s *HTCJob) SetMaxVCpus(val OptInt32) {
	s.MaxVCpus = val
}

// SetProjectId sets the value of ProjectId.
func (s *HTCJob) SetProjectId(val OptString) {
	s.ProjectId = val
}

// SetProviderJobId sets the value of ProviderJobId.
func (s *HTCJob) SetProviderJobId(val OptString) {
	s.ProviderJobId = val
}

// SetRegion sets the value of Region.
func (s *HTCJob) SetRegion(val OptRescaleRegion) {
	s.Region = val
}

// SetStartedAt sets the value of StartedAt.
func (s *HTCJob) SetStartedAt(val OptInstant) {
	s.StartedAt = val
}

// SetStatus sets the value of Status.
func (s *HTCJob) SetStatus(val OptRescaleJobStatus) {
	s.Status = val
}

// SetStatusReason sets the value of StatusReason.
func (s *HTCJob) SetStatusReason(val OptString) {
	s.StatusReason = val
}

// SetTags sets the value of Tags.
func (s *HTCJob) SetTags(val []Tag) {
	s.Tags = val
}

// SetTaskId sets the value of TaskId.
func (s *HTCJob) SetTaskId(val OptString) {
	s.TaskId = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *HTCJob) SetUpdatedAt(val OptInstant) {
	s.UpdatedAt = val
}

// SetWorkspaceId sets the value of WorkspaceId.
func (s *HTCJob) SetWorkspaceId(val OptString) {
	s.WorkspaceId = val
}

func (*HTCJob) htcProjectsProjectIdTasksTaskIdJobsJobIdGetRes() {}

// Ref: #/components/schemas/HTCJobDefinition
type HTCJobDefinition struct {
	Architecture       OptArchitecture `json:"architecture"`
	Claims             []NameValuePair `json:"claims"`
	Commands           []string        `json:"commands"`
	Envs               []EnvPair       `json:"envs"`
	ExecTimeoutSeconds OptInt32        `json:"execTimeoutSeconds"`
	ImageName          string          `json:"imageName"`
	// MaxDiskGiB is supported on GCP only.
	MaxDiskGiB OptInt32 `json:"maxDiskGiB"`
	MaxMemory  OptInt32 `json:"maxMemory"`
	// On AWS, maxSwap allows swap memory to be used, up to the limit. On other providers, swap is not
	// available, but maxSwap is added to the maxMemory to provide the same amount of available space.
	// The default value is 2000 MB.
	MaxSwap  OptInt32                `json:"maxSwap"`
	MaxVCpus OptInt32                `json:"maxVCpus"`
	Priority OptJobPriority          `json:"priority"`
	Tags     OptHTCJobDefinitionTags `json:"tags"`
}

// GetArchitecture returns the value of Architecture.
func (s *HTCJobDefinition) GetArchitecture() OptArchitecture {
	return s.Architecture
}

// GetClaims returns the value of Claims.
func (s *HTCJobDefinition) GetClaims() []NameValuePair {
	return s.Claims
}

// GetCommands returns the value of Commands.
func (s *HTCJobDefinition) GetCommands() []string {
	return s.Commands
}

// GetEnvs returns the value of Envs.
func (s *HTCJobDefinition) GetEnvs() []EnvPair {
	return s.Envs
}

// GetExecTimeoutSeconds returns the value of ExecTimeoutSeconds.
func (s *HTCJobDefinition) GetExecTimeoutSeconds() OptInt32 {
	return s.ExecTimeoutSeconds
}

// GetImageName returns the value of ImageName.
func (s *HTCJobDefinition) GetImageName() string {
	return s.ImageName
}

// GetMaxDiskGiB returns the value of MaxDiskGiB.
func (s *HTCJobDefinition) GetMaxDiskGiB() OptInt32 {
	return s.MaxDiskGiB
}

// GetMaxMemory returns the value of MaxMemory.
func (s *HTCJobDefinition) GetMaxMemory() OptInt32 {
	return s.MaxMemory
}

// GetMaxSwap returns the value of MaxSwap.
func (s *HTCJobDefinition) GetMaxSwap() OptInt32 {
	return s.MaxSwap
}

// GetMaxVCpus returns the value of MaxVCpus.
func (s *HTCJobDefinition) GetMaxVCpus() OptInt32 {
	return s.MaxVCpus
}

// GetPriority returns the value of Priority.
func (s *HTCJobDefinition) GetPriority() OptJobPriority {
	return s.Priority
}

// GetTags returns the value of Tags.
func (s *HTCJobDefinition) GetTags() OptHTCJobDefinitionTags {
	return s.Tags
}

// SetArchitecture sets the value of Architecture.
func (s *HTCJobDefinition) SetArchitecture(val OptArchitecture) {
	s.Architecture = val
}

// SetClaims sets the value of Claims.
func (s *HTCJobDefinition) SetClaims(val []NameValuePair) {
	s.Claims = val
}

// SetCommands sets the value of Commands.
func (s *HTCJobDefinition) SetCommands(val []string) {
	s.Commands = val
}

// SetEnvs sets the value of Envs.
func (s *HTCJobDefinition) SetEnvs(val []EnvPair) {
	s.Envs = val
}

// SetExecTimeoutSeconds sets the value of ExecTimeoutSeconds.
func (s *HTCJobDefinition) SetExecTimeoutSeconds(val OptInt32) {
	s.ExecTimeoutSeconds = val
}

// SetImageName sets the value of ImageName.
func (s *HTCJobDefinition) SetImageName(val string) {
	s.ImageName = val
}

// SetMaxDiskGiB sets the value of MaxDiskGiB.
func (s *HTCJobDefinition) SetMaxDiskGiB(val OptInt32) {
	s.MaxDiskGiB = val
}

// SetMaxMemory sets the value of MaxMemory.
func (s *HTCJobDefinition) SetMaxMemory(val OptInt32) {
	s.MaxMemory = val
}

// SetMaxSwap sets the value of MaxSwap.
func (s *HTCJobDefinition) SetMaxSwap(val OptInt32) {
	s.MaxSwap = val
}

// SetMaxVCpus sets the value of MaxVCpus.
func (s *HTCJobDefinition) SetMaxVCpus(val OptInt32) {
	s.MaxVCpus = val
}

// SetPriority sets the value of Priority.
func (s *HTCJobDefinition) SetPriority(val OptJobPriority) {
	s.Priority = val
}

// SetTags sets the value of Tags.
func (s *HTCJobDefinition) SetTags(val OptHTCJobDefinitionTags) {
	s.Tags = val
}

type HTCJobDefinitionTags map[string]string

func (s *HTCJobDefinitionTags) init() HTCJobDefinitionTags {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

type HTCJobFailureCode string

const (
	HTCJobFailureCodeErrorUnknownFailure           HTCJobFailureCode = "ErrorUnknownFailure"
	HTCJobFailureCodeErrorTimeout                  HTCJobFailureCode = "ErrorTimeout"
	HTCJobFailureCodeErrorNotEnoughMemory          HTCJobFailureCode = "ErrorNotEnoughMemory"
	HTCJobFailureCodeErrorNonZeroContainerExitCode HTCJobFailureCode = "ErrorNonZeroContainerExitCode"
	HTCJobFailureCodeErrorCostExceeded             HTCJobFailureCode = "ErrorCostExceeded"
	HTCJobFailureCodeErrorInfrastructureFault      HTCJobFailureCode = "ErrorInfrastructureFault"
	HTCJobFailureCodeErrorInstanceTermination      HTCJobFailureCode = "ErrorInstanceTermination"
	HTCJobFailureCodeErrorStartingContainer        HTCJobFailureCode = "ErrorStartingContainer"
	HTCJobFailureCodeErrorProviderDown             HTCJobFailureCode = "ErrorProviderDown"
	HTCJobFailureCodeErrorProviderRegionDown       HTCJobFailureCode = "ErrorProviderRegionDown"
)

// AllValues returns all HTCJobFailureCode values.
func (HTCJobFailureCode) AllValues() []HTCJobFailureCode {
	return []HTCJobFailureCode{
		HTCJobFailureCodeErrorUnknownFailure,
		HTCJobFailureCodeErrorTimeout,
		HTCJobFailureCodeErrorNotEnoughMemory,
		HTCJobFailureCodeErrorNonZeroContainerExitCode,
		HTCJobFailureCodeErrorCostExceeded,
		HTCJobFailureCodeErrorInfrastructureFault,
		HTCJobFailureCodeErrorInstanceTermination,
		HTCJobFailureCodeErrorStartingContainer,
		HTCJobFailureCodeErrorProviderDown,
		HTCJobFailureCodeErrorProviderRegionDown,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s HTCJobFailureCode) MarshalText() ([]byte, error) {
	switch s {
	case HTCJobFailureCodeErrorUnknownFailure:
		return []byte(s), nil
	case HTCJobFailureCodeErrorTimeout:
		return []byte(s), nil
	case HTCJobFailureCodeErrorNotEnoughMemory:
		return []byte(s), nil
	case HTCJobFailureCodeErrorNonZeroContainerExitCode:
		return []byte(s), nil
	case HTCJobFailureCodeErrorCostExceeded:
		return []byte(s), nil
	case HTCJobFailureCodeErrorInfrastructureFault:
		return []byte(s), nil
	case HTCJobFailureCodeErrorInstanceTermination:
		return []byte(s), nil
	case HTCJobFailureCodeErrorStartingContainer:
		return []byte(s), nil
	case HTCJobFailureCodeErrorProviderDown:
		return []byte(s), nil
	case HTCJobFailureCodeErrorProviderRegionDown:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *HTCJobFailureCode) UnmarshalText(data []byte) error {
	switch HTCJobFailureCode(data) {
	case HTCJobFailureCodeErrorUnknownFailure:
		*s = HTCJobFailureCodeErrorUnknownFailure
		return nil
	case HTCJobFailureCodeErrorTimeout:
		*s = HTCJobFailureCodeErrorTimeout
		return nil
	case HTCJobFailureCodeErrorNotEnoughMemory:
		*s = HTCJobFailureCodeErrorNotEnoughMemory
		return nil
	case HTCJobFailureCodeErrorNonZeroContainerExitCode:
		*s = HTCJobFailureCodeErrorNonZeroContainerExitCode
		return nil
	case HTCJobFailureCodeErrorCostExceeded:
		*s = HTCJobFailureCodeErrorCostExceeded
		return nil
	case HTCJobFailureCodeErrorInfrastructureFault:
		*s = HTCJobFailureCodeErrorInfrastructureFault
		return nil
	case HTCJobFailureCodeErrorInstanceTermination:
		*s = HTCJobFailureCodeErrorInstanceTermination
		return nil
	case HTCJobFailureCodeErrorStartingContainer:
		*s = HTCJobFailureCodeErrorStartingContainer
		return nil
	case HTCJobFailureCodeErrorProviderDown:
		*s = HTCJobFailureCodeErrorProviderDown
		return nil
	case HTCJobFailureCodeErrorProviderRegionDown:
		*s = HTCJobFailureCodeErrorProviderRegionDown
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/HTCJobSubmitRequest
type HTCJobSubmitRequest struct {
	BatchSize           OptInt32              `json:"batchSize"`
	CloudProvider       OptCloudProvider      `json:"cloudProvider"`
	CreatedBy           OptString             `json:"createdBy"`
	Experimental        OptExperimentalFields `json:"experimental"`
	Group               OptString             `json:"group"`
	HtcJobDefinition    HTCJobDefinition      `json:"htcJobDefinition"`
	JobDefinitionName   OptString             `json:"jobDefinitionName"`
	JobName             OptString             `json:"jobName"`
	ParentJobId         OptString             `json:"parentJobId"`
	ProjectId           OptString             `json:"projectId"`
	Regions             []RescaleRegion       `json:"regions"`
	RescaleTimeReceived OptDateTime           `json:"rescaleTimeReceived"`
	RetryStrategy       OptHTCRetryStrategy   `json:"retryStrategy"`
	Tags                []Tag                 `json:"tags"`
	TaskId              OptString             `json:"taskId"`
	WorkspaceId         OptString             `json:"workspaceId"`
}

// GetBatchSize returns the value of BatchSize.
func (s *HTCJobSubmitRequest) GetBatchSize() OptInt32 {
	return s.BatchSize
}

// GetCloudProvider returns the value of CloudProvider.
func (s *HTCJobSubmitRequest) GetCloudProvider() OptCloudProvider {
	return s.CloudProvider
}

// GetCreatedBy returns the value of CreatedBy.
func (s *HTCJobSubmitRequest) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetExperimental returns the value of Experimental.
func (s *HTCJobSubmitRequest) GetExperimental() OptExperimentalFields {
	return s.Experimental
}

// GetGroup returns the value of Group.
func (s *HTCJobSubmitRequest) GetGroup() OptString {
	return s.Group
}

// GetHtcJobDefinition returns the value of HtcJobDefinition.
func (s *HTCJobSubmitRequest) GetHtcJobDefinition() HTCJobDefinition {
	return s.HtcJobDefinition
}

// GetJobDefinitionName returns the value of JobDefinitionName.
func (s *HTCJobSubmitRequest) GetJobDefinitionName() OptString {
	return s.JobDefinitionName
}

// GetJobName returns the value of JobName.
func (s *HTCJobSubmitRequest) GetJobName() OptString {
	return s.JobName
}

// GetParentJobId returns the value of ParentJobId.
func (s *HTCJobSubmitRequest) GetParentJobId() OptString {
	return s.ParentJobId
}

// GetProjectId returns the value of ProjectId.
func (s *HTCJobSubmitRequest) GetProjectId() OptString {
	return s.ProjectId
}

// GetRegions returns the value of Regions.
func (s *HTCJobSubmitRequest) GetRegions() []RescaleRegion {
	return s.Regions
}

// GetRescaleTimeReceived returns the value of RescaleTimeReceived.
func (s *HTCJobSubmitRequest) GetRescaleTimeReceived() OptDateTime {
	return s.RescaleTimeReceived
}

// GetRetryStrategy returns the value of RetryStrategy.
func (s *HTCJobSubmitRequest) GetRetryStrategy() OptHTCRetryStrategy {
	return s.RetryStrategy
}

// GetTags returns the value of Tags.
func (s *HTCJobSubmitRequest) GetTags() []Tag {
	return s.Tags
}

// GetTaskId returns the value of TaskId.
func (s *HTCJobSubmitRequest) GetTaskId() OptString {
	return s.TaskId
}

// GetWorkspaceId returns the value of WorkspaceId.
func (s *HTCJobSubmitRequest) GetWorkspaceId() OptString {
	return s.WorkspaceId
}

// SetBatchSize sets the value of BatchSize.
func (s *HTCJobSubmitRequest) SetBatchSize(val OptInt32) {
	s.BatchSize = val
}

// SetCloudProvider sets the value of CloudProvider.
func (s *HTCJobSubmitRequest) SetCloudProvider(val OptCloudProvider) {
	s.CloudProvider = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *HTCJobSubmitRequest) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetExperimental sets the value of Experimental.
func (s *HTCJobSubmitRequest) SetExperimental(val OptExperimentalFields) {
	s.Experimental = val
}

// SetGroup sets the value of Group.
func (s *HTCJobSubmitRequest) SetGroup(val OptString) {
	s.Group = val
}

// SetHtcJobDefinition sets the value of HtcJobDefinition.
func (s *HTCJobSubmitRequest) SetHtcJobDefinition(val HTCJobDefinition) {
	s.HtcJobDefinition = val
}

// SetJobDefinitionName sets the value of JobDefinitionName.
func (s *HTCJobSubmitRequest) SetJobDefinitionName(val OptString) {
	s.JobDefinitionName = val
}

// SetJobName sets the value of JobName.
func (s *HTCJobSubmitRequest) SetJobName(val OptString) {
	s.JobName = val
}

// SetParentJobId sets the value of ParentJobId.
func (s *HTCJobSubmitRequest) SetParentJobId(val OptString) {
	s.ParentJobId = val
}

// SetProjectId sets the value of ProjectId.
func (s *HTCJobSubmitRequest) SetProjectId(val OptString) {
	s.ProjectId = val
}

// SetRegions sets the value of Regions.
func (s *HTCJobSubmitRequest) SetRegions(val []RescaleRegion) {
	s.Regions = val
}

// SetRescaleTimeReceived sets the value of RescaleTimeReceived.
func (s *HTCJobSubmitRequest) SetRescaleTimeReceived(val OptDateTime) {
	s.RescaleTimeReceived = val
}

// SetRetryStrategy sets the value of RetryStrategy.
func (s *HTCJobSubmitRequest) SetRetryStrategy(val OptHTCRetryStrategy) {
	s.RetryStrategy = val
}

// SetTags sets the value of Tags.
func (s *HTCJobSubmitRequest) SetTags(val []Tag) {
	s.Tags = val
}

// SetTaskId sets the value of TaskId.
func (s *HTCJobSubmitRequest) SetTaskId(val OptString) {
	s.TaskId = val
}

// SetWorkspaceId sets the value of WorkspaceId.
func (s *HTCJobSubmitRequest) SetWorkspaceId(val OptString) {
	s.WorkspaceId = val
}

type HTCJobSubmitRequests []HTCJobSubmitRequest

func (*HTCJobSubmitRequests) htcProjectsProjectIdTasksTaskIdJobsBatchPostRes() {}

// Ref: #/components/schemas/HTCJobs
type HTCJobs struct {
	Items []HTCJob `json:"items"`
	Next  OptURI   `json:"next"`
}

// GetItems returns the value of Items.
func (s *HTCJobs) GetItems() []HTCJob {
	return s.Items
}

// GetNext returns the value of Next.
func (s *HTCJobs) GetNext() OptURI {
	return s.Next
}

// SetItems sets the value of Items.
func (s *HTCJobs) SetItems(val []HTCJob) {
	s.Items = val
}

// SetNext sets the value of Next.
func (s *HTCJobs) SetNext(val OptURI) {
	s.Next = val
}

func (*HTCJobs) htcProjectsProjectIdTasksTaskIdJobsGetRes() {}

// Ref: #/components/schemas/HTCLimitCreate
type HTCLimitCreate struct {
	ModifierRole ModifierRole `json:"modifierRole"`
	VCPUs        int32        `json:"vCPUs"`
}

// GetModifierRole returns the value of ModifierRole.
func (s *HTCLimitCreate) GetModifierRole() ModifierRole {
	return s.ModifierRole
}

// GetVCPUs returns the value of VCPUs.
func (s *HTCLimitCreate) GetVCPUs() int32 {
	return s.VCPUs
}

// SetModifierRole sets the value of ModifierRole.
func (s *HTCLimitCreate) SetModifierRole(val ModifierRole) {
	s.ModifierRole = val
}

// SetVCPUs sets the value of VCPUs.
func (s *HTCLimitCreate) SetVCPUs(val int32) {
	s.VCPUs = val
}

// Ref: #/components/schemas/HTCLimitUpdate
type HTCLimitUpdate struct {
	VCPUs int32 `json:"vCPUs"`
}

// GetVCPUs returns the value of VCPUs.
func (s *HTCLimitUpdate) GetVCPUs() int32 {
	return s.VCPUs
}

// SetVCPUs sets the value of VCPUs.
func (s *HTCLimitUpdate) SetVCPUs(val int32) {
	s.VCPUs = val
}

// Ref: #/components/schemas/HTCNodePool
type HTCNodePool struct {
	Autoscaling  OptAutoscalingConfig `json:"autoscaling"`
	InstanceType OptString            `json:"instanceType"`
	Name         OptString            `json:"name"`
	Status       OptString            `json:"status"`
	Version      OptString            `json:"version"`
}

// GetAutoscaling returns the value of Autoscaling.
func (s *HTCNodePool) GetAutoscaling() OptAutoscalingConfig {
	return s.Autoscaling
}

// GetInstanceType returns the value of InstanceType.
func (s *HTCNodePool) GetInstanceType() OptString {
	return s.InstanceType
}

// GetName returns the value of Name.
func (s *HTCNodePool) GetName() OptString {
	return s.Name
}

// GetStatus returns the value of Status.
func (s *HTCNodePool) GetStatus() OptString {
	return s.Status
}

// GetVersion returns the value of Version.
func (s *HTCNodePool) GetVersion() OptString {
	return s.Version
}

// SetAutoscaling sets the value of Autoscaling.
func (s *HTCNodePool) SetAutoscaling(val OptAutoscalingConfig) {
	s.Autoscaling = val
}

// SetInstanceType sets the value of InstanceType.
func (s *HTCNodePool) SetInstanceType(val OptString) {
	s.InstanceType = val
}

// SetName sets the value of Name.
func (s *HTCNodePool) SetName(val OptString) {
	s.Name = val
}

// SetStatus sets the value of Status.
func (s *HTCNodePool) SetStatus(val OptString) {
	s.Status = val
}

// SetVersion sets the value of Version.
func (s *HTCNodePool) SetVersion(val OptString) {
	s.Version = val
}

// Ref: #/components/schemas/HTCProject
type HTCProject struct {
	ContainerRegistry  OptString           `json:"containerRegistry"`
	CreatedAt          OptDateTime         `json:"createdAt"`
	CreatedBy          OptString           `json:"createdBy"`
	OrganizationCode   OptNilString        `json:"organizationCode"`
	ProjectDescription string              `json:"projectDescription"`
	ProjectFolderPath  OptString           `json:"projectFolderPath"`
	ProjectId          OptString           `json:"projectId"`
	ProjectName        string              `json:"projectName"`
	RegionSettings     []HTCRegionSettings `json:"regionSettings"`
	Regions            []RescaleRegion     `json:"regions"`
	Repositories       []string            `json:"repositories"`
	WorkspaceId        OptString           `json:"workspaceId"`
}

// GetContainerRegistry returns the value of ContainerRegistry.
func (s *HTCProject) GetContainerRegistry() OptString {
	return s.ContainerRegistry
}

// GetCreatedAt returns the value of CreatedAt.
func (s *HTCProject) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *HTCProject) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetOrganizationCode returns the value of OrganizationCode.
func (s *HTCProject) GetOrganizationCode() OptNilString {
	return s.OrganizationCode
}

// GetProjectDescription returns the value of ProjectDescription.
func (s *HTCProject) GetProjectDescription() string {
	return s.ProjectDescription
}

// GetProjectFolderPath returns the value of ProjectFolderPath.
func (s *HTCProject) GetProjectFolderPath() OptString {
	return s.ProjectFolderPath
}

// GetProjectId returns the value of ProjectId.
func (s *HTCProject) GetProjectId() OptString {
	return s.ProjectId
}

// GetProjectName returns the value of ProjectName.
func (s *HTCProject) GetProjectName() string {
	return s.ProjectName
}

// GetRegionSettings returns the value of RegionSettings.
func (s *HTCProject) GetRegionSettings() []HTCRegionSettings {
	return s.RegionSettings
}

// GetRegions returns the value of Regions.
func (s *HTCProject) GetRegions() []RescaleRegion {
	return s.Regions
}

// GetRepositories returns the value of Repositories.
func (s *HTCProject) GetRepositories() []string {
	return s.Repositories
}

// GetWorkspaceId returns the value of WorkspaceId.
func (s *HTCProject) GetWorkspaceId() OptString {
	return s.WorkspaceId
}

// SetContainerRegistry sets the value of ContainerRegistry.
func (s *HTCProject) SetContainerRegistry(val OptString) {
	s.ContainerRegistry = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *HTCProject) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *HTCProject) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetOrganizationCode sets the value of OrganizationCode.
func (s *HTCProject) SetOrganizationCode(val OptNilString) {
	s.OrganizationCode = val
}

// SetProjectDescription sets the value of ProjectDescription.
func (s *HTCProject) SetProjectDescription(val string) {
	s.ProjectDescription = val
}

// SetProjectFolderPath sets the value of ProjectFolderPath.
func (s *HTCProject) SetProjectFolderPath(val OptString) {
	s.ProjectFolderPath = val
}

// SetProjectId sets the value of ProjectId.
func (s *HTCProject) SetProjectId(val OptString) {
	s.ProjectId = val
}

// SetProjectName sets the value of ProjectName.
func (s *HTCProject) SetProjectName(val string) {
	s.ProjectName = val
}

// SetRegionSettings sets the value of RegionSettings.
func (s *HTCProject) SetRegionSettings(val []HTCRegionSettings) {
	s.RegionSettings = val
}

// SetRegions sets the value of Regions.
func (s *HTCProject) SetRegions(val []RescaleRegion) {
	s.Regions = val
}

// SetRepositories sets the value of Repositories.
func (s *HTCProject) SetRepositories(val []string) {
	s.Repositories = val
}

// SetWorkspaceId sets the value of WorkspaceId.
func (s *HTCProject) SetWorkspaceId(val OptString) {
	s.WorkspaceId = val
}

func (*HTCProject) htcProjectsPostRes()           {}
func (*HTCProject) htcProjectsProjectIdGetRes()   {}
func (*HTCProject) htcProjectsProjectIdPatchRes() {}

type HTCProjectDimensions []HTCComputeEnvironment

func (*HTCProjectDimensions) htcProjectsProjectIdDimensionsGetRes() {}

// Ref: #/components/schemas/HTCProjectLimit
type HTCProjectLimit struct {
	CreatedAt OptDateTime `json:"createdAt"`
	CreatedBy OptString   `json:"createdBy"`
	ID        OptInt32    `json:"id"`
	// The highest role that can modify this limit.
	ModifierRole OptHTCProjectLimitModifierRole `json:"modifierRole"`
	ProjectId    OptString                      `json:"projectId"`
	UpdatedAt    OptDateTime                    `json:"updatedAt"`
	UpdatedBy    OptString                      `json:"updatedBy"`
	VCPUs        int32                          `json:"vCPUs"`
	WorkspaceId  OptString                      `json:"workspaceId"`
}

// GetCreatedAt returns the value of CreatedAt.
func (s *HTCProjectLimit) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *HTCProjectLimit) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetID returns the value of ID.
func (s *HTCProjectLimit) GetID() OptInt32 {
	return s.ID
}

// GetModifierRole returns the value of ModifierRole.
func (s *HTCProjectLimit) GetModifierRole() OptHTCProjectLimitModifierRole {
	return s.ModifierRole
}

// GetProjectId returns the value of ProjectId.
func (s *HTCProjectLimit) GetProjectId() OptString {
	return s.ProjectId
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *HTCProjectLimit) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *HTCProjectLimit) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetVCPUs returns the value of VCPUs.
func (s *HTCProjectLimit) GetVCPUs() int32 {
	return s.VCPUs
}

// GetWorkspaceId returns the value of WorkspaceId.
func (s *HTCProjectLimit) GetWorkspaceId() OptString {
	return s.WorkspaceId
}

// SetCreatedAt sets the value of CreatedAt.
func (s *HTCProjectLimit) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *HTCProjectLimit) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetID sets the value of ID.
func (s *HTCProjectLimit) SetID(val OptInt32) {
	s.ID = val
}

// SetModifierRole sets the value of ModifierRole.
func (s *HTCProjectLimit) SetModifierRole(val OptHTCProjectLimitModifierRole) {
	s.ModifierRole = val
}

// SetProjectId sets the value of ProjectId.
func (s *HTCProjectLimit) SetProjectId(val OptString) {
	s.ProjectId = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *HTCProjectLimit) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *HTCProjectLimit) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetVCPUs sets the value of VCPUs.
func (s *HTCProjectLimit) SetVCPUs(val int32) {
	s.VCPUs = val
}

// SetWorkspaceId sets the value of WorkspaceId.
func (s *HTCProjectLimit) SetWorkspaceId(val OptString) {
	s.WorkspaceId = val
}

func (*HTCProjectLimit) htcProjectsProjectIdLimitsIDGetRes()   {}
func (*HTCProjectLimit) htcProjectsProjectIdLimitsIDPatchRes() {}
func (*HTCProjectLimit) htcProjectsProjectIdLimitsPostRes()    {}

type HTCProjectLimitModifierRole string

const (
	HTCProjectLimitModifierRoleWORKSPACEADMIN HTCProjectLimitModifierRole = "WORKSPACE_ADMIN"
	HTCProjectLimitModifierRolePROJECTADMIN   HTCProjectLimitModifierRole = "PROJECT_ADMIN"
)

// AllValues returns all HTCProjectLimitModifierRole values.
func (HTCProjectLimitModifierRole) AllValues() []HTCProjectLimitModifierRole {
	return []HTCProjectLimitModifierRole{
		HTCProjectLimitModifierRoleWORKSPACEADMIN,
		HTCProjectLimitModifierRolePROJECTADMIN,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s HTCProjectLimitModifierRole) MarshalText() ([]byte, error) {
	switch s {
	case HTCProjectLimitModifierRoleWORKSPACEADMIN:
		return []byte(s), nil
	case HTCProjectLimitModifierRolePROJECTADMIN:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *HTCProjectLimitModifierRole) UnmarshalText(data []byte) error {
	switch HTCProjectLimitModifierRole(data) {
	case HTCProjectLimitModifierRoleWORKSPACEADMIN:
		*s = HTCProjectLimitModifierRoleWORKSPACEADMIN
		return nil
	case HTCProjectLimitModifierRolePROJECTADMIN:
		*s = HTCProjectLimitModifierRolePROJECTADMIN
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type HTCProjectLimits []HTCProjectLimit

func (*HTCProjectLimits) htcProjectsProjectIdLimitsGetRes() {}

// Ref: #/components/schemas/HTCProjectUpdate
type HTCProjectUpdate struct {
	Regions []RescaleRegion `json:"regions"`
}

// GetRegions returns the value of Regions.
func (s *HTCProjectUpdate) GetRegions() []RescaleRegion {
	return s.Regions
}

// SetRegions sets the value of Regions.
func (s *HTCProjectUpdate) SetRegions(val []RescaleRegion) {
	s.Regions = val
}

// Ref: #/components/schemas/HTCProjectsResponse
type HTCProjectsResponse struct {
	Items []HTCProject `json:"items"`
	Next  OptURI       `json:"next"`
}

// GetItems returns the value of Items.
func (s *HTCProjectsResponse) GetItems() []HTCProject {
	return s.Items
}

// GetNext returns the value of Next.
func (s *HTCProjectsResponse) GetNext() OptURI {
	return s.Next
}

// SetItems sets the value of Items.
func (s *HTCProjectsResponse) SetItems(val []HTCProject) {
	s.Items = val
}

// SetNext sets the value of Next.
func (s *HTCProjectsResponse) SetNext(val OptURI) {
	s.Next = val
}

func (*HTCProjectsResponse) htcProjectsGetRes() {}

// Ref: #/components/schemas/HTCRegionAdminSettings
type HTCRegionAdminSettings struct {
	CloudProvider          OptCloudProvider                `json:"cloudProvider"`
	Enabled                OptBool                         `json:"enabled"`
	Region                 OptHTCRegionAdminSettingsRegion `json:"region"`
	SupportedArchitectures []Architecture                  `json:"supportedArchitectures"`
	UpdatedAt              OptDateTime                     `json:"updatedAt"`
	UpdatedBy              OptString                       `json:"updatedBy"`
	Weight                 OptFloat64                      `json:"weight"`
}

// GetCloudProvider returns the value of CloudProvider.
func (s *HTCRegionAdminSettings) GetCloudProvider() OptCloudProvider {
	return s.CloudProvider
}

// GetEnabled returns the value of Enabled.
func (s *HTCRegionAdminSettings) GetEnabled() OptBool {
	return s.Enabled
}

// GetRegion returns the value of Region.
func (s *HTCRegionAdminSettings) GetRegion() OptHTCRegionAdminSettingsRegion {
	return s.Region
}

// GetSupportedArchitectures returns the value of SupportedArchitectures.
func (s *HTCRegionAdminSettings) GetSupportedArchitectures() []Architecture {
	return s.SupportedArchitectures
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *HTCRegionAdminSettings) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *HTCRegionAdminSettings) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetWeight returns the value of Weight.
func (s *HTCRegionAdminSettings) GetWeight() OptFloat64 {
	return s.Weight
}

// SetCloudProvider sets the value of CloudProvider.
func (s *HTCRegionAdminSettings) SetCloudProvider(val OptCloudProvider) {
	s.CloudProvider = val
}

// SetEnabled sets the value of Enabled.
func (s *HTCRegionAdminSettings) SetEnabled(val OptBool) {
	s.Enabled = val
}

// SetRegion sets the value of Region.
func (s *HTCRegionAdminSettings) SetRegion(val OptHTCRegionAdminSettingsRegion) {
	s.Region = val
}

// SetSupportedArchitectures sets the value of SupportedArchitectures.
func (s *HTCRegionAdminSettings) SetSupportedArchitectures(val []Architecture) {
	s.SupportedArchitectures = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *HTCRegionAdminSettings) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *HTCRegionAdminSettings) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetWeight sets the value of Weight.
func (s *HTCRegionAdminSettings) SetWeight(val OptFloat64) {
	s.Weight = val
}

func (*HTCRegionAdminSettings) htcRegionsRegionGetRes() {}

type HTCRegionAdminSettingsRegion string

const (
	HTCRegionAdminSettingsRegionAWSAPSOUTHEAST1     HTCRegionAdminSettingsRegion = "AWS_AP_SOUTHEAST_1"
	HTCRegionAdminSettingsRegionAWSCACENTRAL1       HTCRegionAdminSettingsRegion = "AWS_CA_CENTRAL_1"
	HTCRegionAdminSettingsRegionAWSEUNORTH1         HTCRegionAdminSettingsRegion = "AWS_EU_NORTH_1"
	HTCRegionAdminSettingsRegionAWSEUCENTRAL1       HTCRegionAdminSettingsRegion = "AWS_EU_CENTRAL_1"
	HTCRegionAdminSettingsRegionAWSEUWEST1          HTCRegionAdminSettingsRegion = "AWS_EU_WEST_1"
	HTCRegionAdminSettingsRegionAWSEUWEST2          HTCRegionAdminSettingsRegion = "AWS_EU_WEST_2"
	HTCRegionAdminSettingsRegionAWSEUWEST3          HTCRegionAdminSettingsRegion = "AWS_EU_WEST_3"
	HTCRegionAdminSettingsRegionAWSSAEAST1          HTCRegionAdminSettingsRegion = "AWS_SA_EAST_1"
	HTCRegionAdminSettingsRegionAWSUSEAST2          HTCRegionAdminSettingsRegion = "AWS_US_EAST_2"
	HTCRegionAdminSettingsRegionAWSUSWEST2          HTCRegionAdminSettingsRegion = "AWS_US_WEST_2"
	HTCRegionAdminSettingsRegionAWSUSEAST1          HTCRegionAdminSettingsRegion = "AWS_US_EAST_1"
	HTCRegionAdminSettingsRegionGCPASIASOUTHEAST1   HTCRegionAdminSettingsRegion = "GCP_ASIA_SOUTHEAST_1"
	HTCRegionAdminSettingsRegionGCPUSCENTRAL1       HTCRegionAdminSettingsRegion = "GCP_US_CENTRAL_1"
	HTCRegionAdminSettingsRegionGCPUSEAST1          HTCRegionAdminSettingsRegion = "GCP_US_EAST_1"
	HTCRegionAdminSettingsRegionGCPUSEAST2          HTCRegionAdminSettingsRegion = "GCP_US_EAST_2"
	HTCRegionAdminSettingsRegionGCPUSEAST4          HTCRegionAdminSettingsRegion = "GCP_US_EAST_4"
	HTCRegionAdminSettingsRegionGCPUSWEST1          HTCRegionAdminSettingsRegion = "GCP_US_WEST_1"
	HTCRegionAdminSettingsRegionGCPUSWEST4          HTCRegionAdminSettingsRegion = "GCP_US_WEST_4"
	HTCRegionAdminSettingsRegionGCPEUWEST1          HTCRegionAdminSettingsRegion = "GCP_EU_WEST_1"
	HTCRegionAdminSettingsRegionGCPEUWEST2          HTCRegionAdminSettingsRegion = "GCP_EU_WEST_2"
	HTCRegionAdminSettingsRegionGCPEUWEST3          HTCRegionAdminSettingsRegion = "GCP_EU_WEST_3"
	HTCRegionAdminSettingsRegionGCPEUWEST4          HTCRegionAdminSettingsRegion = "GCP_EU_WEST_4"
	HTCRegionAdminSettingsRegionGCPCACENTRAL1       HTCRegionAdminSettingsRegion = "GCP_CA_CENTRAL_1"
	HTCRegionAdminSettingsRegionNGCENOCH1           HTCRegionAdminSettingsRegion = "NGC_ENOCH_1"
	HTCRegionAdminSettingsRegionAZUREUSWEST2        HTCRegionAdminSettingsRegion = "AZURE_US_WEST_2"
	HTCRegionAdminSettingsRegionAZUREUSEAST2        HTCRegionAdminSettingsRegion = "AZURE_US_EAST_2"
	HTCRegionAdminSettingsRegionAZUREUSSOUTHCENTRAL HTCRegionAdminSettingsRegion = "AZURE_US_SOUTHCENTRAL"
	HTCRegionAdminSettingsRegionAZUREEUNORTH        HTCRegionAdminSettingsRegion = "AZURE_EU_NORTH"
	HTCRegionAdminSettingsRegionRCICELAND1          HTCRegionAdminSettingsRegion = "RC_ICELAND_1"
	HTCRegionAdminSettingsRegionUNASSIGNED          HTCRegionAdminSettingsRegion = "UNASSIGNED"
)

// AllValues returns all HTCRegionAdminSettingsRegion values.
func (HTCRegionAdminSettingsRegion) AllValues() []HTCRegionAdminSettingsRegion {
	return []HTCRegionAdminSettingsRegion{
		HTCRegionAdminSettingsRegionAWSAPSOUTHEAST1,
		HTCRegionAdminSettingsRegionAWSCACENTRAL1,
		HTCRegionAdminSettingsRegionAWSEUNORTH1,
		HTCRegionAdminSettingsRegionAWSEUCENTRAL1,
		HTCRegionAdminSettingsRegionAWSEUWEST1,
		HTCRegionAdminSettingsRegionAWSEUWEST2,
		HTCRegionAdminSettingsRegionAWSEUWEST3,
		HTCRegionAdminSettingsRegionAWSSAEAST1,
		HTCRegionAdminSettingsRegionAWSUSEAST2,
		HTCRegionAdminSettingsRegionAWSUSWEST2,
		HTCRegionAdminSettingsRegionAWSUSEAST1,
		HTCRegionAdminSettingsRegionGCPASIASOUTHEAST1,
		HTCRegionAdminSettingsRegionGCPUSCENTRAL1,
		HTCRegionAdminSettingsRegionGCPUSEAST1,
		HTCRegionAdminSettingsRegionGCPUSEAST2,
		HTCRegionAdminSettingsRegionGCPUSEAST4,
		HTCRegionAdminSettingsRegionGCPUSWEST1,
		HTCRegionAdminSettingsRegionGCPUSWEST4,
		HTCRegionAdminSettingsRegionGCPEUWEST1,
		HTCRegionAdminSettingsRegionGCPEUWEST2,
		HTCRegionAdminSettingsRegionGCPEUWEST3,
		HTCRegionAdminSettingsRegionGCPEUWEST4,
		HTCRegionAdminSettingsRegionGCPCACENTRAL1,
		HTCRegionAdminSettingsRegionNGCENOCH1,
		HTCRegionAdminSettingsRegionAZUREUSWEST2,
		HTCRegionAdminSettingsRegionAZUREUSEAST2,
		HTCRegionAdminSettingsRegionAZUREUSSOUTHCENTRAL,
		HTCRegionAdminSettingsRegionAZUREEUNORTH,
		HTCRegionAdminSettingsRegionRCICELAND1,
		HTCRegionAdminSettingsRegionUNASSIGNED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s HTCRegionAdminSettingsRegion) MarshalText() ([]byte, error) {
	switch s {
	case HTCRegionAdminSettingsRegionAWSAPSOUTHEAST1:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionAWSCACENTRAL1:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionAWSEUNORTH1:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionAWSEUCENTRAL1:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionAWSEUWEST1:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionAWSEUWEST2:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionAWSEUWEST3:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionAWSSAEAST1:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionAWSUSEAST2:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionAWSUSWEST2:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionAWSUSEAST1:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionGCPASIASOUTHEAST1:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionGCPUSCENTRAL1:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionGCPUSEAST1:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionGCPUSEAST2:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionGCPUSEAST4:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionGCPUSWEST1:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionGCPUSWEST4:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionGCPEUWEST1:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionGCPEUWEST2:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionGCPEUWEST3:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionGCPEUWEST4:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionGCPCACENTRAL1:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionNGCENOCH1:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionAZUREUSWEST2:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionAZUREUSEAST2:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionAZUREUSSOUTHCENTRAL:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionAZUREEUNORTH:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionRCICELAND1:
		return []byte(s), nil
	case HTCRegionAdminSettingsRegionUNASSIGNED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *HTCRegionAdminSettingsRegion) UnmarshalText(data []byte) error {
	switch HTCRegionAdminSettingsRegion(data) {
	case HTCRegionAdminSettingsRegionAWSAPSOUTHEAST1:
		*s = HTCRegionAdminSettingsRegionAWSAPSOUTHEAST1
		return nil
	case HTCRegionAdminSettingsRegionAWSCACENTRAL1:
		*s = HTCRegionAdminSettingsRegionAWSCACENTRAL1
		return nil
	case HTCRegionAdminSettingsRegionAWSEUNORTH1:
		*s = HTCRegionAdminSettingsRegionAWSEUNORTH1
		return nil
	case HTCRegionAdminSettingsRegionAWSEUCENTRAL1:
		*s = HTCRegionAdminSettingsRegionAWSEUCENTRAL1
		return nil
	case HTCRegionAdminSettingsRegionAWSEUWEST1:
		*s = HTCRegionAdminSettingsRegionAWSEUWEST1
		return nil
	case HTCRegionAdminSettingsRegionAWSEUWEST2:
		*s = HTCRegionAdminSettingsRegionAWSEUWEST2
		return nil
	case HTCRegionAdminSettingsRegionAWSEUWEST3:
		*s = HTCRegionAdminSettingsRegionAWSEUWEST3
		return nil
	case HTCRegionAdminSettingsRegionAWSSAEAST1:
		*s = HTCRegionAdminSettingsRegionAWSSAEAST1
		return nil
	case HTCRegionAdminSettingsRegionAWSUSEAST2:
		*s = HTCRegionAdminSettingsRegionAWSUSEAST2
		return nil
	case HTCRegionAdminSettingsRegionAWSUSWEST2:
		*s = HTCRegionAdminSettingsRegionAWSUSWEST2
		return nil
	case HTCRegionAdminSettingsRegionAWSUSEAST1:
		*s = HTCRegionAdminSettingsRegionAWSUSEAST1
		return nil
	case HTCRegionAdminSettingsRegionGCPASIASOUTHEAST1:
		*s = HTCRegionAdminSettingsRegionGCPASIASOUTHEAST1
		return nil
	case HTCRegionAdminSettingsRegionGCPUSCENTRAL1:
		*s = HTCRegionAdminSettingsRegionGCPUSCENTRAL1
		return nil
	case HTCRegionAdminSettingsRegionGCPUSEAST1:
		*s = HTCRegionAdminSettingsRegionGCPUSEAST1
		return nil
	case HTCRegionAdminSettingsRegionGCPUSEAST2:
		*s = HTCRegionAdminSettingsRegionGCPUSEAST2
		return nil
	case HTCRegionAdminSettingsRegionGCPUSEAST4:
		*s = HTCRegionAdminSettingsRegionGCPUSEAST4
		return nil
	case HTCRegionAdminSettingsRegionGCPUSWEST1:
		*s = HTCRegionAdminSettingsRegionGCPUSWEST1
		return nil
	case HTCRegionAdminSettingsRegionGCPUSWEST4:
		*s = HTCRegionAdminSettingsRegionGCPUSWEST4
		return nil
	case HTCRegionAdminSettingsRegionGCPEUWEST1:
		*s = HTCRegionAdminSettingsRegionGCPEUWEST1
		return nil
	case HTCRegionAdminSettingsRegionGCPEUWEST2:
		*s = HTCRegionAdminSettingsRegionGCPEUWEST2
		return nil
	case HTCRegionAdminSettingsRegionGCPEUWEST3:
		*s = HTCRegionAdminSettingsRegionGCPEUWEST3
		return nil
	case HTCRegionAdminSettingsRegionGCPEUWEST4:
		*s = HTCRegionAdminSettingsRegionGCPEUWEST4
		return nil
	case HTCRegionAdminSettingsRegionGCPCACENTRAL1:
		*s = HTCRegionAdminSettingsRegionGCPCACENTRAL1
		return nil
	case HTCRegionAdminSettingsRegionNGCENOCH1:
		*s = HTCRegionAdminSettingsRegionNGCENOCH1
		return nil
	case HTCRegionAdminSettingsRegionAZUREUSWEST2:
		*s = HTCRegionAdminSettingsRegionAZUREUSWEST2
		return nil
	case HTCRegionAdminSettingsRegionAZUREUSEAST2:
		*s = HTCRegionAdminSettingsRegionAZUREUSEAST2
		return nil
	case HTCRegionAdminSettingsRegionAZUREUSSOUTHCENTRAL:
		*s = HTCRegionAdminSettingsRegionAZUREUSSOUTHCENTRAL
		return nil
	case HTCRegionAdminSettingsRegionAZUREEUNORTH:
		*s = HTCRegionAdminSettingsRegionAZUREEUNORTH
		return nil
	case HTCRegionAdminSettingsRegionRCICELAND1:
		*s = HTCRegionAdminSettingsRegionRCICELAND1
		return nil
	case HTCRegionAdminSettingsRegionUNASSIGNED:
		*s = HTCRegionAdminSettingsRegionUNASSIGNED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/HTCRegionComputeSettings
type HTCRegionComputeSettings struct {
	ComputeRegion OptRescaleRegion `json:"computeRegion"`
}

// GetComputeRegion returns the value of ComputeRegion.
func (s *HTCRegionComputeSettings) GetComputeRegion() OptRescaleRegion {
	return s.ComputeRegion
}

// SetComputeRegion sets the value of ComputeRegion.
func (s *HTCRegionComputeSettings) SetComputeRegion(val OptRescaleRegion) {
	s.ComputeRegion = val
}

// Ref: #/components/schemas/HTCRegionSettings
type HTCRegionSettings struct {
	ComputeSettings HTCRegionComputeSettings `json:"computeSettings"`
	StorageSettings HTCRegionStorageSettings `json:"storageSettings"`
}

// GetComputeSettings returns the value of ComputeSettings.
func (s *HTCRegionSettings) GetComputeSettings() HTCRegionComputeSettings {
	return s.ComputeSettings
}

// GetStorageSettings returns the value of StorageSettings.
func (s *HTCRegionSettings) GetStorageSettings() HTCRegionStorageSettings {
	return s.StorageSettings
}

// SetComputeSettings sets the value of ComputeSettings.
func (s *HTCRegionSettings) SetComputeSettings(val HTCRegionComputeSettings) {
	s.ComputeSettings = val
}

// SetStorageSettings sets the value of StorageSettings.
func (s *HTCRegionSettings) SetStorageSettings(val HTCRegionStorageSettings) {
	s.StorageSettings = val
}

// Ref: #/components/schemas/HTCRegionStorageSettings
type HTCRegionStorageSettings struct {
	StorageRegion OptRescaleRegion `json:"storageRegion"`
}

// GetStorageRegion returns the value of StorageRegion.
func (s *HTCRegionStorageSettings) GetStorageRegion() OptRescaleRegion {
	return s.StorageRegion
}

// SetStorageRegion sets the value of StorageRegion.
func (s *HTCRegionStorageSettings) SetStorageRegion(val OptRescaleRegion) {
	s.StorageRegion = val
}

// Ref: #/components/schemas/HTCRepository
type HTCRepository struct {
	CreatedBy           OptString `json:"createdBy"`
	ProjectId           OptString `json:"projectId"`
	RegistryURI         OptString `json:"registryURI"`
	RepositoryName      OptString `json:"repositoryName"`
	SuccessfullyCreated OptBool   `json:"successfullyCreated"`
	WorkspaceId         OptString `json:"workspaceId"`
}

// GetCreatedBy returns the value of CreatedBy.
func (s *HTCRepository) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetProjectId returns the value of ProjectId.
func (s *HTCRepository) GetProjectId() OptString {
	return s.ProjectId
}

// GetRegistryURI returns the value of RegistryURI.
func (s *HTCRepository) GetRegistryURI() OptString {
	return s.RegistryURI
}

// GetRepositoryName returns the value of RepositoryName.
func (s *HTCRepository) GetRepositoryName() OptString {
	return s.RepositoryName
}

// GetSuccessfullyCreated returns the value of SuccessfullyCreated.
func (s *HTCRepository) GetSuccessfullyCreated() OptBool {
	return s.SuccessfullyCreated
}

// GetWorkspaceId returns the value of WorkspaceId.
func (s *HTCRepository) GetWorkspaceId() OptString {
	return s.WorkspaceId
}

// SetCreatedBy sets the value of CreatedBy.
func (s *HTCRepository) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetProjectId sets the value of ProjectId.
func (s *HTCRepository) SetProjectId(val OptString) {
	s.ProjectId = val
}

// SetRegistryURI sets the value of RegistryURI.
func (s *HTCRepository) SetRegistryURI(val OptString) {
	s.RegistryURI = val
}

// SetRepositoryName sets the value of RepositoryName.
func (s *HTCRepository) SetRepositoryName(val OptString) {
	s.RepositoryName = val
}

// SetSuccessfullyCreated sets the value of SuccessfullyCreated.
func (s *HTCRepository) SetSuccessfullyCreated(val OptBool) {
	s.SuccessfullyCreated = val
}

// SetWorkspaceId sets the value of WorkspaceId.
func (s *HTCRepository) SetWorkspaceId(val OptString) {
	s.WorkspaceId = val
}

func (*HTCRepository) htcProjectsProjectIdContainerRegistryRepoRepoNamePostRes() {}

// Ref: #/components/schemas/HTCRequestError
type HTCRequestError struct {
	ErrorDescription OptString `json:"errorDescription"`
	ErrorType        OptString `json:"errorType"`
	Message          OptString `json:"message"`
}

// GetErrorDescription returns the value of ErrorDescription.
func (s *HTCRequestError) GetErrorDescription() OptString {
	return s.ErrorDescription
}

// GetErrorType returns the value of ErrorType.
func (s *HTCRequestError) GetErrorType() OptString {
	return s.ErrorType
}

// GetMessage returns the value of Message.
func (s *HTCRequestError) GetMessage() OptString {
	return s.Message
}

// SetErrorDescription sets the value of ErrorDescription.
func (s *HTCRequestError) SetErrorDescription(val OptString) {
	s.ErrorDescription = val
}

// SetErrorType sets the value of ErrorType.
func (s *HTCRequestError) SetErrorType(val OptString) {
	s.ErrorType = val
}

// SetMessage sets the value of Message.
func (s *HTCRequestError) SetMessage(val OptString) {
	s.Message = val
}

func (*HTCRequestError) htcProjectsProjectIdTasksTaskIdJobsBatchPostRes() {}

// Ref: #/components/schemas/HTCRetryStrategy
type HTCRetryStrategy struct {
	MaxRetries OptInt32 `json:"maxRetries"`
}

// GetMaxRetries returns the value of MaxRetries.
func (s *HTCRetryStrategy) GetMaxRetries() OptInt32 {
	return s.MaxRetries
}

// SetMaxRetries sets the value of MaxRetries.
func (s *HTCRetryStrategy) SetMaxRetries(val OptInt32) {
	s.MaxRetries = val
}

// Ref: #/components/schemas/HTCTask
type HTCTask struct {
	ArchivedAt      OptNilDateTime            `json:"archivedAt"`
	CreatedAt       OptDateTime               `json:"createdAt"`
	CreatedBy       OptString                 `json:"createdBy"`
	DeletedAt       OptNilDateTime            `json:"deletedAt"`
	LastActiveAt    OptDateTime               `json:"lastActiveAt"`
	LifecycleStatus OptHTCTaskLifecycleStatus `json:"lifecycleStatus"`
	ProjectId       OptString                 `json:"projectId"`
	TaskDescription string                    `json:"taskDescription"`
	TaskFolderPath  OptString                 `json:"taskFolderPath"`
	TaskId          OptString                 `json:"taskId"`
	TaskName        string                    `json:"taskName"`
	WorkspaceId     OptString                 `json:"workspaceId"`
}

// GetArchivedAt returns the value of ArchivedAt.
func (s *HTCTask) GetArchivedAt() OptNilDateTime {
	return s.ArchivedAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *HTCTask) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *HTCTask) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetDeletedAt returns the value of DeletedAt.
func (s *HTCTask) GetDeletedAt() OptNilDateTime {
	return s.DeletedAt
}

// GetLastActiveAt returns the value of LastActiveAt.
func (s *HTCTask) GetLastActiveAt() OptDateTime {
	return s.LastActiveAt
}

// GetLifecycleStatus returns the value of LifecycleStatus.
func (s *HTCTask) GetLifecycleStatus() OptHTCTaskLifecycleStatus {
	return s.LifecycleStatus
}

// GetProjectId returns the value of ProjectId.
func (s *HTCTask) GetProjectId() OptString {
	return s.ProjectId
}

// GetTaskDescription returns the value of TaskDescription.
func (s *HTCTask) GetTaskDescription() string {
	return s.TaskDescription
}

// GetTaskFolderPath returns the value of TaskFolderPath.
func (s *HTCTask) GetTaskFolderPath() OptString {
	return s.TaskFolderPath
}

// GetTaskId returns the value of TaskId.
func (s *HTCTask) GetTaskId() OptString {
	return s.TaskId
}

// GetTaskName returns the value of TaskName.
func (s *HTCTask) GetTaskName() string {
	return s.TaskName
}

// GetWorkspaceId returns the value of WorkspaceId.
func (s *HTCTask) GetWorkspaceId() OptString {
	return s.WorkspaceId
}

// SetArchivedAt sets the value of ArchivedAt.
func (s *HTCTask) SetArchivedAt(val OptNilDateTime) {
	s.ArchivedAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *HTCTask) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *HTCTask) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetDeletedAt sets the value of DeletedAt.
func (s *HTCTask) SetDeletedAt(val OptNilDateTime) {
	s.DeletedAt = val
}

// SetLastActiveAt sets the value of LastActiveAt.
func (s *HTCTask) SetLastActiveAt(val OptDateTime) {
	s.LastActiveAt = val
}

// SetLifecycleStatus sets the value of LifecycleStatus.
func (s *HTCTask) SetLifecycleStatus(val OptHTCTaskLifecycleStatus) {
	s.LifecycleStatus = val
}

// SetProjectId sets the value of ProjectId.
func (s *HTCTask) SetProjectId(val OptString) {
	s.ProjectId = val
}

// SetTaskDescription sets the value of TaskDescription.
func (s *HTCTask) SetTaskDescription(val string) {
	s.TaskDescription = val
}

// SetTaskFolderPath sets the value of TaskFolderPath.
func (s *HTCTask) SetTaskFolderPath(val OptString) {
	s.TaskFolderPath = val
}

// SetTaskId sets the value of TaskId.
func (s *HTCTask) SetTaskId(val OptString) {
	s.TaskId = val
}

// SetTaskName sets the value of TaskName.
func (s *HTCTask) SetTaskName(val string) {
	s.TaskName = val
}

// SetWorkspaceId sets the value of WorkspaceId.
func (s *HTCTask) SetWorkspaceId(val OptString) {
	s.WorkspaceId = val
}

func (*HTCTask) htcProjectsProjectIdTasksPostRes()        {}
func (*HTCTask) htcProjectsProjectIdTasksTaskIdGetRes()   {}
func (*HTCTask) htcProjectsProjectIdTasksTaskIdPatchRes() {}

type HTCTaskLifecycleStatus string

const (
	HTCTaskLifecycleStatusDELETED  HTCTaskLifecycleStatus = "DELETED"
	HTCTaskLifecycleStatusACTIVE   HTCTaskLifecycleStatus = "ACTIVE"
	HTCTaskLifecycleStatusARCHIVED HTCTaskLifecycleStatus = "ARCHIVED"
)

// AllValues returns all HTCTaskLifecycleStatus values.
func (HTCTaskLifecycleStatus) AllValues() []HTCTaskLifecycleStatus {
	return []HTCTaskLifecycleStatus{
		HTCTaskLifecycleStatusDELETED,
		HTCTaskLifecycleStatusACTIVE,
		HTCTaskLifecycleStatusARCHIVED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s HTCTaskLifecycleStatus) MarshalText() ([]byte, error) {
	switch s {
	case HTCTaskLifecycleStatusDELETED:
		return []byte(s), nil
	case HTCTaskLifecycleStatusACTIVE:
		return []byte(s), nil
	case HTCTaskLifecycleStatusARCHIVED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *HTCTaskLifecycleStatus) UnmarshalText(data []byte) error {
	switch HTCTaskLifecycleStatus(data) {
	case HTCTaskLifecycleStatusDELETED:
		*s = HTCTaskLifecycleStatusDELETED
		return nil
	case HTCTaskLifecycleStatusACTIVE:
		*s = HTCTaskLifecycleStatusACTIVE
		return nil
	case HTCTaskLifecycleStatusARCHIVED:
		*s = HTCTaskLifecycleStatusARCHIVED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/HTCTaskUpdate
type HTCTaskUpdate struct {
	LifecycleStatus HTCTaskUpdateLifecycleStatus `json:"lifecycleStatus"`
}

// GetLifecycleStatus returns the value of LifecycleStatus.
func (s *HTCTaskUpdate) GetLifecycleStatus() HTCTaskUpdateLifecycleStatus {
	return s.LifecycleStatus
}

// SetLifecycleStatus sets the value of LifecycleStatus.
func (s *HTCTaskUpdate) SetLifecycleStatus(val HTCTaskUpdateLifecycleStatus) {
	s.LifecycleStatus = val
}

type HTCTaskUpdateLifecycleStatus string

const (
	HTCTaskUpdateLifecycleStatusDELETED  HTCTaskUpdateLifecycleStatus = "DELETED"
	HTCTaskUpdateLifecycleStatusACTIVE   HTCTaskUpdateLifecycleStatus = "ACTIVE"
	HTCTaskUpdateLifecycleStatusARCHIVED HTCTaskUpdateLifecycleStatus = "ARCHIVED"
)

// AllValues returns all HTCTaskUpdateLifecycleStatus values.
func (HTCTaskUpdateLifecycleStatus) AllValues() []HTCTaskUpdateLifecycleStatus {
	return []HTCTaskUpdateLifecycleStatus{
		HTCTaskUpdateLifecycleStatusDELETED,
		HTCTaskUpdateLifecycleStatusACTIVE,
		HTCTaskUpdateLifecycleStatusARCHIVED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s HTCTaskUpdateLifecycleStatus) MarshalText() ([]byte, error) {
	switch s {
	case HTCTaskUpdateLifecycleStatusDELETED:
		return []byte(s), nil
	case HTCTaskUpdateLifecycleStatusACTIVE:
		return []byte(s), nil
	case HTCTaskUpdateLifecycleStatusARCHIVED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *HTCTaskUpdateLifecycleStatus) UnmarshalText(data []byte) error {
	switch HTCTaskUpdateLifecycleStatus(data) {
	case HTCTaskUpdateLifecycleStatusDELETED:
		*s = HTCTaskUpdateLifecycleStatusDELETED
		return nil
	case HTCTaskUpdateLifecycleStatusACTIVE:
		*s = HTCTaskUpdateLifecycleStatusACTIVE
		return nil
	case HTCTaskUpdateLifecycleStatusARCHIVED:
		*s = HTCTaskUpdateLifecycleStatusARCHIVED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/HTCTasksResponse
type HTCTasksResponse struct {
	Items []HTCTask `json:"items"`
	Next  OptURI    `json:"next"`
}

// GetItems returns the value of Items.
func (s *HTCTasksResponse) GetItems() []HTCTask {
	return s.Items
}

// GetNext returns the value of Next.
func (s *HTCTasksResponse) GetNext() OptURI {
	return s.Next
}

// SetItems sets the value of Items.
func (s *HTCTasksResponse) SetItems(val []HTCTask) {
	s.Items = val
}

// SetNext sets the value of Next.
func (s *HTCTasksResponse) SetNext(val OptURI) {
	s.Next = val
}

func (*HTCTasksResponse) htcProjectsProjectIdTasksGetRes() {}

// Ref: #/components/schemas/HTCToken
type HTCToken struct {
	// Number of seconds until this token expires.
	ExpiresIn OptInt64 `json:"expiresIn"`
	// JWT Token.
	TokenValue OptString `json:"tokenValue"`
}

// GetExpiresIn returns the value of ExpiresIn.
func (s *HTCToken) GetExpiresIn() OptInt64 {
	return s.ExpiresIn
}

// GetTokenValue returns the value of TokenValue.
func (s *HTCToken) GetTokenValue() OptString {
	return s.TokenValue
}

// SetExpiresIn sets the value of ExpiresIn.
func (s *HTCToken) SetExpiresIn(val OptInt64) {
	s.ExpiresIn = val
}

// SetTokenValue sets the value of TokenValue.
func (s *HTCToken) SetTokenValue(val OptString) {
	s.TokenValue = val
}

func (*HTCToken) authTokenGetRes() {}

type HTCTokenPayload string

func (*HTCTokenPayload) authTokenWhoamiGetRes() {}

// Ref: #/components/schemas/HTCWorkspaceLimit
type HTCWorkspaceLimit struct {
	CreatedAt   OptDateTime `json:"createdAt"`
	CreatedBy   OptString   `json:"createdBy"`
	UpdatedAt   OptDateTime `json:"updatedAt"`
	UpdatedBy   OptString   `json:"updatedBy"`
	VCPUs       int32       `json:"vCPUs"`
	WorkspaceId OptString   `json:"workspaceId"`
}

// GetCreatedAt returns the value of CreatedAt.
func (s *HTCWorkspaceLimit) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *HTCWorkspaceLimit) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *HTCWorkspaceLimit) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetUpdatedBy returns the value of UpdatedBy.
func (s *HTCWorkspaceLimit) GetUpdatedBy() OptString {
	return s.UpdatedBy
}

// GetVCPUs returns the value of VCPUs.
func (s *HTCWorkspaceLimit) GetVCPUs() int32 {
	return s.VCPUs
}

// GetWorkspaceId returns the value of WorkspaceId.
func (s *HTCWorkspaceLimit) GetWorkspaceId() OptString {
	return s.WorkspaceId
}

// SetCreatedAt sets the value of CreatedAt.
func (s *HTCWorkspaceLimit) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *HTCWorkspaceLimit) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *HTCWorkspaceLimit) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetUpdatedBy sets the value of UpdatedBy.
func (s *HTCWorkspaceLimit) SetUpdatedBy(val OptString) {
	s.UpdatedBy = val
}

// SetVCPUs sets the value of VCPUs.
func (s *HTCWorkspaceLimit) SetVCPUs(val int32) {
	s.VCPUs = val
}

// SetWorkspaceId sets the value of WorkspaceId.
func (s *HTCWorkspaceLimit) SetWorkspaceId(val OptString) {
	s.WorkspaceId = val
}

func (*HTCWorkspaceLimit) htcWorkspacesWorkspaceIdLimitsGetRes() {}

// HtcGcpClustersWorkspaceIdGetForbidden is response for HtcGcpClustersWorkspaceIdGet operation.
type HtcGcpClustersWorkspaceIdGetForbidden struct{}

func (*HtcGcpClustersWorkspaceIdGetForbidden) htcGcpClustersWorkspaceIdGetRes() {}

// HtcGcpClustersWorkspaceIdGetUnauthorized is response for HtcGcpClustersWorkspaceIdGet operation.
type HtcGcpClustersWorkspaceIdGetUnauthorized struct{}

func (*HtcGcpClustersWorkspaceIdGetUnauthorized) htcGcpClustersWorkspaceIdGetRes() {}

// HtcMetricsGetForbidden is response for HtcMetricsGet operation.
type HtcMetricsGetForbidden struct{}

func (*HtcMetricsGetForbidden) htcMetricsGetRes() {}

type HtcMetricsGetOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s HtcMetricsGetOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

func (*HtcMetricsGetOK) htcMetricsGetRes() {}

// HtcMetricsGetUnauthorized is response for HtcMetricsGet operation.
type HtcMetricsGetUnauthorized struct{}

func (*HtcMetricsGetUnauthorized) htcMetricsGetRes() {}

// HtcProjectsGetForbidden is response for HtcProjectsGet operation.
type HtcProjectsGetForbidden struct{}

func (*HtcProjectsGetForbidden) htcProjectsGetRes() {}

// HtcProjectsGetUnauthorized is response for HtcProjectsGet operation.
type HtcProjectsGetUnauthorized struct{}

func (*HtcProjectsGetUnauthorized) htcProjectsGetRes() {}

// HtcProjectsPostForbidden is response for HtcProjectsPost operation.
type HtcProjectsPostForbidden struct{}

func (*HtcProjectsPostForbidden) htcProjectsPostRes() {}

// HtcProjectsPostUnauthorized is response for HtcProjectsPost operation.
type HtcProjectsPostUnauthorized struct{}

func (*HtcProjectsPostUnauthorized) htcProjectsPostRes() {}

// HtcProjectsProjectIdContainerRegistryImagesGetForbidden is response for HtcProjectsProjectIdContainerRegistryImagesGet operation.
type HtcProjectsProjectIdContainerRegistryImagesGetForbidden struct{}

func (*HtcProjectsProjectIdContainerRegistryImagesGetForbidden) htcProjectsProjectIdContainerRegistryImagesGetRes() {
}

// HtcProjectsProjectIdContainerRegistryImagesGetUnauthorized is response for HtcProjectsProjectIdContainerRegistryImagesGet operation.
type HtcProjectsProjectIdContainerRegistryImagesGetUnauthorized struct{}

func (*HtcProjectsProjectIdContainerRegistryImagesGetUnauthorized) htcProjectsProjectIdContainerRegistryImagesGetRes() {
}

// HtcProjectsProjectIdContainerRegistryImagesImageNameGetForbidden is response for HtcProjectsProjectIdContainerRegistryImagesImageNameGet operation.
type HtcProjectsProjectIdContainerRegistryImagesImageNameGetForbidden struct{}

func (*HtcProjectsProjectIdContainerRegistryImagesImageNameGetForbidden) htcProjectsProjectIdContainerRegistryImagesImageNameGetRes() {
}

type HtcProjectsProjectIdContainerRegistryImagesImageNameGetNotFound struct {
	ErrorDescription OptString `json:"errorDescription"`
	ErrorType        OptString `json:"errorType"`
}

// GetErrorDescription returns the value of ErrorDescription.
func (s *HtcProjectsProjectIdContainerRegistryImagesImageNameGetNotFound) GetErrorDescription() OptString {
	return s.ErrorDescription
}

// GetErrorType returns the value of ErrorType.
func (s *HtcProjectsProjectIdContainerRegistryImagesImageNameGetNotFound) GetErrorType() OptString {
	return s.ErrorType
}

// SetErrorDescription sets the value of ErrorDescription.
func (s *HtcProjectsProjectIdContainerRegistryImagesImageNameGetNotFound) SetErrorDescription(val OptString) {
	s.ErrorDescription = val
}

// SetErrorType sets the value of ErrorType.
func (s *HtcProjectsProjectIdContainerRegistryImagesImageNameGetNotFound) SetErrorType(val OptString) {
	s.ErrorType = val
}

func (*HtcProjectsProjectIdContainerRegistryImagesImageNameGetNotFound) htcProjectsProjectIdContainerRegistryImagesImageNameGetRes() {
}

// HtcProjectsProjectIdContainerRegistryImagesImageNameGetUnauthorized is response for HtcProjectsProjectIdContainerRegistryImagesImageNameGet operation.
type HtcProjectsProjectIdContainerRegistryImagesImageNameGetUnauthorized struct{}

func (*HtcProjectsProjectIdContainerRegistryImagesImageNameGetUnauthorized) htcProjectsProjectIdContainerRegistryImagesImageNameGetRes() {
}

// HtcProjectsProjectIdContainerRegistryRepoRepoNamePostForbidden is response for HtcProjectsProjectIdContainerRegistryRepoRepoNamePost operation.
type HtcProjectsProjectIdContainerRegistryRepoRepoNamePostForbidden struct{}

func (*HtcProjectsProjectIdContainerRegistryRepoRepoNamePostForbidden) htcProjectsProjectIdContainerRegistryRepoRepoNamePostRes() {
}

// HtcProjectsProjectIdContainerRegistryRepoRepoNamePostUnauthorized is response for HtcProjectsProjectIdContainerRegistryRepoRepoNamePost operation.
type HtcProjectsProjectIdContainerRegistryRepoRepoNamePostUnauthorized struct{}

func (*HtcProjectsProjectIdContainerRegistryRepoRepoNamePostUnauthorized) htcProjectsProjectIdContainerRegistryRepoRepoNamePostRes() {
}

// HtcProjectsProjectIdContainerRegistryTokenGetForbidden is response for HtcProjectsProjectIdContainerRegistryTokenGet operation.
type HtcProjectsProjectIdContainerRegistryTokenGetForbidden struct{}

func (*HtcProjectsProjectIdContainerRegistryTokenGetForbidden) htcProjectsProjectIdContainerRegistryTokenGetRes() {
}

type HtcProjectsProjectIdContainerRegistryTokenGetOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s HtcProjectsProjectIdContainerRegistryTokenGetOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

// HtcProjectsProjectIdContainerRegistryTokenGetOKHeaders wraps HtcProjectsProjectIdContainerRegistryTokenGetOK with response headers.
type HtcProjectsProjectIdContainerRegistryTokenGetOKHeaders struct {
	ContentType string
	Response    HtcProjectsProjectIdContainerRegistryTokenGetOK
}

// GetContentType returns the value of ContentType.
func (s *HtcProjectsProjectIdContainerRegistryTokenGetOKHeaders) GetContentType() string {
	return s.ContentType
}

// GetResponse returns the value of Response.
func (s *HtcProjectsProjectIdContainerRegistryTokenGetOKHeaders) GetResponse() HtcProjectsProjectIdContainerRegistryTokenGetOK {
	return s.Response
}

// SetContentType sets the value of ContentType.
func (s *HtcProjectsProjectIdContainerRegistryTokenGetOKHeaders) SetContentType(val string) {
	s.ContentType = val
}

// SetResponse sets the value of Response.
func (s *HtcProjectsProjectIdContainerRegistryTokenGetOKHeaders) SetResponse(val HtcProjectsProjectIdContainerRegistryTokenGetOK) {
	s.Response = val
}

func (*HtcProjectsProjectIdContainerRegistryTokenGetOKHeaders) htcProjectsProjectIdContainerRegistryTokenGetRes() {
}

// HtcProjectsProjectIdContainerRegistryTokenGetUnauthorized is response for HtcProjectsProjectIdContainerRegistryTokenGet operation.
type HtcProjectsProjectIdContainerRegistryTokenGetUnauthorized struct{}

func (*HtcProjectsProjectIdContainerRegistryTokenGetUnauthorized) htcProjectsProjectIdContainerRegistryTokenGetRes() {
}

// HtcProjectsProjectIdDimensionsGetForbidden is response for HtcProjectsProjectIdDimensionsGet operation.
type HtcProjectsProjectIdDimensionsGetForbidden struct{}

func (*HtcProjectsProjectIdDimensionsGetForbidden) htcProjectsProjectIdDimensionsGetRes() {}

// HtcProjectsProjectIdDimensionsGetUnauthorized is response for HtcProjectsProjectIdDimensionsGet operation.
type HtcProjectsProjectIdDimensionsGetUnauthorized struct{}

func (*HtcProjectsProjectIdDimensionsGetUnauthorized) htcProjectsProjectIdDimensionsGetRes() {}

type HtcProjectsProjectIdDimensionsPutCreatedApplicationJSON []HTCComputeEnvironment

func (*HtcProjectsProjectIdDimensionsPutCreatedApplicationJSON) htcProjectsProjectIdDimensionsPutRes() {
}

// HtcProjectsProjectIdDimensionsPutForbidden is response for HtcProjectsProjectIdDimensionsPut operation.
type HtcProjectsProjectIdDimensionsPutForbidden struct{}

func (*HtcProjectsProjectIdDimensionsPutForbidden) htcProjectsProjectIdDimensionsPutRes() {}

// HtcProjectsProjectIdDimensionsPutUnauthorized is response for HtcProjectsProjectIdDimensionsPut operation.
type HtcProjectsProjectIdDimensionsPutUnauthorized struct{}

func (*HtcProjectsProjectIdDimensionsPutUnauthorized) htcProjectsProjectIdDimensionsPutRes() {}

// HtcProjectsProjectIdGetForbidden is response for HtcProjectsProjectIdGet operation.
type HtcProjectsProjectIdGetForbidden struct{}

func (*HtcProjectsProjectIdGetForbidden) htcProjectsProjectIdGetRes() {}

// HtcProjectsProjectIdGetUnauthorized is response for HtcProjectsProjectIdGet operation.
type HtcProjectsProjectIdGetUnauthorized struct{}

func (*HtcProjectsProjectIdGetUnauthorized) htcProjectsProjectIdGetRes() {}

// HtcProjectsProjectIdLimitsDeleteForbidden is response for HtcProjectsProjectIdLimitsDelete operation.
type HtcProjectsProjectIdLimitsDeleteForbidden struct{}

func (*HtcProjectsProjectIdLimitsDeleteForbidden) htcProjectsProjectIdLimitsDeleteRes() {}

// HtcProjectsProjectIdLimitsDeleteNoContent is response for HtcProjectsProjectIdLimitsDelete operation.
type HtcProjectsProjectIdLimitsDeleteNoContent struct{}

func (*HtcProjectsProjectIdLimitsDeleteNoContent) htcProjectsProjectIdLimitsDeleteRes() {}

// HtcProjectsProjectIdLimitsDeleteUnauthorized is response for HtcProjectsProjectIdLimitsDelete operation.
type HtcProjectsProjectIdLimitsDeleteUnauthorized struct{}

func (*HtcProjectsProjectIdLimitsDeleteUnauthorized) htcProjectsProjectIdLimitsDeleteRes() {}

// HtcProjectsProjectIdLimitsGetForbidden is response for HtcProjectsProjectIdLimitsGet operation.
type HtcProjectsProjectIdLimitsGetForbidden struct{}

func (*HtcProjectsProjectIdLimitsGetForbidden) htcProjectsProjectIdLimitsGetRes() {}

// HtcProjectsProjectIdLimitsGetUnauthorized is response for HtcProjectsProjectIdLimitsGet operation.
type HtcProjectsProjectIdLimitsGetUnauthorized struct{}

func (*HtcProjectsProjectIdLimitsGetUnauthorized) htcProjectsProjectIdLimitsGetRes() {}

// HtcProjectsProjectIdLimitsIDDeleteForbidden is response for HtcProjectsProjectIdLimitsIDDelete operation.
type HtcProjectsProjectIdLimitsIDDeleteForbidden struct{}

func (*HtcProjectsProjectIdLimitsIDDeleteForbidden) htcProjectsProjectIdLimitsIDDeleteRes() {}

// HtcProjectsProjectIdLimitsIDDeleteNoContent is response for HtcProjectsProjectIdLimitsIDDelete operation.
type HtcProjectsProjectIdLimitsIDDeleteNoContent struct{}

func (*HtcProjectsProjectIdLimitsIDDeleteNoContent) htcProjectsProjectIdLimitsIDDeleteRes() {}

// HtcProjectsProjectIdLimitsIDDeleteUnauthorized is response for HtcProjectsProjectIdLimitsIDDelete operation.
type HtcProjectsProjectIdLimitsIDDeleteUnauthorized struct{}

func (*HtcProjectsProjectIdLimitsIDDeleteUnauthorized) htcProjectsProjectIdLimitsIDDeleteRes() {}

// HtcProjectsProjectIdLimitsIDGetForbidden is response for HtcProjectsProjectIdLimitsIDGet operation.
type HtcProjectsProjectIdLimitsIDGetForbidden struct{}

func (*HtcProjectsProjectIdLimitsIDGetForbidden) htcProjectsProjectIdLimitsIDGetRes() {}

// HtcProjectsProjectIdLimitsIDGetUnauthorized is response for HtcProjectsProjectIdLimitsIDGet operation.
type HtcProjectsProjectIdLimitsIDGetUnauthorized struct{}

func (*HtcProjectsProjectIdLimitsIDGetUnauthorized) htcProjectsProjectIdLimitsIDGetRes() {}

// HtcProjectsProjectIdLimitsIDPatchForbidden is response for HtcProjectsProjectIdLimitsIDPatch operation.
type HtcProjectsProjectIdLimitsIDPatchForbidden struct{}

func (*HtcProjectsProjectIdLimitsIDPatchForbidden) htcProjectsProjectIdLimitsIDPatchRes() {}

// HtcProjectsProjectIdLimitsIDPatchUnauthorized is response for HtcProjectsProjectIdLimitsIDPatch operation.
type HtcProjectsProjectIdLimitsIDPatchUnauthorized struct{}

func (*HtcProjectsProjectIdLimitsIDPatchUnauthorized) htcProjectsProjectIdLimitsIDPatchRes() {}

// HtcProjectsProjectIdLimitsPostForbidden is response for HtcProjectsProjectIdLimitsPost operation.
type HtcProjectsProjectIdLimitsPostForbidden struct{}

func (*HtcProjectsProjectIdLimitsPostForbidden) htcProjectsProjectIdLimitsPostRes() {}

// HtcProjectsProjectIdLimitsPostUnauthorized is response for HtcProjectsProjectIdLimitsPost operation.
type HtcProjectsProjectIdLimitsPostUnauthorized struct{}

func (*HtcProjectsProjectIdLimitsPostUnauthorized) htcProjectsProjectIdLimitsPostRes() {}

// HtcProjectsProjectIdPatchForbidden is response for HtcProjectsProjectIdPatch operation.
type HtcProjectsProjectIdPatchForbidden struct{}

func (*HtcProjectsProjectIdPatchForbidden) htcProjectsProjectIdPatchRes() {}

// HtcProjectsProjectIdPatchUnauthorized is response for HtcProjectsProjectIdPatch operation.
type HtcProjectsProjectIdPatchUnauthorized struct{}

func (*HtcProjectsProjectIdPatchUnauthorized) htcProjectsProjectIdPatchRes() {}

// HtcProjectsProjectIdStoragePresignedURLGetForbidden is response for HtcProjectsProjectIdStoragePresignedURLGet operation.
type HtcProjectsProjectIdStoragePresignedURLGetForbidden struct{}

func (*HtcProjectsProjectIdStoragePresignedURLGetForbidden) htcProjectsProjectIdStoragePresignedURLGetRes() {
}

// HtcProjectsProjectIdStoragePresignedURLGetUnauthorized is response for HtcProjectsProjectIdStoragePresignedURLGet operation.
type HtcProjectsProjectIdStoragePresignedURLGetUnauthorized struct{}

func (*HtcProjectsProjectIdStoragePresignedURLGetUnauthorized) htcProjectsProjectIdStoragePresignedURLGetRes() {
}

// HtcProjectsProjectIdStorageTokenGetForbidden is response for HtcProjectsProjectIdStorageTokenGet operation.
type HtcProjectsProjectIdStorageTokenGetForbidden struct{}

func (*HtcProjectsProjectIdStorageTokenGetForbidden) htcProjectsProjectIdStorageTokenGetRes() {}

// HtcProjectsProjectIdStorageTokenGetUnauthorized is response for HtcProjectsProjectIdStorageTokenGet operation.
type HtcProjectsProjectIdStorageTokenGetUnauthorized struct{}

func (*HtcProjectsProjectIdStorageTokenGetUnauthorized) htcProjectsProjectIdStorageTokenGetRes() {}

// HtcProjectsProjectIdStorageTokenRegionGetForbidden is response for HtcProjectsProjectIdStorageTokenRegionGet operation.
type HtcProjectsProjectIdStorageTokenRegionGetForbidden struct{}

func (*HtcProjectsProjectIdStorageTokenRegionGetForbidden) htcProjectsProjectIdStorageTokenRegionGetRes() {
}

// HtcProjectsProjectIdStorageTokenRegionGetUnauthorized is response for HtcProjectsProjectIdStorageTokenRegionGet operation.
type HtcProjectsProjectIdStorageTokenRegionGetUnauthorized struct{}

func (*HtcProjectsProjectIdStorageTokenRegionGetUnauthorized) htcProjectsProjectIdStorageTokenRegionGetRes() {
}

// HtcProjectsProjectIdStorageTokensGetForbidden is response for HtcProjectsProjectIdStorageTokensGet operation.
type HtcProjectsProjectIdStorageTokensGetForbidden struct{}

func (*HtcProjectsProjectIdStorageTokensGetForbidden) htcProjectsProjectIdStorageTokensGetRes() {}

// HtcProjectsProjectIdStorageTokensGetUnauthorized is response for HtcProjectsProjectIdStorageTokensGet operation.
type HtcProjectsProjectIdStorageTokensGetUnauthorized struct{}

func (*HtcProjectsProjectIdStorageTokensGetUnauthorized) htcProjectsProjectIdStorageTokensGetRes() {}

// HtcProjectsProjectIdTaskRetentionPolicyDeleteForbidden is response for HtcProjectsProjectIdTaskRetentionPolicyDelete operation.
type HtcProjectsProjectIdTaskRetentionPolicyDeleteForbidden struct{}

func (*HtcProjectsProjectIdTaskRetentionPolicyDeleteForbidden) htcProjectsProjectIdTaskRetentionPolicyDeleteRes() {
}

// HtcProjectsProjectIdTaskRetentionPolicyDeleteNoContent is response for HtcProjectsProjectIdTaskRetentionPolicyDelete operation.
type HtcProjectsProjectIdTaskRetentionPolicyDeleteNoContent struct{}

func (*HtcProjectsProjectIdTaskRetentionPolicyDeleteNoContent) htcProjectsProjectIdTaskRetentionPolicyDeleteRes() {
}

// HtcProjectsProjectIdTaskRetentionPolicyDeleteUnauthorized is response for HtcProjectsProjectIdTaskRetentionPolicyDelete operation.
type HtcProjectsProjectIdTaskRetentionPolicyDeleteUnauthorized struct{}

func (*HtcProjectsProjectIdTaskRetentionPolicyDeleteUnauthorized) htcProjectsProjectIdTaskRetentionPolicyDeleteRes() {
}

// HtcProjectsProjectIdTaskRetentionPolicyGetForbidden is response for HtcProjectsProjectIdTaskRetentionPolicyGet operation.
type HtcProjectsProjectIdTaskRetentionPolicyGetForbidden struct{}

func (*HtcProjectsProjectIdTaskRetentionPolicyGetForbidden) htcProjectsProjectIdTaskRetentionPolicyGetRes() {
}

// HtcProjectsProjectIdTaskRetentionPolicyGetUnauthorized is response for HtcProjectsProjectIdTaskRetentionPolicyGet operation.
type HtcProjectsProjectIdTaskRetentionPolicyGetUnauthorized struct{}

func (*HtcProjectsProjectIdTaskRetentionPolicyGetUnauthorized) htcProjectsProjectIdTaskRetentionPolicyGetRes() {
}

// HtcProjectsProjectIdTaskRetentionPolicyPutForbidden is response for HtcProjectsProjectIdTaskRetentionPolicyPut operation.
type HtcProjectsProjectIdTaskRetentionPolicyPutForbidden struct{}

func (*HtcProjectsProjectIdTaskRetentionPolicyPutForbidden) htcProjectsProjectIdTaskRetentionPolicyPutRes() {
}

// HtcProjectsProjectIdTaskRetentionPolicyPutUnauthorized is response for HtcProjectsProjectIdTaskRetentionPolicyPut operation.
type HtcProjectsProjectIdTaskRetentionPolicyPutUnauthorized struct{}

func (*HtcProjectsProjectIdTaskRetentionPolicyPutUnauthorized) htcProjectsProjectIdTaskRetentionPolicyPutRes() {
}

// HtcProjectsProjectIdTasksGetForbidden is response for HtcProjectsProjectIdTasksGet operation.
type HtcProjectsProjectIdTasksGetForbidden struct{}

func (*HtcProjectsProjectIdTasksGetForbidden) htcProjectsProjectIdTasksGetRes() {}

// HtcProjectsProjectIdTasksGetUnauthorized is response for HtcProjectsProjectIdTasksGet operation.
type HtcProjectsProjectIdTasksGetUnauthorized struct{}

func (*HtcProjectsProjectIdTasksGetUnauthorized) htcProjectsProjectIdTasksGetRes() {}

// HtcProjectsProjectIdTasksPostForbidden is response for HtcProjectsProjectIdTasksPost operation.
type HtcProjectsProjectIdTasksPostForbidden struct{}

func (*HtcProjectsProjectIdTasksPostForbidden) htcProjectsProjectIdTasksPostRes() {}

// HtcProjectsProjectIdTasksPostUnauthorized is response for HtcProjectsProjectIdTasksPost operation.
type HtcProjectsProjectIdTasksPostUnauthorized struct{}

func (*HtcProjectsProjectIdTasksPostUnauthorized) htcProjectsProjectIdTasksPostRes() {}

// HtcProjectsProjectIdTasksTaskIdDeleteForbidden is response for HtcProjectsProjectIdTasksTaskIdDelete operation.
type HtcProjectsProjectIdTasksTaskIdDeleteForbidden struct{}

func (*HtcProjectsProjectIdTasksTaskIdDeleteForbidden) htcProjectsProjectIdTasksTaskIdDeleteRes() {}

type HtcProjectsProjectIdTasksTaskIdDeleteOK struct {
	ArchivedAt      OptDateTime                                               `json:"archivedAt"`
	CreatedAt       OptDateTime                                               `json:"createdAt"`
	CreatedBy       OptString                                                 `json:"createdBy"`
	DeletedAt       OptDateTime                                               `json:"deletedAt"`
	LastActiveAt    OptDateTime                                               `json:"lastActiveAt"`
	LifecycleStatus OptHtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus `json:"lifecycleStatus"`
	ProjectId       OptString                                                 `json:"projectId"`
	TaskDescription string                                                    `json:"taskDescription"`
	TaskFolderPath  OptString                                                 `json:"taskFolderPath"`
	TaskId          OptString                                                 `json:"taskId"`
	TaskName        string                                                    `json:"taskName"`
	WorkspaceId     OptString                                                 `json:"workspaceId"`
}

// GetArchivedAt returns the value of ArchivedAt.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) GetArchivedAt() OptDateTime {
	return s.ArchivedAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetCreatedBy returns the value of CreatedBy.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) GetCreatedBy() OptString {
	return s.CreatedBy
}

// GetDeletedAt returns the value of DeletedAt.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) GetDeletedAt() OptDateTime {
	return s.DeletedAt
}

// GetLastActiveAt returns the value of LastActiveAt.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) GetLastActiveAt() OptDateTime {
	return s.LastActiveAt
}

// GetLifecycleStatus returns the value of LifecycleStatus.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) GetLifecycleStatus() OptHtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus {
	return s.LifecycleStatus
}

// GetProjectId returns the value of ProjectId.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) GetProjectId() OptString {
	return s.ProjectId
}

// GetTaskDescription returns the value of TaskDescription.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) GetTaskDescription() string {
	return s.TaskDescription
}

// GetTaskFolderPath returns the value of TaskFolderPath.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) GetTaskFolderPath() OptString {
	return s.TaskFolderPath
}

// GetTaskId returns the value of TaskId.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) GetTaskId() OptString {
	return s.TaskId
}

// GetTaskName returns the value of TaskName.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) GetTaskName() string {
	return s.TaskName
}

// GetWorkspaceId returns the value of WorkspaceId.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) GetWorkspaceId() OptString {
	return s.WorkspaceId
}

// SetArchivedAt sets the value of ArchivedAt.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) SetArchivedAt(val OptDateTime) {
	s.ArchivedAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetCreatedBy sets the value of CreatedBy.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) SetCreatedBy(val OptString) {
	s.CreatedBy = val
}

// SetDeletedAt sets the value of DeletedAt.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) SetDeletedAt(val OptDateTime) {
	s.DeletedAt = val
}

// SetLastActiveAt sets the value of LastActiveAt.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) SetLastActiveAt(val OptDateTime) {
	s.LastActiveAt = val
}

// SetLifecycleStatus sets the value of LifecycleStatus.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) SetLifecycleStatus(val OptHtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus) {
	s.LifecycleStatus = val
}

// SetProjectId sets the value of ProjectId.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) SetProjectId(val OptString) {
	s.ProjectId = val
}

// SetTaskDescription sets the value of TaskDescription.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) SetTaskDescription(val string) {
	s.TaskDescription = val
}

// SetTaskFolderPath sets the value of TaskFolderPath.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) SetTaskFolderPath(val OptString) {
	s.TaskFolderPath = val
}

// SetTaskId sets the value of TaskId.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) SetTaskId(val OptString) {
	s.TaskId = val
}

// SetTaskName sets the value of TaskName.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) SetTaskName(val string) {
	s.TaskName = val
}

// SetWorkspaceId sets the value of WorkspaceId.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOK) SetWorkspaceId(val OptString) {
	s.WorkspaceId = val
}

func (*HtcProjectsProjectIdTasksTaskIdDeleteOK) htcProjectsProjectIdTasksTaskIdDeleteRes() {}

type HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus string

const (
	HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatusDELETED  HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus = "DELETED"
	HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatusACTIVE   HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus = "ACTIVE"
	HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatusARCHIVED HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus = "ARCHIVED"
)

// AllValues returns all HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus values.
func (HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus) AllValues() []HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus {
	return []HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus{
		HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatusDELETED,
		HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatusACTIVE,
		HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatusARCHIVED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus) MarshalText() ([]byte, error) {
	switch s {
	case HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatusDELETED:
		return []byte(s), nil
	case HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatusACTIVE:
		return []byte(s), nil
	case HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatusARCHIVED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus) UnmarshalText(data []byte) error {
	switch HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus(data) {
	case HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatusDELETED:
		*s = HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatusDELETED
		return nil
	case HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatusACTIVE:
		*s = HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatusACTIVE
		return nil
	case HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatusARCHIVED:
		*s = HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatusARCHIVED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// HtcProjectsProjectIdTasksTaskIdDeleteUnauthorized is response for HtcProjectsProjectIdTasksTaskIdDelete operation.
type HtcProjectsProjectIdTasksTaskIdDeleteUnauthorized struct{}

func (*HtcProjectsProjectIdTasksTaskIdDeleteUnauthorized) htcProjectsProjectIdTasksTaskIdDeleteRes() {
}

// HtcProjectsProjectIdTasksTaskIdGetForbidden is response for HtcProjectsProjectIdTasksTaskIdGet operation.
type HtcProjectsProjectIdTasksTaskIdGetForbidden struct{}

func (*HtcProjectsProjectIdTasksTaskIdGetForbidden) htcProjectsProjectIdTasksTaskIdGetRes() {}

// HtcProjectsProjectIdTasksTaskIdGetUnauthorized is response for HtcProjectsProjectIdTasksTaskIdGet operation.
type HtcProjectsProjectIdTasksTaskIdGetUnauthorized struct{}

func (*HtcProjectsProjectIdTasksTaskIdGetUnauthorized) htcProjectsProjectIdTasksTaskIdGetRes() {}

// HtcProjectsProjectIdTasksTaskIdGroupSummaryStatisticsGetForbidden is response for HtcProjectsProjectIdTasksTaskIdGroupSummaryStatisticsGet operation.
type HtcProjectsProjectIdTasksTaskIdGroupSummaryStatisticsGetForbidden struct{}

func (*HtcProjectsProjectIdTasksTaskIdGroupSummaryStatisticsGetForbidden) htcProjectsProjectIdTasksTaskIdGroupSummaryStatisticsGetRes() {
}

type HtcProjectsProjectIdTasksTaskIdGroupSummaryStatisticsGetOKApplicationJSON jx.Raw

func (*HtcProjectsProjectIdTasksTaskIdGroupSummaryStatisticsGetOKApplicationJSON) htcProjectsProjectIdTasksTaskIdGroupSummaryStatisticsGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdGroupSummaryStatisticsGetUnauthorized is response for HtcProjectsProjectIdTasksTaskIdGroupSummaryStatisticsGet operation.
type HtcProjectsProjectIdTasksTaskIdGroupSummaryStatisticsGetUnauthorized struct{}

func (*HtcProjectsProjectIdTasksTaskIdGroupSummaryStatisticsGetUnauthorized) htcProjectsProjectIdTasksTaskIdGroupSummaryStatisticsGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdGroupsGetForbidden is response for HtcProjectsProjectIdTasksTaskIdGroupsGet operation.
type HtcProjectsProjectIdTasksTaskIdGroupsGetForbidden struct{}

func (*HtcProjectsProjectIdTasksTaskIdGroupsGetForbidden) htcProjectsProjectIdTasksTaskIdGroupsGetRes() {
}

type HtcProjectsProjectIdTasksTaskIdGroupsGetOKApplicationJSON []string

func (*HtcProjectsProjectIdTasksTaskIdGroupsGetOKApplicationJSON) htcProjectsProjectIdTasksTaskIdGroupsGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdGroupsGetUnauthorized is response for HtcProjectsProjectIdTasksTaskIdGroupsGet operation.
type HtcProjectsProjectIdTasksTaskIdGroupsGetUnauthorized struct{}

func (*HtcProjectsProjectIdTasksTaskIdGroupsGetUnauthorized) htcProjectsProjectIdTasksTaskIdGroupsGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdJobsBatchPostForbidden is response for HtcProjectsProjectIdTasksTaskIdJobsBatchPost operation.
type HtcProjectsProjectIdTasksTaskIdJobsBatchPostForbidden struct{}

func (*HtcProjectsProjectIdTasksTaskIdJobsBatchPostForbidden) htcProjectsProjectIdTasksTaskIdJobsBatchPostRes() {
}

// HtcProjectsProjectIdTasksTaskIdJobsBatchPostUnauthorized is response for HtcProjectsProjectIdTasksTaskIdJobsBatchPost operation.
type HtcProjectsProjectIdTasksTaskIdJobsBatchPostUnauthorized struct{}

func (*HtcProjectsProjectIdTasksTaskIdJobsBatchPostUnauthorized) htcProjectsProjectIdTasksTaskIdJobsBatchPostRes() {
}

// HtcProjectsProjectIdTasksTaskIdJobsCancelPostForbidden is response for HtcProjectsProjectIdTasksTaskIdJobsCancelPost operation.
type HtcProjectsProjectIdTasksTaskIdJobsCancelPostForbidden struct{}

func (*HtcProjectsProjectIdTasksTaskIdJobsCancelPostForbidden) htcProjectsProjectIdTasksTaskIdJobsCancelPostRes() {
}

// HtcProjectsProjectIdTasksTaskIdJobsCancelPostOK is response for HtcProjectsProjectIdTasksTaskIdJobsCancelPost operation.
type HtcProjectsProjectIdTasksTaskIdJobsCancelPostOK struct{}

func (*HtcProjectsProjectIdTasksTaskIdJobsCancelPostOK) htcProjectsProjectIdTasksTaskIdJobsCancelPostRes() {
}

// HtcProjectsProjectIdTasksTaskIdJobsCancelPostUnauthorized is response for HtcProjectsProjectIdTasksTaskIdJobsCancelPost operation.
type HtcProjectsProjectIdTasksTaskIdJobsCancelPostUnauthorized struct{}

func (*HtcProjectsProjectIdTasksTaskIdJobsCancelPostUnauthorized) htcProjectsProjectIdTasksTaskIdJobsCancelPostRes() {
}

// HtcProjectsProjectIdTasksTaskIdJobsGetForbidden is response for HtcProjectsProjectIdTasksTaskIdJobsGet operation.
type HtcProjectsProjectIdTasksTaskIdJobsGetForbidden struct{}

func (*HtcProjectsProjectIdTasksTaskIdJobsGetForbidden) htcProjectsProjectIdTasksTaskIdJobsGetRes() {}

// HtcProjectsProjectIdTasksTaskIdJobsGetUnauthorized is response for HtcProjectsProjectIdTasksTaskIdJobsGet operation.
type HtcProjectsProjectIdTasksTaskIdJobsGetUnauthorized struct{}

func (*HtcProjectsProjectIdTasksTaskIdJobsGetUnauthorized) htcProjectsProjectIdTasksTaskIdJobsGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdJobsJobIdEventsGetForbidden is response for HtcProjectsProjectIdTasksTaskIdJobsJobIdEventsGet operation.
type HtcProjectsProjectIdTasksTaskIdJobsJobIdEventsGetForbidden struct{}

func (*HtcProjectsProjectIdTasksTaskIdJobsJobIdEventsGetForbidden) htcProjectsProjectIdTasksTaskIdJobsJobIdEventsGetRes() {
}

type HtcProjectsProjectIdTasksTaskIdJobsJobIdEventsGetOKApplicationJSON jx.Raw

func (*HtcProjectsProjectIdTasksTaskIdJobsJobIdEventsGetOKApplicationJSON) htcProjectsProjectIdTasksTaskIdJobsJobIdEventsGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdJobsJobIdEventsGetUnauthorized is response for HtcProjectsProjectIdTasksTaskIdJobsJobIdEventsGet operation.
type HtcProjectsProjectIdTasksTaskIdJobsJobIdEventsGetUnauthorized struct{}

func (*HtcProjectsProjectIdTasksTaskIdJobsJobIdEventsGetUnauthorized) htcProjectsProjectIdTasksTaskIdJobsJobIdEventsGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdJobsJobIdGetForbidden is response for HtcProjectsProjectIdTasksTaskIdJobsJobIdGet operation.
type HtcProjectsProjectIdTasksTaskIdJobsJobIdGetForbidden struct{}

func (*HtcProjectsProjectIdTasksTaskIdJobsJobIdGetForbidden) htcProjectsProjectIdTasksTaskIdJobsJobIdGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdJobsJobIdGetUnauthorized is response for HtcProjectsProjectIdTasksTaskIdJobsJobIdGet operation.
type HtcProjectsProjectIdTasksTaskIdJobsJobIdGetUnauthorized struct{}

func (*HtcProjectsProjectIdTasksTaskIdJobsJobIdGetUnauthorized) htcProjectsProjectIdTasksTaskIdJobsJobIdGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdJobsJobIdLogsGetForbidden is response for HtcProjectsProjectIdTasksTaskIdJobsJobIdLogsGet operation.
type HtcProjectsProjectIdTasksTaskIdJobsJobIdLogsGetForbidden struct{}

func (*HtcProjectsProjectIdTasksTaskIdJobsJobIdLogsGetForbidden) htcProjectsProjectIdTasksTaskIdJobsJobIdLogsGetRes() {
}

type HtcProjectsProjectIdTasksTaskIdJobsJobIdLogsGetOKApplicationJSON jx.Raw

func (*HtcProjectsProjectIdTasksTaskIdJobsJobIdLogsGetOKApplicationJSON) htcProjectsProjectIdTasksTaskIdJobsJobIdLogsGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdJobsJobIdLogsGetUnauthorized is response for HtcProjectsProjectIdTasksTaskIdJobsJobIdLogsGet operation.
type HtcProjectsProjectIdTasksTaskIdJobsJobIdLogsGetUnauthorized struct{}

func (*HtcProjectsProjectIdTasksTaskIdJobsJobIdLogsGetUnauthorized) htcProjectsProjectIdTasksTaskIdJobsJobIdLogsGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdPatchForbidden is response for HtcProjectsProjectIdTasksTaskIdPatch operation.
type HtcProjectsProjectIdTasksTaskIdPatchForbidden struct{}

func (*HtcProjectsProjectIdTasksTaskIdPatchForbidden) htcProjectsProjectIdTasksTaskIdPatchRes() {}

// HtcProjectsProjectIdTasksTaskIdPatchUnauthorized is response for HtcProjectsProjectIdTasksTaskIdPatch operation.
type HtcProjectsProjectIdTasksTaskIdPatchUnauthorized struct{}

func (*HtcProjectsProjectIdTasksTaskIdPatchUnauthorized) htcProjectsProjectIdTasksTaskIdPatchRes() {}

// HtcProjectsProjectIdTasksTaskIdStoragePresignedURLGetForbidden is response for HtcProjectsProjectIdTasksTaskIdStoragePresignedURLGet operation.
type HtcProjectsProjectIdTasksTaskIdStoragePresignedURLGetForbidden struct{}

func (*HtcProjectsProjectIdTasksTaskIdStoragePresignedURLGetForbidden) htcProjectsProjectIdTasksTaskIdStoragePresignedURLGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdStoragePresignedURLGetUnauthorized is response for HtcProjectsProjectIdTasksTaskIdStoragePresignedURLGet operation.
type HtcProjectsProjectIdTasksTaskIdStoragePresignedURLGetUnauthorized struct{}

func (*HtcProjectsProjectIdTasksTaskIdStoragePresignedURLGetUnauthorized) htcProjectsProjectIdTasksTaskIdStoragePresignedURLGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdStorageRegionalStorageGetForbidden is response for HtcProjectsProjectIdTasksTaskIdStorageRegionalStorageGet operation.
type HtcProjectsProjectIdTasksTaskIdStorageRegionalStorageGetForbidden struct{}

func (*HtcProjectsProjectIdTasksTaskIdStorageRegionalStorageGetForbidden) htcProjectsProjectIdTasksTaskIdStorageRegionalStorageGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdStorageRegionalStorageGetUnauthorized is response for HtcProjectsProjectIdTasksTaskIdStorageRegionalStorageGet operation.
type HtcProjectsProjectIdTasksTaskIdStorageRegionalStorageGetUnauthorized struct{}

func (*HtcProjectsProjectIdTasksTaskIdStorageRegionalStorageGetUnauthorized) htcProjectsProjectIdTasksTaskIdStorageRegionalStorageGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdStorageTokenGetForbidden is response for HtcProjectsProjectIdTasksTaskIdStorageTokenGet operation.
type HtcProjectsProjectIdTasksTaskIdStorageTokenGetForbidden struct{}

func (*HtcProjectsProjectIdTasksTaskIdStorageTokenGetForbidden) htcProjectsProjectIdTasksTaskIdStorageTokenGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdStorageTokenGetUnauthorized is response for HtcProjectsProjectIdTasksTaskIdStorageTokenGet operation.
type HtcProjectsProjectIdTasksTaskIdStorageTokenGetUnauthorized struct{}

func (*HtcProjectsProjectIdTasksTaskIdStorageTokenGetUnauthorized) htcProjectsProjectIdTasksTaskIdStorageTokenGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdStorageTokenRegionGetForbidden is response for HtcProjectsProjectIdTasksTaskIdStorageTokenRegionGet operation.
type HtcProjectsProjectIdTasksTaskIdStorageTokenRegionGetForbidden struct{}

func (*HtcProjectsProjectIdTasksTaskIdStorageTokenRegionGetForbidden) htcProjectsProjectIdTasksTaskIdStorageTokenRegionGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdStorageTokenRegionGetUnauthorized is response for HtcProjectsProjectIdTasksTaskIdStorageTokenRegionGet operation.
type HtcProjectsProjectIdTasksTaskIdStorageTokenRegionGetUnauthorized struct{}

func (*HtcProjectsProjectIdTasksTaskIdStorageTokenRegionGetUnauthorized) htcProjectsProjectIdTasksTaskIdStorageTokenRegionGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdStorageTokensGetForbidden is response for HtcProjectsProjectIdTasksTaskIdStorageTokensGet operation.
type HtcProjectsProjectIdTasksTaskIdStorageTokensGetForbidden struct{}

func (*HtcProjectsProjectIdTasksTaskIdStorageTokensGetForbidden) htcProjectsProjectIdTasksTaskIdStorageTokensGetRes() {
}

// HtcProjectsProjectIdTasksTaskIdStorageTokensGetUnauthorized is response for HtcProjectsProjectIdTasksTaskIdStorageTokensGet operation.
type HtcProjectsProjectIdTasksTaskIdStorageTokensGetUnauthorized struct{}

func (*HtcProjectsProjectIdTasksTaskIdStorageTokensGetUnauthorized) htcProjectsProjectIdTasksTaskIdStorageTokensGetRes() {
}

// HtcRegionsGetForbidden is response for HtcRegionsGet operation.
type HtcRegionsGetForbidden struct{}

func (*HtcRegionsGetForbidden) htcRegionsGetRes() {}

// HtcRegionsGetUnauthorized is response for HtcRegionsGet operation.
type HtcRegionsGetUnauthorized struct{}

func (*HtcRegionsGetUnauthorized) htcRegionsGetRes() {}

// HtcRegionsRegionGetForbidden is response for HtcRegionsRegionGet operation.
type HtcRegionsRegionGetForbidden struct{}

func (*HtcRegionsRegionGetForbidden) htcRegionsRegionGetRes() {}

// HtcRegionsRegionGetUnauthorized is response for HtcRegionsRegionGet operation.
type HtcRegionsRegionGetUnauthorized struct{}

func (*HtcRegionsRegionGetUnauthorized) htcRegionsRegionGetRes() {}

// HtcStorageGetForbidden is response for HtcStorageGet operation.
type HtcStorageGetForbidden struct{}

func (*HtcStorageGetForbidden) htcStorageGetRes() {}

type HtcStorageGetOKApplicationJSON []RegionStorageOption

func (*HtcStorageGetOKApplicationJSON) htcStorageGetRes() {}

// HtcStorageGetUnauthorized is response for HtcStorageGet operation.
type HtcStorageGetUnauthorized struct{}

func (*HtcStorageGetUnauthorized) htcStorageGetRes() {}

// HtcStorageRegionRegionGetForbidden is response for HtcStorageRegionRegionGet operation.
type HtcStorageRegionRegionGetForbidden struct{}

func (*HtcStorageRegionRegionGetForbidden) htcStorageRegionRegionGetRes() {}

// HtcStorageRegionRegionGetUnauthorized is response for HtcStorageRegionRegionGet operation.
type HtcStorageRegionRegionGetUnauthorized struct{}

func (*HtcStorageRegionRegionGetUnauthorized) htcStorageRegionRegionGetRes() {}

// HtcWorkspacesWorkspaceIdDimensionsGetForbidden is response for HtcWorkspacesWorkspaceIdDimensionsGet operation.
type HtcWorkspacesWorkspaceIdDimensionsGetForbidden struct{}

func (*HtcWorkspacesWorkspaceIdDimensionsGetForbidden) htcWorkspacesWorkspaceIdDimensionsGetRes() {}

type HtcWorkspacesWorkspaceIdDimensionsGetOKApplicationJSON []HTCComputeEnvironment

func (*HtcWorkspacesWorkspaceIdDimensionsGetOKApplicationJSON) htcWorkspacesWorkspaceIdDimensionsGetRes() {
}

// HtcWorkspacesWorkspaceIdDimensionsGetUnauthorized is response for HtcWorkspacesWorkspaceIdDimensionsGet operation.
type HtcWorkspacesWorkspaceIdDimensionsGetUnauthorized struct{}

func (*HtcWorkspacesWorkspaceIdDimensionsGetUnauthorized) htcWorkspacesWorkspaceIdDimensionsGetRes() {
}

// HtcWorkspacesWorkspaceIdLimitsGetForbidden is response for HtcWorkspacesWorkspaceIdLimitsGet operation.
type HtcWorkspacesWorkspaceIdLimitsGetForbidden struct{}

func (*HtcWorkspacesWorkspaceIdLimitsGetForbidden) htcWorkspacesWorkspaceIdLimitsGetRes() {}

// HtcWorkspacesWorkspaceIdLimitsGetUnauthorized is response for HtcWorkspacesWorkspaceIdLimitsGet operation.
type HtcWorkspacesWorkspaceIdLimitsGetUnauthorized struct{}

func (*HtcWorkspacesWorkspaceIdLimitsGetUnauthorized) htcWorkspacesWorkspaceIdLimitsGetRes() {}

// HtcWorkspacesWorkspaceIdTaskRetentionPolicyGetForbidden is response for HtcWorkspacesWorkspaceIdTaskRetentionPolicyGet operation.
type HtcWorkspacesWorkspaceIdTaskRetentionPolicyGetForbidden struct{}

func (*HtcWorkspacesWorkspaceIdTaskRetentionPolicyGetForbidden) htcWorkspacesWorkspaceIdTaskRetentionPolicyGetRes() {
}

// HtcWorkspacesWorkspaceIdTaskRetentionPolicyGetUnauthorized is response for HtcWorkspacesWorkspaceIdTaskRetentionPolicyGet operation.
type HtcWorkspacesWorkspaceIdTaskRetentionPolicyGetUnauthorized struct{}

func (*HtcWorkspacesWorkspaceIdTaskRetentionPolicyGetUnauthorized) htcWorkspacesWorkspaceIdTaskRetentionPolicyGetRes() {
}

// HtcWorkspacesWorkspaceIdTaskRetentionPolicyPutForbidden is response for HtcWorkspacesWorkspaceIdTaskRetentionPolicyPut operation.
type HtcWorkspacesWorkspaceIdTaskRetentionPolicyPutForbidden struct{}

func (*HtcWorkspacesWorkspaceIdTaskRetentionPolicyPutForbidden) htcWorkspacesWorkspaceIdTaskRetentionPolicyPutRes() {
}

// HtcWorkspacesWorkspaceIdTaskRetentionPolicyPutUnauthorized is response for HtcWorkspacesWorkspaceIdTaskRetentionPolicyPut operation.
type HtcWorkspacesWorkspaceIdTaskRetentionPolicyPutUnauthorized struct{}

func (*HtcWorkspacesWorkspaceIdTaskRetentionPolicyPutUnauthorized) htcWorkspacesWorkspaceIdTaskRetentionPolicyPutRes() {
}

// Ref: #/components/schemas/InstanceLabels
type InstanceLabels struct {
	AccountId            OptString `json:"accountId"`
	Csp                  OptString `json:"csp"`
	InstanceArchitecture OptString `json:"instanceArchitecture"`
	InstanceType         OptString `json:"instanceType"`
	Priority             OptString `json:"priority"`
	Region               OptString `json:"region"`
}

// GetAccountId returns the value of AccountId.
func (s *InstanceLabels) GetAccountId() OptString {
	return s.AccountId
}

// GetCsp returns the value of Csp.
func (s *InstanceLabels) GetCsp() OptString {
	return s.Csp
}

// GetInstanceArchitecture returns the value of InstanceArchitecture.
func (s *InstanceLabels) GetInstanceArchitecture() OptString {
	return s.InstanceArchitecture
}

// GetInstanceType returns the value of InstanceType.
func (s *InstanceLabels) GetInstanceType() OptString {
	return s.InstanceType
}

// GetPriority returns the value of Priority.
func (s *InstanceLabels) GetPriority() OptString {
	return s.Priority
}

// GetRegion returns the value of Region.
func (s *InstanceLabels) GetRegion() OptString {
	return s.Region
}

// SetAccountId sets the value of AccountId.
func (s *InstanceLabels) SetAccountId(val OptString) {
	s.AccountId = val
}

// SetCsp sets the value of Csp.
func (s *InstanceLabels) SetCsp(val OptString) {
	s.Csp = val
}

// SetInstanceArchitecture sets the value of InstanceArchitecture.
func (s *InstanceLabels) SetInstanceArchitecture(val OptString) {
	s.InstanceArchitecture = val
}

// SetInstanceType sets the value of InstanceType.
func (s *InstanceLabels) SetInstanceType(val OptString) {
	s.InstanceType = val
}

// SetPriority sets the value of Priority.
func (s *InstanceLabels) SetPriority(val OptString) {
	s.Priority = val
}

// SetRegion sets the value of Region.
func (s *InstanceLabels) SetRegion(val OptString) {
	s.Region = val
}

type Instant time.Time

// Ref: #/components/schemas/JobExecutionEnvironment
type JobExecutionEnvironment struct {
	Architecture OptFloat64 `json:"architecture"`
	InstanceId   OptString  `json:"instanceId"`
	InstanceType OptString  `json:"instanceType"`
}

// GetArchitecture returns the value of Architecture.
func (s *JobExecutionEnvironment) GetArchitecture() OptFloat64 {
	return s.Architecture
}

// GetInstanceId returns the value of InstanceId.
func (s *JobExecutionEnvironment) GetInstanceId() OptString {
	return s.InstanceId
}

// GetInstanceType returns the value of InstanceType.
func (s *JobExecutionEnvironment) GetInstanceType() OptString {
	return s.InstanceType
}

// SetArchitecture sets the value of Architecture.
func (s *JobExecutionEnvironment) SetArchitecture(val OptFloat64) {
	s.Architecture = val
}

// SetInstanceId sets the value of InstanceId.
func (s *JobExecutionEnvironment) SetInstanceId(val OptString) {
	s.InstanceId = val
}

// SetInstanceType sets the value of InstanceType.
func (s *JobExecutionEnvironment) SetInstanceType(val OptString) {
	s.InstanceType = val
}

// Ref: #/components/schemas/JobPriority
type JobPriority string

const (
	JobPriorityONDEMANDPRIORITY JobPriority = "ON_DEMAND_PRIORITY"
	JobPriorityONDEMANDECONOMY  JobPriority = "ON_DEMAND_ECONOMY"
)

// AllValues returns all JobPriority values.
func (JobPriority) AllValues() []JobPriority {
	return []JobPriority{
		JobPriorityONDEMANDPRIORITY,
		JobPriorityONDEMANDECONOMY,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s JobPriority) MarshalText() ([]byte, error) {
	switch s {
	case JobPriorityONDEMANDPRIORITY:
		return []byte(s), nil
	case JobPriorityONDEMANDECONOMY:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *JobPriority) UnmarshalText(data []byte) error {
	switch JobPriority(data) {
	case JobPriorityONDEMANDPRIORITY:
		*s = JobPriorityONDEMANDPRIORITY
		return nil
	case JobPriorityONDEMANDECONOMY:
		*s = JobPriorityONDEMANDECONOMY
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/JsonWebKey
type JsonWebKey struct {
	Algorithm       OptString                    `json:"algorithm"`
	Key             OptKey                       `json:"key"`
	KeyId           OptString                    `json:"keyId"`
	KeyOps          []string                     `json:"keyOps"`
	KeyType         OptString                    `json:"keyType"`
	OtherParameters OptJsonWebKeyOtherParameters `json:"otherParameters"`
	PublicKey       OptPublicKey                 `json:"publicKey"`
	Use             OptString                    `json:"use"`
}

// GetAlgorithm returns the value of Algorithm.
func (s *JsonWebKey) GetAlgorithm() OptString {
	return s.Algorithm
}

// GetKey returns the value of Key.
func (s *JsonWebKey) GetKey() OptKey {
	return s.Key
}

// GetKeyId returns the value of KeyId.
func (s *JsonWebKey) GetKeyId() OptString {
	return s.KeyId
}

// GetKeyOps returns the value of KeyOps.
func (s *JsonWebKey) GetKeyOps() []string {
	return s.KeyOps
}

// GetKeyType returns the value of KeyType.
func (s *JsonWebKey) GetKeyType() OptString {
	return s.KeyType
}

// GetOtherParameters returns the value of OtherParameters.
func (s *JsonWebKey) GetOtherParameters() OptJsonWebKeyOtherParameters {
	return s.OtherParameters
}

// GetPublicKey returns the value of PublicKey.
func (s *JsonWebKey) GetPublicKey() OptPublicKey {
	return s.PublicKey
}

// GetUse returns the value of Use.
func (s *JsonWebKey) GetUse() OptString {
	return s.Use
}

// SetAlgorithm sets the value of Algorithm.
func (s *JsonWebKey) SetAlgorithm(val OptString) {
	s.Algorithm = val
}

// SetKey sets the value of Key.
func (s *JsonWebKey) SetKey(val OptKey) {
	s.Key = val
}

// SetKeyId sets the value of KeyId.
func (s *JsonWebKey) SetKeyId(val OptString) {
	s.KeyId = val
}

// SetKeyOps sets the value of KeyOps.
func (s *JsonWebKey) SetKeyOps(val []string) {
	s.KeyOps = val
}

// SetKeyType sets the value of KeyType.
func (s *JsonWebKey) SetKeyType(val OptString) {
	s.KeyType = val
}

// SetOtherParameters sets the value of OtherParameters.
func (s *JsonWebKey) SetOtherParameters(val OptJsonWebKeyOtherParameters) {
	s.OtherParameters = val
}

// SetPublicKey sets the value of PublicKey.
func (s *JsonWebKey) SetPublicKey(val OptPublicKey) {
	s.PublicKey = val
}

// SetUse sets the value of Use.
func (s *JsonWebKey) SetUse(val OptString) {
	s.Use = val
}

type JsonWebKeyOtherParameters map[string]jx.Raw

func (s *JsonWebKeyOtherParameters) init() JsonWebKeyOtherParameters {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/JsonWebKeySet
type JsonWebKeySet struct {
	JsonWebKeys []JsonWebKey `json:"jsonWebKeys"`
	Keys        []JsonWebKey `json:"keys"`
}

// GetJsonWebKeys returns the value of JsonWebKeys.
func (s *JsonWebKeySet) GetJsonWebKeys() []JsonWebKey {
	return s.JsonWebKeys
}

// GetKeys returns the value of Keys.
func (s *JsonWebKeySet) GetKeys() []JsonWebKey {
	return s.Keys
}

// SetJsonWebKeys sets the value of JsonWebKeys.
func (s *JsonWebKeySet) SetJsonWebKeys(val []JsonWebKey) {
	s.JsonWebKeys = val
}

// SetKeys sets the value of Keys.
func (s *JsonWebKeySet) SetKeys(val []JsonWebKey) {
	s.Keys = val
}

func (*JsonWebKeySet) wellKnownJwksJSONGetRes() {}

// Ref: #/components/schemas/Key
type Key struct {
	Algorithm OptString `json:"algorithm"`
	Encoded   OptString `json:"encoded"`
	Format    OptString `json:"format"`
}

// GetAlgorithm returns the value of Algorithm.
func (s *Key) GetAlgorithm() OptString {
	return s.Algorithm
}

// GetEncoded returns the value of Encoded.
func (s *Key) GetEncoded() OptString {
	return s.Encoded
}

// GetFormat returns the value of Format.
func (s *Key) GetFormat() OptString {
	return s.Format
}

// SetAlgorithm sets the value of Algorithm.
func (s *Key) SetAlgorithm(val OptString) {
	s.Algorithm = val
}

// SetEncoded sets the value of Encoded.
func (s *Key) SetEncoded(val OptString) {
	s.Encoded = val
}

// SetFormat sets the value of Format.
func (s *Key) SetFormat(val OptString) {
	s.Format = val
}

// Ref: #/components/schemas/ModifierRole
type ModifierRole string

const (
	ModifierRoleWORKSPACEADMIN ModifierRole = "WORKSPACE_ADMIN"
	ModifierRolePROJECTADMIN   ModifierRole = "PROJECT_ADMIN"
)

// AllValues returns all ModifierRole values.
func (ModifierRole) AllValues() []ModifierRole {
	return []ModifierRole{
		ModifierRoleWORKSPACEADMIN,
		ModifierRolePROJECTADMIN,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ModifierRole) MarshalText() ([]byte, error) {
	switch s {
	case ModifierRoleWORKSPACEADMIN:
		return []byte(s), nil
	case ModifierRolePROJECTADMIN:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ModifierRole) UnmarshalText(data []byte) error {
	switch ModifierRole(data) {
	case ModifierRoleWORKSPACEADMIN:
		*s = ModifierRoleWORKSPACEADMIN
		return nil
	case ModifierRolePROJECTADMIN:
		*s = ModifierRolePROJECTADMIN
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/NameValuePair
type NameValuePair struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

// GetName returns the value of Name.
func (s *NameValuePair) GetName() string {
	return s.Name
}

// GetValue returns the value of Value.
func (s *NameValuePair) GetValue() string {
	return s.Value
}

// SetName sets the value of Name.
func (s *NameValuePair) SetName(val string) {
	s.Name = val
}

// SetValue sets the value of Value.
func (s *NameValuePair) SetValue(val string) {
	s.Value = val
}

// Ref: #/components/schemas/OAuth2ErrorResponse
type OAuth2ErrorResponse struct {
	Error            OptString `json:"error"`
	ErrorDescription OptString `json:"errorDescription"`
}

// GetError returns the value of Error.
func (s *OAuth2ErrorResponse) GetError() OptString {
	return s.Error
}

// GetErrorDescription returns the value of ErrorDescription.
func (s *OAuth2ErrorResponse) GetErrorDescription() OptString {
	return s.ErrorDescription
}

// SetError sets the value of Error.
func (s *OAuth2ErrorResponse) SetError(val OptString) {
	s.Error = val
}

// SetErrorDescription sets the value of ErrorDescription.
func (s *OAuth2ErrorResponse) SetErrorDescription(val OptString) {
	s.ErrorDescription = val
}

func (*OAuth2ErrorResponse) authTokenGetRes()                 {}
func (*OAuth2ErrorResponse) authTokenWhoamiGetRes()           {}
func (*OAuth2ErrorResponse) authWhoamiGetRes()                {}
func (*OAuth2ErrorResponse) htcGcpClustersWorkspaceIdGetRes() {}
func (*OAuth2ErrorResponse) htcRegionsGetRes()                {}
func (*OAuth2ErrorResponse) htcRegionsRegionGetRes()          {}
func (*OAuth2ErrorResponse) oAuth2TokenPostRes()              {}
func (*OAuth2ErrorResponse) wellKnownJwksJSONGetRes()         {}

// Ref: #/components/schemas/OAuth2Token
type OAuth2Token struct {
	AccessToken OptString `json:"access_token"`
	ExpiresIn   OptInt64  `json:"expires_in"`
	TokenType   OptString `json:"token_type"`
}

// GetAccessToken returns the value of AccessToken.
func (s *OAuth2Token) GetAccessToken() OptString {
	return s.AccessToken
}

// GetExpiresIn returns the value of ExpiresIn.
func (s *OAuth2Token) GetExpiresIn() OptInt64 {
	return s.ExpiresIn
}

// GetTokenType returns the value of TokenType.
func (s *OAuth2Token) GetTokenType() OptString {
	return s.TokenType
}

// SetAccessToken sets the value of AccessToken.
func (s *OAuth2Token) SetAccessToken(val OptString) {
	s.AccessToken = val
}

// SetExpiresIn sets the value of ExpiresIn.
func (s *OAuth2Token) SetExpiresIn(val OptInt64) {
	s.ExpiresIn = val
}

// SetTokenType sets the value of TokenType.
func (s *OAuth2Token) SetTokenType(val OptString) {
	s.TokenType = val
}

func (*OAuth2Token) oAuth2TokenPostRes() {}

// NewOptArchitecture returns new OptArchitecture with value set to v.
func NewOptArchitecture(v Architecture) OptArchitecture {
	return OptArchitecture{
		Value: v,
		Set:   true,
	}
}

// OptArchitecture is optional Architecture.
type OptArchitecture struct {
	Value Architecture
	Set   bool
}

// IsSet returns true if OptArchitecture was set.
func (o OptArchitecture) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptArchitecture) Reset() {
	var v Architecture
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptArchitecture) SetTo(v Architecture) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptArchitecture) Get() (v Architecture, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptArchitecture) Or(d Architecture) Architecture {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAutoscalingConfig returns new OptAutoscalingConfig with value set to v.
func NewOptAutoscalingConfig(v AutoscalingConfig) OptAutoscalingConfig {
	return OptAutoscalingConfig{
		Value: v,
		Set:   true,
	}
}

// OptAutoscalingConfig is optional AutoscalingConfig.
type OptAutoscalingConfig struct {
	Value AutoscalingConfig
	Set   bool
}

// IsSet returns true if OptAutoscalingConfig was set.
func (o OptAutoscalingConfig) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAutoscalingConfig) Reset() {
	var v AutoscalingConfig
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAutoscalingConfig) SetTo(v AutoscalingConfig) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAutoscalingConfig) Get() (v AutoscalingConfig, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAutoscalingConfig) Or(d AutoscalingConfig) AutoscalingConfig {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAutoscalingProfile returns new OptAutoscalingProfile with value set to v.
func NewOptAutoscalingProfile(v AutoscalingProfile) OptAutoscalingProfile {
	return OptAutoscalingProfile{
		Value: v,
		Set:   true,
	}
}

// OptAutoscalingProfile is optional AutoscalingProfile.
type OptAutoscalingProfile struct {
	Value AutoscalingProfile
	Set   bool
}

// IsSet returns true if OptAutoscalingProfile was set.
func (o OptAutoscalingProfile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAutoscalingProfile) Reset() {
	var v AutoscalingProfile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAutoscalingProfile) SetTo(v AutoscalingProfile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAutoscalingProfile) Get() (v AutoscalingProfile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAutoscalingProfile) Or(d AutoscalingProfile) AutoscalingProfile {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCloudProvider returns new OptCloudProvider with value set to v.
func NewOptCloudProvider(v CloudProvider) OptCloudProvider {
	return OptCloudProvider{
		Value: v,
		Set:   true,
	}
}

// OptCloudProvider is optional CloudProvider.
type OptCloudProvider struct {
	Value CloudProvider
	Set   bool
}

// IsSet returns true if OptCloudProvider was set.
func (o OptCloudProvider) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCloudProvider) Reset() {
	var v CloudProvider
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCloudProvider) SetTo(v CloudProvider) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCloudProvider) Get() (v CloudProvider, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCloudProvider) Or(d CloudProvider) CloudProvider {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptContainerDetails returns new OptContainerDetails with value set to v.
func NewOptContainerDetails(v ContainerDetails) OptContainerDetails {
	return OptContainerDetails{
		Value: v,
		Set:   true,
	}
}

// OptContainerDetails is optional ContainerDetails.
type OptContainerDetails struct {
	Value ContainerDetails
	Set   bool
}

// IsSet returns true if OptContainerDetails was set.
func (o OptContainerDetails) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptContainerDetails) Reset() {
	var v ContainerDetails
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptContainerDetails) SetTo(v ContainerDetails) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptContainerDetails) Get() (v ContainerDetails, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptContainerDetails) Or(d ContainerDetails) ContainerDetails {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptExperimentalFields returns new OptExperimentalFields with value set to v.
func NewOptExperimentalFields(v ExperimentalFields) OptExperimentalFields {
	return OptExperimentalFields{
		Value: v,
		Set:   true,
	}
}

// OptExperimentalFields is optional ExperimentalFields.
type OptExperimentalFields struct {
	Value ExperimentalFields
	Set   bool
}

// IsSet returns true if OptExperimentalFields was set.
func (o OptExperimentalFields) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptExperimentalFields) Reset() {
	var v ExperimentalFields
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptExperimentalFields) SetTo(v ExperimentalFields) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptExperimentalFields) Get() (v ExperimentalFields, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptExperimentalFields) Or(d ExperimentalFields) ExperimentalFields {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFeatureFlagsResult returns new OptFeatureFlagsResult with value set to v.
func NewOptFeatureFlagsResult(v FeatureFlagsResult) OptFeatureFlagsResult {
	return OptFeatureFlagsResult{
		Value: v,
		Set:   true,
	}
}

// OptFeatureFlagsResult is optional FeatureFlagsResult.
type OptFeatureFlagsResult struct {
	Value FeatureFlagsResult
	Set   bool
}

// IsSet returns true if OptFeatureFlagsResult was set.
func (o OptFeatureFlagsResult) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFeatureFlagsResult) Reset() {
	var v FeatureFlagsResult
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFeatureFlagsResult) SetTo(v FeatureFlagsResult) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFeatureFlagsResult) Get() (v FeatureFlagsResult, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFeatureFlagsResult) Or(d FeatureFlagsResult) FeatureFlagsResult {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHTCComputeEnvironmentComputeScalingPolicy returns new OptHTCComputeEnvironmentComputeScalingPolicy with value set to v.
func NewOptHTCComputeEnvironmentComputeScalingPolicy(v HTCComputeEnvironmentComputeScalingPolicy) OptHTCComputeEnvironmentComputeScalingPolicy {
	return OptHTCComputeEnvironmentComputeScalingPolicy{
		Value: v,
		Set:   true,
	}
}

// OptHTCComputeEnvironmentComputeScalingPolicy is optional HTCComputeEnvironmentComputeScalingPolicy.
type OptHTCComputeEnvironmentComputeScalingPolicy struct {
	Value HTCComputeEnvironmentComputeScalingPolicy
	Set   bool
}

// IsSet returns true if OptHTCComputeEnvironmentComputeScalingPolicy was set.
func (o OptHTCComputeEnvironmentComputeScalingPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHTCComputeEnvironmentComputeScalingPolicy) Reset() {
	var v HTCComputeEnvironmentComputeScalingPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHTCComputeEnvironmentComputeScalingPolicy) SetTo(v HTCComputeEnvironmentComputeScalingPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHTCComputeEnvironmentComputeScalingPolicy) Get() (v HTCComputeEnvironmentComputeScalingPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHTCComputeEnvironmentComputeScalingPolicy) Or(d HTCComputeEnvironmentComputeScalingPolicy) HTCComputeEnvironmentComputeScalingPolicy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHTCComputeEnvironmentDerived returns new OptHTCComputeEnvironmentDerived with value set to v.
func NewOptHTCComputeEnvironmentDerived(v HTCComputeEnvironmentDerived) OptHTCComputeEnvironmentDerived {
	return OptHTCComputeEnvironmentDerived{
		Value: v,
		Set:   true,
	}
}

// OptHTCComputeEnvironmentDerived is optional HTCComputeEnvironmentDerived.
type OptHTCComputeEnvironmentDerived struct {
	Value HTCComputeEnvironmentDerived
	Set   bool
}

// IsSet returns true if OptHTCComputeEnvironmentDerived was set.
func (o OptHTCComputeEnvironmentDerived) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHTCComputeEnvironmentDerived) Reset() {
	var v HTCComputeEnvironmentDerived
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHTCComputeEnvironmentDerived) SetTo(v HTCComputeEnvironmentDerived) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHTCComputeEnvironmentDerived) Get() (v HTCComputeEnvironmentDerived, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHTCComputeEnvironmentDerived) Or(d HTCComputeEnvironmentDerived) HTCComputeEnvironmentDerived {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHTCComputeEnvironmentDerivedArchitecture returns new OptHTCComputeEnvironmentDerivedArchitecture with value set to v.
func NewOptHTCComputeEnvironmentDerivedArchitecture(v HTCComputeEnvironmentDerivedArchitecture) OptHTCComputeEnvironmentDerivedArchitecture {
	return OptHTCComputeEnvironmentDerivedArchitecture{
		Value: v,
		Set:   true,
	}
}

// OptHTCComputeEnvironmentDerivedArchitecture is optional HTCComputeEnvironmentDerivedArchitecture.
type OptHTCComputeEnvironmentDerivedArchitecture struct {
	Value HTCComputeEnvironmentDerivedArchitecture
	Set   bool
}

// IsSet returns true if OptHTCComputeEnvironmentDerivedArchitecture was set.
func (o OptHTCComputeEnvironmentDerivedArchitecture) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHTCComputeEnvironmentDerivedArchitecture) Reset() {
	var v HTCComputeEnvironmentDerivedArchitecture
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHTCComputeEnvironmentDerivedArchitecture) SetTo(v HTCComputeEnvironmentDerivedArchitecture) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHTCComputeEnvironmentDerivedArchitecture) Get() (v HTCComputeEnvironmentDerivedArchitecture, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHTCComputeEnvironmentDerivedArchitecture) Or(d HTCComputeEnvironmentDerivedArchitecture) HTCComputeEnvironmentDerivedArchitecture {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHTCComputeEnvironmentPriority returns new OptHTCComputeEnvironmentPriority with value set to v.
func NewOptHTCComputeEnvironmentPriority(v HTCComputeEnvironmentPriority) OptHTCComputeEnvironmentPriority {
	return OptHTCComputeEnvironmentPriority{
		Value: v,
		Set:   true,
	}
}

// OptHTCComputeEnvironmentPriority is optional HTCComputeEnvironmentPriority.
type OptHTCComputeEnvironmentPriority struct {
	Value HTCComputeEnvironmentPriority
	Set   bool
}

// IsSet returns true if OptHTCComputeEnvironmentPriority was set.
func (o OptHTCComputeEnvironmentPriority) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHTCComputeEnvironmentPriority) Reset() {
	var v HTCComputeEnvironmentPriority
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHTCComputeEnvironmentPriority) SetTo(v HTCComputeEnvironmentPriority) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHTCComputeEnvironmentPriority) Get() (v HTCComputeEnvironmentPriority, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHTCComputeEnvironmentPriority) Or(d HTCComputeEnvironmentPriority) HTCComputeEnvironmentPriority {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHTCComputeEnvironmentRegion returns new OptHTCComputeEnvironmentRegion with value set to v.
func NewOptHTCComputeEnvironmentRegion(v HTCComputeEnvironmentRegion) OptHTCComputeEnvironmentRegion {
	return OptHTCComputeEnvironmentRegion{
		Value: v,
		Set:   true,
	}
}

// OptHTCComputeEnvironmentRegion is optional HTCComputeEnvironmentRegion.
type OptHTCComputeEnvironmentRegion struct {
	Value HTCComputeEnvironmentRegion
	Set   bool
}

// IsSet returns true if OptHTCComputeEnvironmentRegion was set.
func (o OptHTCComputeEnvironmentRegion) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHTCComputeEnvironmentRegion) Reset() {
	var v HTCComputeEnvironmentRegion
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHTCComputeEnvironmentRegion) SetTo(v HTCComputeEnvironmentRegion) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHTCComputeEnvironmentRegion) Get() (v HTCComputeEnvironmentRegion, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHTCComputeEnvironmentRegion) Or(d HTCComputeEnvironmentRegion) HTCComputeEnvironmentRegion {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHTCJobDefinitionTags returns new OptHTCJobDefinitionTags with value set to v.
func NewOptHTCJobDefinitionTags(v HTCJobDefinitionTags) OptHTCJobDefinitionTags {
	return OptHTCJobDefinitionTags{
		Value: v,
		Set:   true,
	}
}

// OptHTCJobDefinitionTags is optional HTCJobDefinitionTags.
type OptHTCJobDefinitionTags struct {
	Value HTCJobDefinitionTags
	Set   bool
}

// IsSet returns true if OptHTCJobDefinitionTags was set.
func (o OptHTCJobDefinitionTags) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHTCJobDefinitionTags) Reset() {
	var v HTCJobDefinitionTags
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHTCJobDefinitionTags) SetTo(v HTCJobDefinitionTags) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHTCJobDefinitionTags) Get() (v HTCJobDefinitionTags, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHTCJobDefinitionTags) Or(d HTCJobDefinitionTags) HTCJobDefinitionTags {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHTCJobFailureCode returns new OptHTCJobFailureCode with value set to v.
func NewOptHTCJobFailureCode(v HTCJobFailureCode) OptHTCJobFailureCode {
	return OptHTCJobFailureCode{
		Value: v,
		Set:   true,
	}
}

// OptHTCJobFailureCode is optional HTCJobFailureCode.
type OptHTCJobFailureCode struct {
	Value HTCJobFailureCode
	Set   bool
}

// IsSet returns true if OptHTCJobFailureCode was set.
func (o OptHTCJobFailureCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHTCJobFailureCode) Reset() {
	var v HTCJobFailureCode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHTCJobFailureCode) SetTo(v HTCJobFailureCode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHTCJobFailureCode) Get() (v HTCJobFailureCode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHTCJobFailureCode) Or(d HTCJobFailureCode) HTCJobFailureCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHTCLimitCreate returns new OptHTCLimitCreate with value set to v.
func NewOptHTCLimitCreate(v HTCLimitCreate) OptHTCLimitCreate {
	return OptHTCLimitCreate{
		Value: v,
		Set:   true,
	}
}

// OptHTCLimitCreate is optional HTCLimitCreate.
type OptHTCLimitCreate struct {
	Value HTCLimitCreate
	Set   bool
}

// IsSet returns true if OptHTCLimitCreate was set.
func (o OptHTCLimitCreate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHTCLimitCreate) Reset() {
	var v HTCLimitCreate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHTCLimitCreate) SetTo(v HTCLimitCreate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHTCLimitCreate) Get() (v HTCLimitCreate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHTCLimitCreate) Or(d HTCLimitCreate) HTCLimitCreate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHTCLimitUpdate returns new OptHTCLimitUpdate with value set to v.
func NewOptHTCLimitUpdate(v HTCLimitUpdate) OptHTCLimitUpdate {
	return OptHTCLimitUpdate{
		Value: v,
		Set:   true,
	}
}

// OptHTCLimitUpdate is optional HTCLimitUpdate.
type OptHTCLimitUpdate struct {
	Value HTCLimitUpdate
	Set   bool
}

// IsSet returns true if OptHTCLimitUpdate was set.
func (o OptHTCLimitUpdate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHTCLimitUpdate) Reset() {
	var v HTCLimitUpdate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHTCLimitUpdate) SetTo(v HTCLimitUpdate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHTCLimitUpdate) Get() (v HTCLimitUpdate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHTCLimitUpdate) Or(d HTCLimitUpdate) HTCLimitUpdate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHTCProject returns new OptHTCProject with value set to v.
func NewOptHTCProject(v HTCProject) OptHTCProject {
	return OptHTCProject{
		Value: v,
		Set:   true,
	}
}

// OptHTCProject is optional HTCProject.
type OptHTCProject struct {
	Value HTCProject
	Set   bool
}

// IsSet returns true if OptHTCProject was set.
func (o OptHTCProject) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHTCProject) Reset() {
	var v HTCProject
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHTCProject) SetTo(v HTCProject) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHTCProject) Get() (v HTCProject, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHTCProject) Or(d HTCProject) HTCProject {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHTCProjectLimitModifierRole returns new OptHTCProjectLimitModifierRole with value set to v.
func NewOptHTCProjectLimitModifierRole(v HTCProjectLimitModifierRole) OptHTCProjectLimitModifierRole {
	return OptHTCProjectLimitModifierRole{
		Value: v,
		Set:   true,
	}
}

// OptHTCProjectLimitModifierRole is optional HTCProjectLimitModifierRole.
type OptHTCProjectLimitModifierRole struct {
	Value HTCProjectLimitModifierRole
	Set   bool
}

// IsSet returns true if OptHTCProjectLimitModifierRole was set.
func (o OptHTCProjectLimitModifierRole) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHTCProjectLimitModifierRole) Reset() {
	var v HTCProjectLimitModifierRole
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHTCProjectLimitModifierRole) SetTo(v HTCProjectLimitModifierRole) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHTCProjectLimitModifierRole) Get() (v HTCProjectLimitModifierRole, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHTCProjectLimitModifierRole) Or(d HTCProjectLimitModifierRole) HTCProjectLimitModifierRole {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHTCProjectUpdate returns new OptHTCProjectUpdate with value set to v.
func NewOptHTCProjectUpdate(v HTCProjectUpdate) OptHTCProjectUpdate {
	return OptHTCProjectUpdate{
		Value: v,
		Set:   true,
	}
}

// OptHTCProjectUpdate is optional HTCProjectUpdate.
type OptHTCProjectUpdate struct {
	Value HTCProjectUpdate
	Set   bool
}

// IsSet returns true if OptHTCProjectUpdate was set.
func (o OptHTCProjectUpdate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHTCProjectUpdate) Reset() {
	var v HTCProjectUpdate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHTCProjectUpdate) SetTo(v HTCProjectUpdate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHTCProjectUpdate) Get() (v HTCProjectUpdate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHTCProjectUpdate) Or(d HTCProjectUpdate) HTCProjectUpdate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHTCRegionAdminSettingsRegion returns new OptHTCRegionAdminSettingsRegion with value set to v.
func NewOptHTCRegionAdminSettingsRegion(v HTCRegionAdminSettingsRegion) OptHTCRegionAdminSettingsRegion {
	return OptHTCRegionAdminSettingsRegion{
		Value: v,
		Set:   true,
	}
}

// OptHTCRegionAdminSettingsRegion is optional HTCRegionAdminSettingsRegion.
type OptHTCRegionAdminSettingsRegion struct {
	Value HTCRegionAdminSettingsRegion
	Set   bool
}

// IsSet returns true if OptHTCRegionAdminSettingsRegion was set.
func (o OptHTCRegionAdminSettingsRegion) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHTCRegionAdminSettingsRegion) Reset() {
	var v HTCRegionAdminSettingsRegion
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHTCRegionAdminSettingsRegion) SetTo(v HTCRegionAdminSettingsRegion) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHTCRegionAdminSettingsRegion) Get() (v HTCRegionAdminSettingsRegion, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHTCRegionAdminSettingsRegion) Or(d HTCRegionAdminSettingsRegion) HTCRegionAdminSettingsRegion {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHTCRetryStrategy returns new OptHTCRetryStrategy with value set to v.
func NewOptHTCRetryStrategy(v HTCRetryStrategy) OptHTCRetryStrategy {
	return OptHTCRetryStrategy{
		Value: v,
		Set:   true,
	}
}

// OptHTCRetryStrategy is optional HTCRetryStrategy.
type OptHTCRetryStrategy struct {
	Value HTCRetryStrategy
	Set   bool
}

// IsSet returns true if OptHTCRetryStrategy was set.
func (o OptHTCRetryStrategy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHTCRetryStrategy) Reset() {
	var v HTCRetryStrategy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHTCRetryStrategy) SetTo(v HTCRetryStrategy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHTCRetryStrategy) Get() (v HTCRetryStrategy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHTCRetryStrategy) Or(d HTCRetryStrategy) HTCRetryStrategy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHTCTask returns new OptHTCTask with value set to v.
func NewOptHTCTask(v HTCTask) OptHTCTask {
	return OptHTCTask{
		Value: v,
		Set:   true,
	}
}

// OptHTCTask is optional HTCTask.
type OptHTCTask struct {
	Value HTCTask
	Set   bool
}

// IsSet returns true if OptHTCTask was set.
func (o OptHTCTask) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHTCTask) Reset() {
	var v HTCTask
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHTCTask) SetTo(v HTCTask) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHTCTask) Get() (v HTCTask, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHTCTask) Or(d HTCTask) HTCTask {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHTCTaskLifecycleStatus returns new OptHTCTaskLifecycleStatus with value set to v.
func NewOptHTCTaskLifecycleStatus(v HTCTaskLifecycleStatus) OptHTCTaskLifecycleStatus {
	return OptHTCTaskLifecycleStatus{
		Value: v,
		Set:   true,
	}
}

// OptHTCTaskLifecycleStatus is optional HTCTaskLifecycleStatus.
type OptHTCTaskLifecycleStatus struct {
	Value HTCTaskLifecycleStatus
	Set   bool
}

// IsSet returns true if OptHTCTaskLifecycleStatus was set.
func (o OptHTCTaskLifecycleStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHTCTaskLifecycleStatus) Reset() {
	var v HTCTaskLifecycleStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHTCTaskLifecycleStatus) SetTo(v HTCTaskLifecycleStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHTCTaskLifecycleStatus) Get() (v HTCTaskLifecycleStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHTCTaskLifecycleStatus) Or(d HTCTaskLifecycleStatus) HTCTaskLifecycleStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHTCTaskUpdate returns new OptHTCTaskUpdate with value set to v.
func NewOptHTCTaskUpdate(v HTCTaskUpdate) OptHTCTaskUpdate {
	return OptHTCTaskUpdate{
		Value: v,
		Set:   true,
	}
}

// OptHTCTaskUpdate is optional HTCTaskUpdate.
type OptHTCTaskUpdate struct {
	Value HTCTaskUpdate
	Set   bool
}

// IsSet returns true if OptHTCTaskUpdate was set.
func (o OptHTCTaskUpdate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHTCTaskUpdate) Reset() {
	var v HTCTaskUpdate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHTCTaskUpdate) SetTo(v HTCTaskUpdate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHTCTaskUpdate) Get() (v HTCTaskUpdate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHTCTaskUpdate) Or(d HTCTaskUpdate) HTCTaskUpdate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus returns new OptHtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus with value set to v.
func NewOptHtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus(v HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus) OptHtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus {
	return OptHtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus{
		Value: v,
		Set:   true,
	}
}

// OptHtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus is optional HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus.
type OptHtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus struct {
	Value HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus
	Set   bool
}

// IsSet returns true if OptHtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus was set.
func (o OptHtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus) Reset() {
	var v HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus) SetTo(v HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus) Get() (v HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus) Or(d HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus) HtcProjectsProjectIdTasksTaskIdDeleteOKLifecycleStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInstanceLabels returns new OptInstanceLabels with value set to v.
func NewOptInstanceLabels(v InstanceLabels) OptInstanceLabels {
	return OptInstanceLabels{
		Value: v,
		Set:   true,
	}
}

// OptInstanceLabels is optional InstanceLabels.
type OptInstanceLabels struct {
	Value InstanceLabels
	Set   bool
}

// IsSet returns true if OptInstanceLabels was set.
func (o OptInstanceLabels) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInstanceLabels) Reset() {
	var v InstanceLabels
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInstanceLabels) SetTo(v InstanceLabels) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInstanceLabels) Get() (v InstanceLabels, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInstanceLabels) Or(d InstanceLabels) InstanceLabels {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInstant returns new OptInstant with value set to v.
func NewOptInstant(v Instant) OptInstant {
	return OptInstant{
		Value: v,
		Set:   true,
	}
}

// OptInstant is optional Instant.
type OptInstant struct {
	Value Instant
	Set   bool
}

// IsSet returns true if OptInstant was set.
func (o OptInstant) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInstant) Reset() {
	var v Instant
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInstant) SetTo(v Instant) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInstant) Get() (v Instant, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInstant) Or(d Instant) Instant {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt32 returns new OptInt32 with value set to v.
func NewOptInt32(v int32) OptInt32 {
	return OptInt32{
		Value: v,
		Set:   true,
	}
}

// OptInt32 is optional int32.
type OptInt32 struct {
	Value int32
	Set   bool
}

// IsSet returns true if OptInt32 was set.
func (o OptInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt32) SetTo(v int32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt32) Get() (v int32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptJobExecutionEnvironment returns new OptJobExecutionEnvironment with value set to v.
func NewOptJobExecutionEnvironment(v JobExecutionEnvironment) OptJobExecutionEnvironment {
	return OptJobExecutionEnvironment{
		Value: v,
		Set:   true,
	}
}

// OptJobExecutionEnvironment is optional JobExecutionEnvironment.
type OptJobExecutionEnvironment struct {
	Value JobExecutionEnvironment
	Set   bool
}

// IsSet returns true if OptJobExecutionEnvironment was set.
func (o OptJobExecutionEnvironment) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptJobExecutionEnvironment) Reset() {
	var v JobExecutionEnvironment
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptJobExecutionEnvironment) SetTo(v JobExecutionEnvironment) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptJobExecutionEnvironment) Get() (v JobExecutionEnvironment, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptJobExecutionEnvironment) Or(d JobExecutionEnvironment) JobExecutionEnvironment {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptJobPriority returns new OptJobPriority with value set to v.
func NewOptJobPriority(v JobPriority) OptJobPriority {
	return OptJobPriority{
		Value: v,
		Set:   true,
	}
}

// OptJobPriority is optional JobPriority.
type OptJobPriority struct {
	Value JobPriority
	Set   bool
}

// IsSet returns true if OptJobPriority was set.
func (o OptJobPriority) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptJobPriority) Reset() {
	var v JobPriority
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptJobPriority) SetTo(v JobPriority) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptJobPriority) Get() (v JobPriority, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptJobPriority) Or(d JobPriority) JobPriority {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptJsonWebKeyOtherParameters returns new OptJsonWebKeyOtherParameters with value set to v.
func NewOptJsonWebKeyOtherParameters(v JsonWebKeyOtherParameters) OptJsonWebKeyOtherParameters {
	return OptJsonWebKeyOtherParameters{
		Value: v,
		Set:   true,
	}
}

// OptJsonWebKeyOtherParameters is optional JsonWebKeyOtherParameters.
type OptJsonWebKeyOtherParameters struct {
	Value JsonWebKeyOtherParameters
	Set   bool
}

// IsSet returns true if OptJsonWebKeyOtherParameters was set.
func (o OptJsonWebKeyOtherParameters) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptJsonWebKeyOtherParameters) Reset() {
	var v JsonWebKeyOtherParameters
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptJsonWebKeyOtherParameters) SetTo(v JsonWebKeyOtherParameters) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptJsonWebKeyOtherParameters) Get() (v JsonWebKeyOtherParameters, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptJsonWebKeyOtherParameters) Or(d JsonWebKeyOtherParameters) JsonWebKeyOtherParameters {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptKey returns new OptKey with value set to v.
func NewOptKey(v Key) OptKey {
	return OptKey{
		Value: v,
		Set:   true,
	}
}

// OptKey is optional Key.
type OptKey struct {
	Value Key
	Set   bool
}

// IsSet returns true if OptKey was set.
func (o OptKey) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptKey) Reset() {
	var v Key
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptKey) SetTo(v Key) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptKey) Get() (v Key, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptKey) Or(d Key) Key {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilDateTime returns new OptNilDateTime with value set to v.
func NewOptNilDateTime(v time.Time) OptNilDateTime {
	return OptNilDateTime{
		Value: v,
		Set:   true,
	}
}

// OptNilDateTime is optional nullable time.Time.
type OptNilDateTime struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilDateTime was set.
func (o OptNilDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilDateTime) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilDateTime) SetToNull() {
	o.Set = true
	o.Null = true
	var v time.Time
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilDateTime) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptOrganization returns new OptOrganization with value set to v.
func NewOptOrganization(v Organization) OptOrganization {
	return OptOrganization{
		Value: v,
		Set:   true,
	}
}

// OptOrganization is optional Organization.
type OptOrganization struct {
	Value Organization
	Set   bool
}

// IsSet returns true if OptOrganization was set.
func (o OptOrganization) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrganization) Reset() {
	var v Organization
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrganization) SetTo(v Organization) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrganization) Get() (v Organization, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptOrganization) Or(d Organization) Organization {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPresignedPutUrlResponseURL returns new OptPresignedPutUrlResponseURL with value set to v.
func NewOptPresignedPutUrlResponseURL(v PresignedPutUrlResponseURL) OptPresignedPutUrlResponseURL {
	return OptPresignedPutUrlResponseURL{
		Value: v,
		Set:   true,
	}
}

// OptPresignedPutUrlResponseURL is optional PresignedPutUrlResponseURL.
type OptPresignedPutUrlResponseURL struct {
	Value PresignedPutUrlResponseURL
	Set   bool
}

// IsSet returns true if OptPresignedPutUrlResponseURL was set.
func (o OptPresignedPutUrlResponseURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPresignedPutUrlResponseURL) Reset() {
	var v PresignedPutUrlResponseURL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPresignedPutUrlResponseURL) SetTo(v PresignedPutUrlResponseURL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPresignedPutUrlResponseURL) Get() (v PresignedPutUrlResponseURL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPresignedPutUrlResponseURL) Or(d PresignedPutUrlResponseURL) PresignedPutUrlResponseURL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPublicKey returns new OptPublicKey with value set to v.
func NewOptPublicKey(v PublicKey) OptPublicKey {
	return OptPublicKey{
		Value: v,
		Set:   true,
	}
}

// OptPublicKey is optional PublicKey.
type OptPublicKey struct {
	Value PublicKey
	Set   bool
}

// IsSet returns true if OptPublicKey was set.
func (o OptPublicKey) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPublicKey) Reset() {
	var v PublicKey
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPublicKey) SetTo(v PublicKey) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPublicKey) Get() (v PublicKey, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPublicKey) Or(d PublicKey) PublicKey {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRegionalStoreCredentials returns new OptRegionalStoreCredentials with value set to v.
func NewOptRegionalStoreCredentials(v RegionalStoreCredentials) OptRegionalStoreCredentials {
	return OptRegionalStoreCredentials{
		Value: v,
		Set:   true,
	}
}

// OptRegionalStoreCredentials is optional RegionalStoreCredentials.
type OptRegionalStoreCredentials struct {
	Value RegionalStoreCredentials
	Set   bool
}

// IsSet returns true if OptRegionalStoreCredentials was set.
func (o OptRegionalStoreCredentials) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRegionalStoreCredentials) Reset() {
	var v RegionalStoreCredentials
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRegionalStoreCredentials) SetTo(v RegionalStoreCredentials) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRegionalStoreCredentials) Get() (v RegionalStoreCredentials, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRegionalStoreCredentials) Or(d RegionalStoreCredentials) RegionalStoreCredentials {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRescaleJobStatus returns new OptRescaleJobStatus with value set to v.
func NewOptRescaleJobStatus(v RescaleJobStatus) OptRescaleJobStatus {
	return OptRescaleJobStatus{
		Value: v,
		Set:   true,
	}
}

// OptRescaleJobStatus is optional RescaleJobStatus.
type OptRescaleJobStatus struct {
	Value RescaleJobStatus
	Set   bool
}

// IsSet returns true if OptRescaleJobStatus was set.
func (o OptRescaleJobStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRescaleJobStatus) Reset() {
	var v RescaleJobStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRescaleJobStatus) SetTo(v RescaleJobStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRescaleJobStatus) Get() (v RescaleJobStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRescaleJobStatus) Or(d RescaleJobStatus) RescaleJobStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRescaleRegion returns new OptRescaleRegion with value set to v.
func NewOptRescaleRegion(v RescaleRegion) OptRescaleRegion {
	return OptRescaleRegion{
		Value: v,
		Set:   true,
	}
}

// OptRescaleRegion is optional RescaleRegion.
type OptRescaleRegion struct {
	Value RescaleRegion
	Set   bool
}

// IsSet returns true if OptRescaleRegion was set.
func (o OptRescaleRegion) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRescaleRegion) Reset() {
	var v RescaleRegion
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRescaleRegion) SetTo(v RescaleRegion) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRescaleRegion) Get() (v RescaleRegion, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRescaleRegion) Or(d RescaleRegion) RescaleRegion {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRescaleUser returns new OptRescaleUser with value set to v.
func NewOptRescaleUser(v RescaleUser) OptRescaleUser {
	return OptRescaleUser{
		Value: v,
		Set:   true,
	}
}

// OptRescaleUser is optional RescaleUser.
type OptRescaleUser struct {
	Value RescaleUser
	Set   bool
}

// IsSet returns true if OptRescaleUser was set.
func (o OptRescaleUser) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRescaleUser) Reset() {
	var v RescaleUser
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRescaleUser) SetTo(v RescaleUser) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRescaleUser) Get() (v RescaleUser, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRescaleUser) Or(d RescaleUser) RescaleUser {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptStatus returns new OptStatus with value set to v.
func NewOptStatus(v Status) OptStatus {
	return OptStatus{
		Value: v,
		Set:   true,
	}
}

// OptStatus is optional Status.
type OptStatus struct {
	Value Status
	Set   bool
}

// IsSet returns true if OptStatus was set.
func (o OptStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptStatus) Reset() {
	var v Status
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptStatus) SetTo(v Status) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptStatus) Get() (v Status, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptStatus) Or(d Status) Status {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptStatus1 returns new OptStatus1 with value set to v.
func NewOptStatus1(v Status1) OptStatus1 {
	return OptStatus1{
		Value: v,
		Set:   true,
	}
}

// OptStatus1 is optional Status1.
type OptStatus1 struct {
	Value Status1
	Set   bool
}

// IsSet returns true if OptStatus1 was set.
func (o OptStatus1) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptStatus1) Reset() {
	var v Status1
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptStatus1) SetTo(v Status1) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptStatus1) Get() (v Status1, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptStatus1) Or(d Status1) Status1 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptStorageAccessTokenCredentials returns new OptStorageAccessTokenCredentials with value set to v.
func NewOptStorageAccessTokenCredentials(v StorageAccessTokenCredentials) OptStorageAccessTokenCredentials {
	return OptStorageAccessTokenCredentials{
		Value: v,
		Set:   true,
	}
}

// OptStorageAccessTokenCredentials is optional StorageAccessTokenCredentials.
type OptStorageAccessTokenCredentials struct {
	Value StorageAccessTokenCredentials
	Set   bool
}

// IsSet returns true if OptStorageAccessTokenCredentials was set.
func (o OptStorageAccessTokenCredentials) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptStorageAccessTokenCredentials) Reset() {
	var v StorageAccessTokenCredentials
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptStorageAccessTokenCredentials) SetTo(v StorageAccessTokenCredentials) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptStorageAccessTokenCredentials) Get() (v StorageAccessTokenCredentials, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptStorageAccessTokenCredentials) Or(d StorageAccessTokenCredentials) StorageAccessTokenCredentials {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTaskRetentionPolicy returns new OptTaskRetentionPolicy with value set to v.
func NewOptTaskRetentionPolicy(v TaskRetentionPolicy) OptTaskRetentionPolicy {
	return OptTaskRetentionPolicy{
		Value: v,
		Set:   true,
	}
}

// OptTaskRetentionPolicy is optional TaskRetentionPolicy.
type OptTaskRetentionPolicy struct {
	Value TaskRetentionPolicy
	Set   bool
}

// IsSet returns true if OptTaskRetentionPolicy was set.
func (o OptTaskRetentionPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTaskRetentionPolicy) Reset() {
	var v TaskRetentionPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTaskRetentionPolicy) SetTo(v TaskRetentionPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTaskRetentionPolicy) Get() (v TaskRetentionPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTaskRetentionPolicy) Or(d TaskRetentionPolicy) TaskRetentionPolicy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptURI returns new OptURI with value set to v.
func NewOptURI(v url.URL) OptURI {
	return OptURI{
		Value: v,
		Set:   true,
	}
}

// OptURI is optional url.URL.
type OptURI struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURI was set.
func (o OptURI) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURI) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURI) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURI) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptViewType returns new OptViewType with value set to v.
func NewOptViewType(v ViewType) OptViewType {
	return OptViewType{
		Value: v,
		Set:   true,
	}
}

// OptViewType is optional ViewType.
type OptViewType struct {
	Value ViewType
	Set   bool
}

// IsSet returns true if OptViewType was set.
func (o OptViewType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptViewType) Reset() {
	var v ViewType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptViewType) SetTo(v ViewType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptViewType) Get() (v ViewType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptViewType) Or(d ViewType) ViewType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptWorkspace returns new OptWorkspace with value set to v.
func NewOptWorkspace(v Workspace) OptWorkspace {
	return OptWorkspace{
		Value: v,
		Set:   true,
	}
}

// OptWorkspace is optional Workspace.
type OptWorkspace struct {
	Value Workspace
	Set   bool
}

// IsSet returns true if OptWorkspace was set.
func (o OptWorkspace) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWorkspace) Reset() {
	var v Workspace
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWorkspace) SetTo(v Workspace) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWorkspace) Get() (v Workspace, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptWorkspace) Or(d Workspace) Workspace {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptWorkspaceTaskRetentionPolicy returns new OptWorkspaceTaskRetentionPolicy with value set to v.
func NewOptWorkspaceTaskRetentionPolicy(v WorkspaceTaskRetentionPolicy) OptWorkspaceTaskRetentionPolicy {
	return OptWorkspaceTaskRetentionPolicy{
		Value: v,
		Set:   true,
	}
}

// OptWorkspaceTaskRetentionPolicy is optional WorkspaceTaskRetentionPolicy.
type OptWorkspaceTaskRetentionPolicy struct {
	Value WorkspaceTaskRetentionPolicy
	Set   bool
}

// IsSet returns true if OptWorkspaceTaskRetentionPolicy was set.
func (o OptWorkspaceTaskRetentionPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWorkspaceTaskRetentionPolicy) Reset() {
	var v WorkspaceTaskRetentionPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWorkspaceTaskRetentionPolicy) SetTo(v WorkspaceTaskRetentionPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWorkspaceTaskRetentionPolicy) Get() (v WorkspaceTaskRetentionPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptWorkspaceTaskRetentionPolicy) Or(d WorkspaceTaskRetentionPolicy) WorkspaceTaskRetentionPolicy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Organization
type Organization struct {
	CanViewOrganizationJobs OptBool   `json:"canViewOrganizationJobs"`
	Code                    OptString `json:"code"`
}

// GetCanViewOrganizationJobs returns the value of CanViewOrganizationJobs.
func (s *Organization) GetCanViewOrganizationJobs() OptBool {
	return s.CanViewOrganizationJobs
}

// GetCode returns the value of Code.
func (s *Organization) GetCode() OptString {
	return s.Code
}

// SetCanViewOrganizationJobs sets the value of CanViewOrganizationJobs.
func (s *Organization) SetCanViewOrganizationJobs(val OptBool) {
	s.CanViewOrganizationJobs = val
}

// SetCode sets the value of Code.
func (s *Organization) SetCode(val OptString) {
	s.Code = val
}

// Ref: #/components/schemas/PresignedPutUrlResponse
type PresignedPutUrlResponse struct {
	Expiration  OptInstant                    `json:"expiration"`
	Region      OptRescaleRegion              `json:"region"`
	StorageName OptString                     `json:"storageName"`
	URL         OptPresignedPutUrlResponseURL `json:"url"`
}

// GetExpiration returns the value of Expiration.
func (s *PresignedPutUrlResponse) GetExpiration() OptInstant {
	return s.Expiration
}

// GetRegion returns the value of Region.
func (s *PresignedPutUrlResponse) GetRegion() OptRescaleRegion {
	return s.Region
}

// GetStorageName returns the value of StorageName.
func (s *PresignedPutUrlResponse) GetStorageName() OptString {
	return s.StorageName
}

// GetURL returns the value of URL.
func (s *PresignedPutUrlResponse) GetURL() OptPresignedPutUrlResponseURL {
	return s.URL
}

// SetExpiration sets the value of Expiration.
func (s *PresignedPutUrlResponse) SetExpiration(val OptInstant) {
	s.Expiration = val
}

// SetRegion sets the value of Region.
func (s *PresignedPutUrlResponse) SetRegion(val OptRescaleRegion) {
	s.Region = val
}

// SetStorageName sets the value of StorageName.
func (s *PresignedPutUrlResponse) SetStorageName(val OptString) {
	s.StorageName = val
}

// SetURL sets the value of URL.
func (s *PresignedPutUrlResponse) SetURL(val OptPresignedPutUrlResponseURL) {
	s.URL = val
}

func (*PresignedPutUrlResponse) htcProjectsProjectIdStoragePresignedURLGetRes()            {}
func (*PresignedPutUrlResponse) htcProjectsProjectIdTasksTaskIdStoragePresignedURLGetRes() {}

type PresignedPutUrlResponseURL struct {
	Authority          OptString `json:"authority"`
	Content            jx.Raw    `json:"content"`
	DefaultPort        OptInt32  `json:"defaultPort"`
	File               OptString `json:"file"`
	HashCode           OptInt32  `json:"hashCode"`
	Host               OptString `json:"host"`
	Port               OptInt32  `json:"port"`
	Protocol           OptString `json:"protocol"`
	Ref                OptString `json:"ref"`
	SerializedHashCode OptInt32  `json:"serializedHashCode"`
}

// GetAuthority returns the value of Authority.
func (s *PresignedPutUrlResponseURL) GetAuthority() OptString {
	return s.Authority
}

// GetContent returns the value of Content.
func (s *PresignedPutUrlResponseURL) GetContent() jx.Raw {
	return s.Content
}

// GetDefaultPort returns the value of DefaultPort.
func (s *PresignedPutUrlResponseURL) GetDefaultPort() OptInt32 {
	return s.DefaultPort
}

// GetFile returns the value of File.
func (s *PresignedPutUrlResponseURL) GetFile() OptString {
	return s.File
}

// GetHashCode returns the value of HashCode.
func (s *PresignedPutUrlResponseURL) GetHashCode() OptInt32 {
	return s.HashCode
}

// GetHost returns the value of Host.
func (s *PresignedPutUrlResponseURL) GetHost() OptString {
	return s.Host
}

// GetPort returns the value of Port.
func (s *PresignedPutUrlResponseURL) GetPort() OptInt32 {
	return s.Port
}

// GetProtocol returns the value of Protocol.
func (s *PresignedPutUrlResponseURL) GetProtocol() OptString {
	return s.Protocol
}

// GetRef returns the value of Ref.
func (s *PresignedPutUrlResponseURL) GetRef() OptString {
	return s.Ref
}

// GetSerializedHashCode returns the value of SerializedHashCode.
func (s *PresignedPutUrlResponseURL) GetSerializedHashCode() OptInt32 {
	return s.SerializedHashCode
}

// SetAuthority sets the value of Authority.
func (s *PresignedPutUrlResponseURL) SetAuthority(val OptString) {
	s.Authority = val
}

// SetContent sets the value of Content.
func (s *PresignedPutUrlResponseURL) SetContent(val jx.Raw) {
	s.Content = val
}

// SetDefaultPort sets the value of DefaultPort.
func (s *PresignedPutUrlResponseURL) SetDefaultPort(val OptInt32) {
	s.DefaultPort = val
}

// SetFile sets the value of File.
func (s *PresignedPutUrlResponseURL) SetFile(val OptString) {
	s.File = val
}

// SetHashCode sets the value of HashCode.
func (s *PresignedPutUrlResponseURL) SetHashCode(val OptInt32) {
	s.HashCode = val
}

// SetHost sets the value of Host.
func (s *PresignedPutUrlResponseURL) SetHost(val OptString) {
	s.Host = val
}

// SetPort sets the value of Port.
func (s *PresignedPutUrlResponseURL) SetPort(val OptInt32) {
	s.Port = val
}

// SetProtocol sets the value of Protocol.
func (s *PresignedPutUrlResponseURL) SetProtocol(val OptString) {
	s.Protocol = val
}

// SetRef sets the value of Ref.
func (s *PresignedPutUrlResponseURL) SetRef(val OptString) {
	s.Ref = val
}

// SetSerializedHashCode sets the value of SerializedHashCode.
func (s *PresignedPutUrlResponseURL) SetSerializedHashCode(val OptInt32) {
	s.SerializedHashCode = val
}

// Ref: #/components/schemas/PublicKey
type PublicKey struct {
	Algorithm OptString `json:"algorithm"`
	Encoded   OptString `json:"encoded"`
	Format    OptString `json:"format"`
}

// GetAlgorithm returns the value of Algorithm.
func (s *PublicKey) GetAlgorithm() OptString {
	return s.Algorithm
}

// GetEncoded returns the value of Encoded.
func (s *PublicKey) GetEncoded() OptString {
	return s.Encoded
}

// GetFormat returns the value of Format.
func (s *PublicKey) GetFormat() OptString {
	return s.Format
}

// SetAlgorithm sets the value of Algorithm.
func (s *PublicKey) SetAlgorithm(val OptString) {
	s.Algorithm = val
}

// SetEncoded sets the value of Encoded.
func (s *PublicKey) SetEncoded(val OptString) {
	s.Encoded = val
}

// SetFormat sets the value of Format.
func (s *PublicKey) SetFormat(val OptString) {
	s.Format = val
}

// Ref: #/components/schemas/RegionStorageOption
type RegionStorageOption struct {
	Provider    OptCloudProvider `json:"provider"`
	Region      OptRescaleRegion `json:"region"`
	StorageName OptString        `json:"storageName"`
}

// GetProvider returns the value of Provider.
func (s *RegionStorageOption) GetProvider() OptCloudProvider {
	return s.Provider
}

// GetRegion returns the value of Region.
func (s *RegionStorageOption) GetRegion() OptRescaleRegion {
	return s.Region
}

// GetStorageName returns the value of StorageName.
func (s *RegionStorageOption) GetStorageName() OptString {
	return s.StorageName
}

// SetProvider sets the value of Provider.
func (s *RegionStorageOption) SetProvider(val OptCloudProvider) {
	s.Provider = val
}

// SetRegion sets the value of Region.
func (s *RegionStorageOption) SetRegion(val OptRescaleRegion) {
	s.Region = val
}

// SetStorageName sets the value of StorageName.
func (s *RegionStorageOption) SetStorageName(val OptString) {
	s.StorageName = val
}

func (*RegionStorageOption) htcStorageRegionRegionGetRes() {}

// Ref: #/components/schemas/RegionalStorageResponse
type RegionalStorageResponse struct {
	RegionalStores []RegionalStore  `json:"regionalStores"`
	RescaleRegion  OptRescaleRegion `json:"rescaleRegion"`
}

// GetRegionalStores returns the value of RegionalStores.
func (s *RegionalStorageResponse) GetRegionalStores() []RegionalStore {
	return s.RegionalStores
}

// GetRescaleRegion returns the value of RescaleRegion.
func (s *RegionalStorageResponse) GetRescaleRegion() OptRescaleRegion {
	return s.RescaleRegion
}

// SetRegionalStores sets the value of RegionalStores.
func (s *RegionalStorageResponse) SetRegionalStores(val []RegionalStore) {
	s.RegionalStores = val
}

// SetRescaleRegion sets the value of RescaleRegion.
func (s *RegionalStorageResponse) SetRescaleRegion(val OptRescaleRegion) {
	s.RescaleRegion = val
}

func (*RegionalStorageResponse) htcProjectsProjectIdTasksTaskIdStorageRegionalStorageGetRes() {}

// Ref: #/components/schemas/RegionalStore
type RegionalStore struct {
	Credentials OptRegionalStoreCredentials `json:"credentials"`
	ProjectPath OptString                   `json:"projectPath"`
	Provider    OptCloudProvider            `json:"provider"`
	Region      OptRescaleRegion            `json:"region"`
	TaskPath    OptString                   `json:"taskPath"`
}

// GetCredentials returns the value of Credentials.
func (s *RegionalStore) GetCredentials() OptRegionalStoreCredentials {
	return s.Credentials
}

// GetProjectPath returns the value of ProjectPath.
func (s *RegionalStore) GetProjectPath() OptString {
	return s.ProjectPath
}

// GetProvider returns the value of Provider.
func (s *RegionalStore) GetProvider() OptCloudProvider {
	return s.Provider
}

// GetRegion returns the value of Region.
func (s *RegionalStore) GetRegion() OptRescaleRegion {
	return s.Region
}

// GetTaskPath returns the value of TaskPath.
func (s *RegionalStore) GetTaskPath() OptString {
	return s.TaskPath
}

// SetCredentials sets the value of Credentials.
func (s *RegionalStore) SetCredentials(val OptRegionalStoreCredentials) {
	s.Credentials = val
}

// SetProjectPath sets the value of ProjectPath.
func (s *RegionalStore) SetProjectPath(val OptString) {
	s.ProjectPath = val
}

// SetProvider sets the value of Provider.
func (s *RegionalStore) SetProvider(val OptCloudProvider) {
	s.Provider = val
}

// SetRegion sets the value of Region.
func (s *RegionalStore) SetRegion(val OptRescaleRegion) {
	s.Region = val
}

// SetTaskPath sets the value of TaskPath.
func (s *RegionalStore) SetTaskPath(val OptString) {
	s.TaskPath = val
}

type RegionalStoreCredentials map[string]string

func (s *RegionalStoreCredentials) init() RegionalStoreCredentials {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/RescaleFlag
type RescaleFlag struct {
	Name  OptString `json:"name"`
	Value OptBool   `json:"value"`
}

// GetName returns the value of Name.
func (s *RescaleFlag) GetName() OptString {
	return s.Name
}

// GetValue returns the value of Value.
func (s *RescaleFlag) GetValue() OptBool {
	return s.Value
}

// SetName sets the value of Name.
func (s *RescaleFlag) SetName(val OptString) {
	s.Name = val
}

// SetValue sets the value of Value.
func (s *RescaleFlag) SetValue(val OptBool) {
	s.Value = val
}

// Ref: #/components/schemas/RescaleJobStatus
type RescaleJobStatus string

const (
	RescaleJobStatusSUBMITTEDTORESCALE  RescaleJobStatus = "SUBMITTED_TO_RESCALE"
	RescaleJobStatusSUBMITTEDTOPROVIDER RescaleJobStatus = "SUBMITTED_TO_PROVIDER"
	RescaleJobStatusRUNNABLE            RescaleJobStatus = "RUNNABLE"
	RescaleJobStatusSTARTING            RescaleJobStatus = "STARTING"
	RescaleJobStatusRUNNING             RescaleJobStatus = "RUNNING"
	RescaleJobStatusSUCCEEDED           RescaleJobStatus = "SUCCEEDED"
	RescaleJobStatusFAILED              RescaleJobStatus = "FAILED"
	RescaleJobStatusPODSUCCEEDED        RescaleJobStatus = "POD_SUCCEEDED"
	RescaleJobStatusPODFAILED           RescaleJobStatus = "POD_FAILED"
)

// AllValues returns all RescaleJobStatus values.
func (RescaleJobStatus) AllValues() []RescaleJobStatus {
	return []RescaleJobStatus{
		RescaleJobStatusSUBMITTEDTORESCALE,
		RescaleJobStatusSUBMITTEDTOPROVIDER,
		RescaleJobStatusRUNNABLE,
		RescaleJobStatusSTARTING,
		RescaleJobStatusRUNNING,
		RescaleJobStatusSUCCEEDED,
		RescaleJobStatusFAILED,
		RescaleJobStatusPODSUCCEEDED,
		RescaleJobStatusPODFAILED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s RescaleJobStatus) MarshalText() ([]byte, error) {
	switch s {
	case RescaleJobStatusSUBMITTEDTORESCALE:
		return []byte(s), nil
	case RescaleJobStatusSUBMITTEDTOPROVIDER:
		return []byte(s), nil
	case RescaleJobStatusRUNNABLE:
		return []byte(s), nil
	case RescaleJobStatusSTARTING:
		return []byte(s), nil
	case RescaleJobStatusRUNNING:
		return []byte(s), nil
	case RescaleJobStatusSUCCEEDED:
		return []byte(s), nil
	case RescaleJobStatusFAILED:
		return []byte(s), nil
	case RescaleJobStatusPODSUCCEEDED:
		return []byte(s), nil
	case RescaleJobStatusPODFAILED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *RescaleJobStatus) UnmarshalText(data []byte) error {
	switch RescaleJobStatus(data) {
	case RescaleJobStatusSUBMITTEDTORESCALE:
		*s = RescaleJobStatusSUBMITTEDTORESCALE
		return nil
	case RescaleJobStatusSUBMITTEDTOPROVIDER:
		*s = RescaleJobStatusSUBMITTEDTOPROVIDER
		return nil
	case RescaleJobStatusRUNNABLE:
		*s = RescaleJobStatusRUNNABLE
		return nil
	case RescaleJobStatusSTARTING:
		*s = RescaleJobStatusSTARTING
		return nil
	case RescaleJobStatusRUNNING:
		*s = RescaleJobStatusRUNNING
		return nil
	case RescaleJobStatusSUCCEEDED:
		*s = RescaleJobStatusSUCCEEDED
		return nil
	case RescaleJobStatusFAILED:
		*s = RescaleJobStatusFAILED
		return nil
	case RescaleJobStatusPODSUCCEEDED:
		*s = RescaleJobStatusPODSUCCEEDED
		return nil
	case RescaleJobStatusPODFAILED:
		*s = RescaleJobStatusPODFAILED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/RescaleRegion
type RescaleRegion string

const (
	RescaleRegionAWSAPSOUTHEAST1     RescaleRegion = "AWS_AP_SOUTHEAST_1"
	RescaleRegionAWSCACENTRAL1       RescaleRegion = "AWS_CA_CENTRAL_1"
	RescaleRegionAWSEUNORTH1         RescaleRegion = "AWS_EU_NORTH_1"
	RescaleRegionAWSEUCENTRAL1       RescaleRegion = "AWS_EU_CENTRAL_1"
	RescaleRegionAWSEUWEST1          RescaleRegion = "AWS_EU_WEST_1"
	RescaleRegionAWSEUWEST2          RescaleRegion = "AWS_EU_WEST_2"
	RescaleRegionAWSEUWEST3          RescaleRegion = "AWS_EU_WEST_3"
	RescaleRegionAWSSAEAST1          RescaleRegion = "AWS_SA_EAST_1"
	RescaleRegionAWSUSEAST2          RescaleRegion = "AWS_US_EAST_2"
	RescaleRegionAWSUSWEST2          RescaleRegion = "AWS_US_WEST_2"
	RescaleRegionAWSUSEAST1          RescaleRegion = "AWS_US_EAST_1"
	RescaleRegionGCPASIASOUTHEAST1   RescaleRegion = "GCP_ASIA_SOUTHEAST_1"
	RescaleRegionGCPUSCENTRAL1       RescaleRegion = "GCP_US_CENTRAL_1"
	RescaleRegionGCPUSEAST1          RescaleRegion = "GCP_US_EAST_1"
	RescaleRegionGCPUSEAST2          RescaleRegion = "GCP_US_EAST_2"
	RescaleRegionGCPUSEAST4          RescaleRegion = "GCP_US_EAST_4"
	RescaleRegionGCPUSWEST1          RescaleRegion = "GCP_US_WEST_1"
	RescaleRegionGCPUSWEST4          RescaleRegion = "GCP_US_WEST_4"
	RescaleRegionGCPEUWEST1          RescaleRegion = "GCP_EU_WEST_1"
	RescaleRegionGCPEUWEST2          RescaleRegion = "GCP_EU_WEST_2"
	RescaleRegionGCPEUWEST3          RescaleRegion = "GCP_EU_WEST_3"
	RescaleRegionGCPEUWEST4          RescaleRegion = "GCP_EU_WEST_4"
	RescaleRegionGCPCACENTRAL1       RescaleRegion = "GCP_CA_CENTRAL_1"
	RescaleRegionNGCENOCH1           RescaleRegion = "NGC_ENOCH_1"
	RescaleRegionAZUREUSWEST2        RescaleRegion = "AZURE_US_WEST_2"
	RescaleRegionAZUREUSEAST2        RescaleRegion = "AZURE_US_EAST_2"
	RescaleRegionAZUREUSSOUTHCENTRAL RescaleRegion = "AZURE_US_SOUTHCENTRAL"
	RescaleRegionAZUREEUNORTH        RescaleRegion = "AZURE_EU_NORTH"
	RescaleRegionRCICELAND1          RescaleRegion = "RC_ICELAND_1"
	RescaleRegionUNASSIGNED          RescaleRegion = "UNASSIGNED"
)

// AllValues returns all RescaleRegion values.
func (RescaleRegion) AllValues() []RescaleRegion {
	return []RescaleRegion{
		RescaleRegionAWSAPSOUTHEAST1,
		RescaleRegionAWSCACENTRAL1,
		RescaleRegionAWSEUNORTH1,
		RescaleRegionAWSEUCENTRAL1,
		RescaleRegionAWSEUWEST1,
		RescaleRegionAWSEUWEST2,
		RescaleRegionAWSEUWEST3,
		RescaleRegionAWSSAEAST1,
		RescaleRegionAWSUSEAST2,
		RescaleRegionAWSUSWEST2,
		RescaleRegionAWSUSEAST1,
		RescaleRegionGCPASIASOUTHEAST1,
		RescaleRegionGCPUSCENTRAL1,
		RescaleRegionGCPUSEAST1,
		RescaleRegionGCPUSEAST2,
		RescaleRegionGCPUSEAST4,
		RescaleRegionGCPUSWEST1,
		RescaleRegionGCPUSWEST4,
		RescaleRegionGCPEUWEST1,
		RescaleRegionGCPEUWEST2,
		RescaleRegionGCPEUWEST3,
		RescaleRegionGCPEUWEST4,
		RescaleRegionGCPCACENTRAL1,
		RescaleRegionNGCENOCH1,
		RescaleRegionAZUREUSWEST2,
		RescaleRegionAZUREUSEAST2,
		RescaleRegionAZUREUSSOUTHCENTRAL,
		RescaleRegionAZUREEUNORTH,
		RescaleRegionRCICELAND1,
		RescaleRegionUNASSIGNED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s RescaleRegion) MarshalText() ([]byte, error) {
	switch s {
	case RescaleRegionAWSAPSOUTHEAST1:
		return []byte(s), nil
	case RescaleRegionAWSCACENTRAL1:
		return []byte(s), nil
	case RescaleRegionAWSEUNORTH1:
		return []byte(s), nil
	case RescaleRegionAWSEUCENTRAL1:
		return []byte(s), nil
	case RescaleRegionAWSEUWEST1:
		return []byte(s), nil
	case RescaleRegionAWSEUWEST2:
		return []byte(s), nil
	case RescaleRegionAWSEUWEST3:
		return []byte(s), nil
	case RescaleRegionAWSSAEAST1:
		return []byte(s), nil
	case RescaleRegionAWSUSEAST2:
		return []byte(s), nil
	case RescaleRegionAWSUSWEST2:
		return []byte(s), nil
	case RescaleRegionAWSUSEAST1:
		return []byte(s), nil
	case RescaleRegionGCPASIASOUTHEAST1:
		return []byte(s), nil
	case RescaleRegionGCPUSCENTRAL1:
		return []byte(s), nil
	case RescaleRegionGCPUSEAST1:
		return []byte(s), nil
	case RescaleRegionGCPUSEAST2:
		return []byte(s), nil
	case RescaleRegionGCPUSEAST4:
		return []byte(s), nil
	case RescaleRegionGCPUSWEST1:
		return []byte(s), nil
	case RescaleRegionGCPUSWEST4:
		return []byte(s), nil
	case RescaleRegionGCPEUWEST1:
		return []byte(s), nil
	case RescaleRegionGCPEUWEST2:
		return []byte(s), nil
	case RescaleRegionGCPEUWEST3:
		return []byte(s), nil
	case RescaleRegionGCPEUWEST4:
		return []byte(s), nil
	case RescaleRegionGCPCACENTRAL1:
		return []byte(s), nil
	case RescaleRegionNGCENOCH1:
		return []byte(s), nil
	case RescaleRegionAZUREUSWEST2:
		return []byte(s), nil
	case RescaleRegionAZUREUSEAST2:
		return []byte(s), nil
	case RescaleRegionAZUREUSSOUTHCENTRAL:
		return []byte(s), nil
	case RescaleRegionAZUREEUNORTH:
		return []byte(s), nil
	case RescaleRegionRCICELAND1:
		return []byte(s), nil
	case RescaleRegionUNASSIGNED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *RescaleRegion) UnmarshalText(data []byte) error {
	switch RescaleRegion(data) {
	case RescaleRegionAWSAPSOUTHEAST1:
		*s = RescaleRegionAWSAPSOUTHEAST1
		return nil
	case RescaleRegionAWSCACENTRAL1:
		*s = RescaleRegionAWSCACENTRAL1
		return nil
	case RescaleRegionAWSEUNORTH1:
		*s = RescaleRegionAWSEUNORTH1
		return nil
	case RescaleRegionAWSEUCENTRAL1:
		*s = RescaleRegionAWSEUCENTRAL1
		return nil
	case RescaleRegionAWSEUWEST1:
		*s = RescaleRegionAWSEUWEST1
		return nil
	case RescaleRegionAWSEUWEST2:
		*s = RescaleRegionAWSEUWEST2
		return nil
	case RescaleRegionAWSEUWEST3:
		*s = RescaleRegionAWSEUWEST3
		return nil
	case RescaleRegionAWSSAEAST1:
		*s = RescaleRegionAWSSAEAST1
		return nil
	case RescaleRegionAWSUSEAST2:
		*s = RescaleRegionAWSUSEAST2
		return nil
	case RescaleRegionAWSUSWEST2:
		*s = RescaleRegionAWSUSWEST2
		return nil
	case RescaleRegionAWSUSEAST1:
		*s = RescaleRegionAWSUSEAST1
		return nil
	case RescaleRegionGCPASIASOUTHEAST1:
		*s = RescaleRegionGCPASIASOUTHEAST1
		return nil
	case RescaleRegionGCPUSCENTRAL1:
		*s = RescaleRegionGCPUSCENTRAL1
		return nil
	case RescaleRegionGCPUSEAST1:
		*s = RescaleRegionGCPUSEAST1
		return nil
	case RescaleRegionGCPUSEAST2:
		*s = RescaleRegionGCPUSEAST2
		return nil
	case RescaleRegionGCPUSEAST4:
		*s = RescaleRegionGCPUSEAST4
		return nil
	case RescaleRegionGCPUSWEST1:
		*s = RescaleRegionGCPUSWEST1
		return nil
	case RescaleRegionGCPUSWEST4:
		*s = RescaleRegionGCPUSWEST4
		return nil
	case RescaleRegionGCPEUWEST1:
		*s = RescaleRegionGCPEUWEST1
		return nil
	case RescaleRegionGCPEUWEST2:
		*s = RescaleRegionGCPEUWEST2
		return nil
	case RescaleRegionGCPEUWEST3:
		*s = RescaleRegionGCPEUWEST3
		return nil
	case RescaleRegionGCPEUWEST4:
		*s = RescaleRegionGCPEUWEST4
		return nil
	case RescaleRegionGCPCACENTRAL1:
		*s = RescaleRegionGCPCACENTRAL1
		return nil
	case RescaleRegionNGCENOCH1:
		*s = RescaleRegionNGCENOCH1
		return nil
	case RescaleRegionAZUREUSWEST2:
		*s = RescaleRegionAZUREUSWEST2
		return nil
	case RescaleRegionAZUREUSEAST2:
		*s = RescaleRegionAZUREUSEAST2
		return nil
	case RescaleRegionAZUREUSSOUTHCENTRAL:
		*s = RescaleRegionAZUREUSSOUTHCENTRAL
		return nil
	case RescaleRegionAZUREEUNORTH:
		*s = RescaleRegionAZUREEUNORTH
		return nil
	case RescaleRegionRCICELAND1:
		*s = RescaleRegionRCICELAND1
		return nil
	case RescaleRegionUNASSIGNED:
		*s = RescaleRegionUNASSIGNED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/RescaleUser
type RescaleUser struct {
	Email               OptString       `json:"email"`
	FullName            OptString       `json:"fullName"`
	IsOrganizationAdmin OptBool         `json:"isOrganizationAdmin"`
	IsRescaleAdmin      OptBool         `json:"isRescaleAdmin"`
	IsSuperuser         OptBool         `json:"isSuperuser"`
	IsWorkspaceAdmin    OptBool         `json:"isWorkspaceAdmin"`
	Organization        OptOrganization `json:"organization"`
	OrganizationAdmin   OptBool         `json:"organizationAdmin"`
	RescaleAdmin        OptBool         `json:"rescaleAdmin"`
	Superuser           OptBool         `json:"superuser"`
	UserId              OptString       `json:"userId"`
	Workspace           OptWorkspace    `json:"workspace"`
	WorkspaceAdmin      OptBool         `json:"workspaceAdmin"`
}

// GetEmail returns the value of Email.
func (s *RescaleUser) GetEmail() OptString {
	return s.Email
}

// GetFullName returns the value of FullName.
func (s *RescaleUser) GetFullName() OptString {
	return s.FullName
}

// GetIsOrganizationAdmin returns the value of IsOrganizationAdmin.
func (s *RescaleUser) GetIsOrganizationAdmin() OptBool {
	return s.IsOrganizationAdmin
}

// GetIsRescaleAdmin returns the value of IsRescaleAdmin.
func (s *RescaleUser) GetIsRescaleAdmin() OptBool {
	return s.IsRescaleAdmin
}

// GetIsSuperuser returns the value of IsSuperuser.
func (s *RescaleUser) GetIsSuperuser() OptBool {
	return s.IsSuperuser
}

// GetIsWorkspaceAdmin returns the value of IsWorkspaceAdmin.
func (s *RescaleUser) GetIsWorkspaceAdmin() OptBool {
	return s.IsWorkspaceAdmin
}

// GetOrganization returns the value of Organization.
func (s *RescaleUser) GetOrganization() OptOrganization {
	return s.Organization
}

// GetOrganizationAdmin returns the value of OrganizationAdmin.
func (s *RescaleUser) GetOrganizationAdmin() OptBool {
	return s.OrganizationAdmin
}

// GetRescaleAdmin returns the value of RescaleAdmin.
func (s *RescaleUser) GetRescaleAdmin() OptBool {
	return s.RescaleAdmin
}

// GetSuperuser returns the value of Superuser.
func (s *RescaleUser) GetSuperuser() OptBool {
	return s.Superuser
}

// GetUserId returns the value of UserId.
func (s *RescaleUser) GetUserId() OptString {
	return s.UserId
}

// GetWorkspace returns the value of Workspace.
func (s *RescaleUser) GetWorkspace() OptWorkspace {
	return s.Workspace
}

// GetWorkspaceAdmin returns the value of WorkspaceAdmin.
func (s *RescaleUser) GetWorkspaceAdmin() OptBool {
	return s.WorkspaceAdmin
}

// SetEmail sets the value of Email.
func (s *RescaleUser) SetEmail(val OptString) {
	s.Email = val
}

// SetFullName sets the value of FullName.
func (s *RescaleUser) SetFullName(val OptString) {
	s.FullName = val
}

// SetIsOrganizationAdmin sets the value of IsOrganizationAdmin.
func (s *RescaleUser) SetIsOrganizationAdmin(val OptBool) {
	s.IsOrganizationAdmin = val
}

// SetIsRescaleAdmin sets the value of IsRescaleAdmin.
func (s *RescaleUser) SetIsRescaleAdmin(val OptBool) {
	s.IsRescaleAdmin = val
}

// SetIsSuperuser sets the value of IsSuperuser.
func (s *RescaleUser) SetIsSuperuser(val OptBool) {
	s.IsSuperuser = val
}

// SetIsWorkspaceAdmin sets the value of IsWorkspaceAdmin.
func (s *RescaleUser) SetIsWorkspaceAdmin(val OptBool) {
	s.IsWorkspaceAdmin = val
}

// SetOrganization sets the value of Organization.
func (s *RescaleUser) SetOrganization(val OptOrganization) {
	s.Organization = val
}

// SetOrganizationAdmin sets the value of OrganizationAdmin.
func (s *RescaleUser) SetOrganizationAdmin(val OptBool) {
	s.OrganizationAdmin = val
}

// SetRescaleAdmin sets the value of RescaleAdmin.
func (s *RescaleUser) SetRescaleAdmin(val OptBool) {
	s.RescaleAdmin = val
}

// SetSuperuser sets the value of Superuser.
func (s *RescaleUser) SetSuperuser(val OptBool) {
	s.Superuser = val
}

// SetUserId sets the value of UserId.
func (s *RescaleUser) SetUserId(val OptString) {
	s.UserId = val
}

// SetWorkspace sets the value of Workspace.
func (s *RescaleUser) SetWorkspace(val OptWorkspace) {
	s.Workspace = val
}

// SetWorkspaceAdmin sets the value of WorkspaceAdmin.
func (s *RescaleUser) SetWorkspaceAdmin(val OptBool) {
	s.WorkspaceAdmin = val
}

type SecurityScheme struct {
	Token string
}

// GetToken returns the value of Token.
func (s *SecurityScheme) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *SecurityScheme) SetToken(val string) {
	s.Token = val
}

// Ref: #/components/schemas/Status
type Status string

const (
	StatusREADY   Status = "READY"
	StatusPENDING Status = "PENDING"
)

// AllValues returns all Status values.
func (Status) AllValues() []Status {
	return []Status{
		StatusREADY,
		StatusPENDING,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Status) MarshalText() ([]byte, error) {
	switch s {
	case StatusREADY:
		return []byte(s), nil
	case StatusPENDING:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Status) UnmarshalText(data []byte) error {
	switch Status(data) {
	case StatusREADY:
		*s = StatusREADY
		return nil
	case StatusPENDING:
		*s = StatusPENDING
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Status1
type Status1 string

const (
	Status1PASS Status1 = "PASS"
	Status1FAIL Status1 = "FAIL"
)

// AllValues returns all Status1 values.
func (Status1) AllValues() []Status1 {
	return []Status1{
		Status1PASS,
		Status1FAIL,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Status1) MarshalText() ([]byte, error) {
	switch s {
	case Status1PASS:
		return []byte(s), nil
	case Status1FAIL:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Status1) UnmarshalText(data []byte) error {
	switch Status1(data) {
	case Status1PASS:
		*s = Status1PASS
		return nil
	case Status1FAIL:
		*s = Status1FAIL
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/StorageAccessToken
type StorageAccessToken struct {
	Credentials              OptStorageAccessTokenCredentials `json:"credentials"`
	Expiration               OptInstant                       `json:"expiration"`
	ProjectId                OptString                        `json:"projectId"`
	ProjectSharedStoragePath OptString                        `json:"projectSharedStoragePath"`
	Provider                 OptCloudProvider                 `json:"provider"`
	Region                   OptRescaleRegion                 `json:"region"`
	StorageName              OptString                        `json:"storageName"`
	User                     OptString                        `json:"user"`
}

// GetCredentials returns the value of Credentials.
func (s *StorageAccessToken) GetCredentials() OptStorageAccessTokenCredentials {
	return s.Credentials
}

// GetExpiration returns the value of Expiration.
func (s *StorageAccessToken) GetExpiration() OptInstant {
	return s.Expiration
}

// GetProjectId returns the value of ProjectId.
func (s *StorageAccessToken) GetProjectId() OptString {
	return s.ProjectId
}

// GetProjectSharedStoragePath returns the value of ProjectSharedStoragePath.
func (s *StorageAccessToken) GetProjectSharedStoragePath() OptString {
	return s.ProjectSharedStoragePath
}

// GetProvider returns the value of Provider.
func (s *StorageAccessToken) GetProvider() OptCloudProvider {
	return s.Provider
}

// GetRegion returns the value of Region.
func (s *StorageAccessToken) GetRegion() OptRescaleRegion {
	return s.Region
}

// GetStorageName returns the value of StorageName.
func (s *StorageAccessToken) GetStorageName() OptString {
	return s.StorageName
}

// GetUser returns the value of User.
func (s *StorageAccessToken) GetUser() OptString {
	return s.User
}

// SetCredentials sets the value of Credentials.
func (s *StorageAccessToken) SetCredentials(val OptStorageAccessTokenCredentials) {
	s.Credentials = val
}

// SetExpiration sets the value of Expiration.
func (s *StorageAccessToken) SetExpiration(val OptInstant) {
	s.Expiration = val
}

// SetProjectId sets the value of ProjectId.
func (s *StorageAccessToken) SetProjectId(val OptString) {
	s.ProjectId = val
}

// SetProjectSharedStoragePath sets the value of ProjectSharedStoragePath.
func (s *StorageAccessToken) SetProjectSharedStoragePath(val OptString) {
	s.ProjectSharedStoragePath = val
}

// SetProvider sets the value of Provider.
func (s *StorageAccessToken) SetProvider(val OptCloudProvider) {
	s.Provider = val
}

// SetRegion sets the value of Region.
func (s *StorageAccessToken) SetRegion(val OptRescaleRegion) {
	s.Region = val
}

// SetStorageName sets the value of StorageName.
func (s *StorageAccessToken) SetStorageName(val OptString) {
	s.StorageName = val
}

// SetUser sets the value of User.
func (s *StorageAccessToken) SetUser(val OptString) {
	s.User = val
}

func (*StorageAccessToken) htcProjectsProjectIdStorageTokenGetRes()                  {}
func (*StorageAccessToken) htcProjectsProjectIdStorageTokenRegionGetRes()            {}
func (*StorageAccessToken) htcProjectsProjectIdTasksTaskIdStorageTokenGetRes()       {}
func (*StorageAccessToken) htcProjectsProjectIdTasksTaskIdStorageTokenRegionGetRes() {}

type StorageAccessTokenCredentials map[string]string

func (s *StorageAccessTokenCredentials) init() StorageAccessTokenCredentials {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/StorageAccessTokens
type StorageAccessTokens struct {
	DefaultRegion OptRescaleRegion     `json:"defaultRegion"`
	RegionStores  []StorageAccessToken `json:"regionStores"`
}

// GetDefaultRegion returns the value of DefaultRegion.
func (s *StorageAccessTokens) GetDefaultRegion() OptRescaleRegion {
	return s.DefaultRegion
}

// GetRegionStores returns the value of RegionStores.
func (s *StorageAccessTokens) GetRegionStores() []StorageAccessToken {
	return s.RegionStores
}

// SetDefaultRegion sets the value of DefaultRegion.
func (s *StorageAccessTokens) SetDefaultRegion(val OptRescaleRegion) {
	s.DefaultRegion = val
}

// SetRegionStores sets the value of RegionStores.
func (s *StorageAccessTokens) SetRegionStores(val []StorageAccessToken) {
	s.RegionStores = val
}

func (*StorageAccessTokens) htcProjectsProjectIdStorageTokensGetRes()            {}
func (*StorageAccessTokens) htcProjectsProjectIdTasksTaskIdStorageTokensGetRes() {}

// Ref: #/components/schemas/SupportedRescaleRegion
type SupportedRescaleRegion string

const (
	SupportedRescaleRegionAWSAPSOUTHEAST1     SupportedRescaleRegion = "AWS_AP_SOUTHEAST_1"
	SupportedRescaleRegionAWSCACENTRAL1       SupportedRescaleRegion = "AWS_CA_CENTRAL_1"
	SupportedRescaleRegionAWSEUNORTH1         SupportedRescaleRegion = "AWS_EU_NORTH_1"
	SupportedRescaleRegionAWSEUCENTRAL1       SupportedRescaleRegion = "AWS_EU_CENTRAL_1"
	SupportedRescaleRegionAWSEUWEST1          SupportedRescaleRegion = "AWS_EU_WEST_1"
	SupportedRescaleRegionAWSEUWEST2          SupportedRescaleRegion = "AWS_EU_WEST_2"
	SupportedRescaleRegionAWSEUWEST3          SupportedRescaleRegion = "AWS_EU_WEST_3"
	SupportedRescaleRegionAWSSAEAST1          SupportedRescaleRegion = "AWS_SA_EAST_1"
	SupportedRescaleRegionAWSUSEAST2          SupportedRescaleRegion = "AWS_US_EAST_2"
	SupportedRescaleRegionAWSUSWEST2          SupportedRescaleRegion = "AWS_US_WEST_2"
	SupportedRescaleRegionAWSUSEAST1          SupportedRescaleRegion = "AWS_US_EAST_1"
	SupportedRescaleRegionGCPASIASOUTHEAST1   SupportedRescaleRegion = "GCP_ASIA_SOUTHEAST_1"
	SupportedRescaleRegionGCPUSCENTRAL1       SupportedRescaleRegion = "GCP_US_CENTRAL_1"
	SupportedRescaleRegionGCPUSEAST1          SupportedRescaleRegion = "GCP_US_EAST_1"
	SupportedRescaleRegionGCPUSEAST2          SupportedRescaleRegion = "GCP_US_EAST_2"
	SupportedRescaleRegionGCPUSEAST4          SupportedRescaleRegion = "GCP_US_EAST_4"
	SupportedRescaleRegionGCPUSWEST1          SupportedRescaleRegion = "GCP_US_WEST_1"
	SupportedRescaleRegionGCPUSWEST4          SupportedRescaleRegion = "GCP_US_WEST_4"
	SupportedRescaleRegionGCPEUWEST1          SupportedRescaleRegion = "GCP_EU_WEST_1"
	SupportedRescaleRegionGCPEUWEST2          SupportedRescaleRegion = "GCP_EU_WEST_2"
	SupportedRescaleRegionGCPEUWEST3          SupportedRescaleRegion = "GCP_EU_WEST_3"
	SupportedRescaleRegionGCPEUWEST4          SupportedRescaleRegion = "GCP_EU_WEST_4"
	SupportedRescaleRegionGCPCACENTRAL1       SupportedRescaleRegion = "GCP_CA_CENTRAL_1"
	SupportedRescaleRegionAZUREUSWEST2        SupportedRescaleRegion = "AZURE_US_WEST_2"
	SupportedRescaleRegionAZUREUSSOUTHCENTRAL SupportedRescaleRegion = "AZURE_US_SOUTHCENTRAL"
)

// AllValues returns all SupportedRescaleRegion values.
func (SupportedRescaleRegion) AllValues() []SupportedRescaleRegion {
	return []SupportedRescaleRegion{
		SupportedRescaleRegionAWSAPSOUTHEAST1,
		SupportedRescaleRegionAWSCACENTRAL1,
		SupportedRescaleRegionAWSEUNORTH1,
		SupportedRescaleRegionAWSEUCENTRAL1,
		SupportedRescaleRegionAWSEUWEST1,
		SupportedRescaleRegionAWSEUWEST2,
		SupportedRescaleRegionAWSEUWEST3,
		SupportedRescaleRegionAWSSAEAST1,
		SupportedRescaleRegionAWSUSEAST2,
		SupportedRescaleRegionAWSUSWEST2,
		SupportedRescaleRegionAWSUSEAST1,
		SupportedRescaleRegionGCPASIASOUTHEAST1,
		SupportedRescaleRegionGCPUSCENTRAL1,
		SupportedRescaleRegionGCPUSEAST1,
		SupportedRescaleRegionGCPUSEAST2,
		SupportedRescaleRegionGCPUSEAST4,
		SupportedRescaleRegionGCPUSWEST1,
		SupportedRescaleRegionGCPUSWEST4,
		SupportedRescaleRegionGCPEUWEST1,
		SupportedRescaleRegionGCPEUWEST2,
		SupportedRescaleRegionGCPEUWEST3,
		SupportedRescaleRegionGCPEUWEST4,
		SupportedRescaleRegionGCPCACENTRAL1,
		SupportedRescaleRegionAZUREUSWEST2,
		SupportedRescaleRegionAZUREUSSOUTHCENTRAL,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SupportedRescaleRegion) MarshalText() ([]byte, error) {
	switch s {
	case SupportedRescaleRegionAWSAPSOUTHEAST1:
		return []byte(s), nil
	case SupportedRescaleRegionAWSCACENTRAL1:
		return []byte(s), nil
	case SupportedRescaleRegionAWSEUNORTH1:
		return []byte(s), nil
	case SupportedRescaleRegionAWSEUCENTRAL1:
		return []byte(s), nil
	case SupportedRescaleRegionAWSEUWEST1:
		return []byte(s), nil
	case SupportedRescaleRegionAWSEUWEST2:
		return []byte(s), nil
	case SupportedRescaleRegionAWSEUWEST3:
		return []byte(s), nil
	case SupportedRescaleRegionAWSSAEAST1:
		return []byte(s), nil
	case SupportedRescaleRegionAWSUSEAST2:
		return []byte(s), nil
	case SupportedRescaleRegionAWSUSWEST2:
		return []byte(s), nil
	case SupportedRescaleRegionAWSUSEAST1:
		return []byte(s), nil
	case SupportedRescaleRegionGCPASIASOUTHEAST1:
		return []byte(s), nil
	case SupportedRescaleRegionGCPUSCENTRAL1:
		return []byte(s), nil
	case SupportedRescaleRegionGCPUSEAST1:
		return []byte(s), nil
	case SupportedRescaleRegionGCPUSEAST2:
		return []byte(s), nil
	case SupportedRescaleRegionGCPUSEAST4:
		return []byte(s), nil
	case SupportedRescaleRegionGCPUSWEST1:
		return []byte(s), nil
	case SupportedRescaleRegionGCPUSWEST4:
		return []byte(s), nil
	case SupportedRescaleRegionGCPEUWEST1:
		return []byte(s), nil
	case SupportedRescaleRegionGCPEUWEST2:
		return []byte(s), nil
	case SupportedRescaleRegionGCPEUWEST3:
		return []byte(s), nil
	case SupportedRescaleRegionGCPEUWEST4:
		return []byte(s), nil
	case SupportedRescaleRegionGCPCACENTRAL1:
		return []byte(s), nil
	case SupportedRescaleRegionAZUREUSWEST2:
		return []byte(s), nil
	case SupportedRescaleRegionAZUREUSSOUTHCENTRAL:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SupportedRescaleRegion) UnmarshalText(data []byte) error {
	switch SupportedRescaleRegion(data) {
	case SupportedRescaleRegionAWSAPSOUTHEAST1:
		*s = SupportedRescaleRegionAWSAPSOUTHEAST1
		return nil
	case SupportedRescaleRegionAWSCACENTRAL1:
		*s = SupportedRescaleRegionAWSCACENTRAL1
		return nil
	case SupportedRescaleRegionAWSEUNORTH1:
		*s = SupportedRescaleRegionAWSEUNORTH1
		return nil
	case SupportedRescaleRegionAWSEUCENTRAL1:
		*s = SupportedRescaleRegionAWSEUCENTRAL1
		return nil
	case SupportedRescaleRegionAWSEUWEST1:
		*s = SupportedRescaleRegionAWSEUWEST1
		return nil
	case SupportedRescaleRegionAWSEUWEST2:
		*s = SupportedRescaleRegionAWSEUWEST2
		return nil
	case SupportedRescaleRegionAWSEUWEST3:
		*s = SupportedRescaleRegionAWSEUWEST3
		return nil
	case SupportedRescaleRegionAWSSAEAST1:
		*s = SupportedRescaleRegionAWSSAEAST1
		return nil
	case SupportedRescaleRegionAWSUSEAST2:
		*s = SupportedRescaleRegionAWSUSEAST2
		return nil
	case SupportedRescaleRegionAWSUSWEST2:
		*s = SupportedRescaleRegionAWSUSWEST2
		return nil
	case SupportedRescaleRegionAWSUSEAST1:
		*s = SupportedRescaleRegionAWSUSEAST1
		return nil
	case SupportedRescaleRegionGCPASIASOUTHEAST1:
		*s = SupportedRescaleRegionGCPASIASOUTHEAST1
		return nil
	case SupportedRescaleRegionGCPUSCENTRAL1:
		*s = SupportedRescaleRegionGCPUSCENTRAL1
		return nil
	case SupportedRescaleRegionGCPUSEAST1:
		*s = SupportedRescaleRegionGCPUSEAST1
		return nil
	case SupportedRescaleRegionGCPUSEAST2:
		*s = SupportedRescaleRegionGCPUSEAST2
		return nil
	case SupportedRescaleRegionGCPUSEAST4:
		*s = SupportedRescaleRegionGCPUSEAST4
		return nil
	case SupportedRescaleRegionGCPUSWEST1:
		*s = SupportedRescaleRegionGCPUSWEST1
		return nil
	case SupportedRescaleRegionGCPUSWEST4:
		*s = SupportedRescaleRegionGCPUSWEST4
		return nil
	case SupportedRescaleRegionGCPEUWEST1:
		*s = SupportedRescaleRegionGCPEUWEST1
		return nil
	case SupportedRescaleRegionGCPEUWEST2:
		*s = SupportedRescaleRegionGCPEUWEST2
		return nil
	case SupportedRescaleRegionGCPEUWEST3:
		*s = SupportedRescaleRegionGCPEUWEST3
		return nil
	case SupportedRescaleRegionGCPEUWEST4:
		*s = SupportedRescaleRegionGCPEUWEST4
		return nil
	case SupportedRescaleRegionGCPCACENTRAL1:
		*s = SupportedRescaleRegionGCPCACENTRAL1
		return nil
	case SupportedRescaleRegionAZUREUSWEST2:
		*s = SupportedRescaleRegionAZUREUSWEST2
		return nil
	case SupportedRescaleRegionAZUREUSSOUTHCENTRAL:
		*s = SupportedRescaleRegionAZUREUSSOUTHCENTRAL
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Tag
type Tag struct {
	Key   OptString `json:"key"`
	Value OptString `json:"value"`
}

// GetKey returns the value of Key.
func (s *Tag) GetKey() OptString {
	return s.Key
}

// GetValue returns the value of Value.
func (s *Tag) GetValue() OptString {
	return s.Value
}

// SetKey sets the value of Key.
func (s *Tag) SetKey(val OptString) {
	s.Key = val
}

// SetValue sets the value of Value.
func (s *Tag) SetValue(val OptString) {
	s.Value = val
}

// Ref: #/components/schemas/TaskRetentionPolicy
type TaskRetentionPolicy struct {
	// The time in hours of inactivity after which an active task is automatically archived. Setting this
	// to `0` turns off auto-archiving, leaving the task active indefinitely.
	ArchiveAfter int32 `json:"archiveAfter"`
	// When this TaskRetentionPolicy was applied to this project.
	CreatedAt OptDateTime `json:"createdAt"`
	// The time in hours before an archived task is deleted. A value of `0` disables auto-deletion,
	// keeping the task archived indefinitely.
	DeleteAfter int32     `json:"deleteAfter"`
	ProjectId   OptString `json:"projectId"`
}

// GetArchiveAfter returns the value of ArchiveAfter.
func (s *TaskRetentionPolicy) GetArchiveAfter() int32 {
	return s.ArchiveAfter
}

// GetCreatedAt returns the value of CreatedAt.
func (s *TaskRetentionPolicy) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetDeleteAfter returns the value of DeleteAfter.
func (s *TaskRetentionPolicy) GetDeleteAfter() int32 {
	return s.DeleteAfter
}

// GetProjectId returns the value of ProjectId.
func (s *TaskRetentionPolicy) GetProjectId() OptString {
	return s.ProjectId
}

// SetArchiveAfter sets the value of ArchiveAfter.
func (s *TaskRetentionPolicy) SetArchiveAfter(val int32) {
	s.ArchiveAfter = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *TaskRetentionPolicy) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetDeleteAfter sets the value of DeleteAfter.
func (s *TaskRetentionPolicy) SetDeleteAfter(val int32) {
	s.DeleteAfter = val
}

// SetProjectId sets the value of ProjectId.
func (s *TaskRetentionPolicy) SetProjectId(val OptString) {
	s.ProjectId = val
}

func (*TaskRetentionPolicy) htcProjectsProjectIdTaskRetentionPolicyGetRes() {}
func (*TaskRetentionPolicy) htcProjectsProjectIdTaskRetentionPolicyPutRes() {}

// Ref: #/components/schemas/ViewType
type ViewType string

const (
	ViewTypeFULL   ViewType = "FULL"
	ViewTypeSIMPLE ViewType = "SIMPLE"
)

// AllValues returns all ViewType values.
func (ViewType) AllValues() []ViewType {
	return []ViewType{
		ViewTypeFULL,
		ViewTypeSIMPLE,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ViewType) MarshalText() ([]byte, error) {
	switch s {
	case ViewTypeFULL:
		return []byte(s), nil
	case ViewTypeSIMPLE:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ViewType) UnmarshalText(data []byte) error {
	switch ViewType(data) {
	case ViewTypeFULL:
		*s = ViewTypeFULL
		return nil
	case ViewTypeSIMPLE:
		*s = ViewTypeSIMPLE
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/WhoAmI
type WhoAmI struct {
	User         OptRescaleUser        `json:"user"`
	UserFeatures OptFeatureFlagsResult `json:"userFeatures"`
}

// GetUser returns the value of User.
func (s *WhoAmI) GetUser() OptRescaleUser {
	return s.User
}

// GetUserFeatures returns the value of UserFeatures.
func (s *WhoAmI) GetUserFeatures() OptFeatureFlagsResult {
	return s.UserFeatures
}

// SetUser sets the value of User.
func (s *WhoAmI) SetUser(val OptRescaleUser) {
	s.User = val
}

// SetUserFeatures sets the value of UserFeatures.
func (s *WhoAmI) SetUserFeatures(val OptFeatureFlagsResult) {
	s.UserFeatures = val
}

func (*WhoAmI) authWhoamiGetRes() {}

// Ref: #/components/schemas/Workspace
type Workspace struct {
	ID   OptString `json:"id"`
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *Workspace) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *Workspace) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *Workspace) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Workspace) SetName(val OptString) {
	s.Name = val
}

// Ref: #/components/schemas/WorkspaceTaskRetentionPolicy
type WorkspaceTaskRetentionPolicy struct {
	// The time in hours of inactivity after which an active task is automatically archived. Setting this
	// to `0` turns off auto-archiving, leaving the task active indefinitely.
	ArchiveAfter int32 `json:"archiveAfter"`
	// When this TaskRetentionPolicy was applied to this workspace.
	CreatedAt OptDateTime `json:"createdAt"`
	// The time in hours before an archived task is deleted. A value of `0` disables auto-deletion,
	// keeping the task archived indefinitely.
	DeleteAfter int32     `json:"deleteAfter"`
	WorkspaceId OptString `json:"workspaceId"`
}

// GetArchiveAfter returns the value of ArchiveAfter.
func (s *WorkspaceTaskRetentionPolicy) GetArchiveAfter() int32 {
	return s.ArchiveAfter
}

// GetCreatedAt returns the value of CreatedAt.
func (s *WorkspaceTaskRetentionPolicy) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetDeleteAfter returns the value of DeleteAfter.
func (s *WorkspaceTaskRetentionPolicy) GetDeleteAfter() int32 {
	return s.DeleteAfter
}

// GetWorkspaceId returns the value of WorkspaceId.
func (s *WorkspaceTaskRetentionPolicy) GetWorkspaceId() OptString {
	return s.WorkspaceId
}

// SetArchiveAfter sets the value of ArchiveAfter.
func (s *WorkspaceTaskRetentionPolicy) SetArchiveAfter(val int32) {
	s.ArchiveAfter = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *WorkspaceTaskRetentionPolicy) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetDeleteAfter sets the value of DeleteAfter.
func (s *WorkspaceTaskRetentionPolicy) SetDeleteAfter(val int32) {
	s.DeleteAfter = val
}

// SetWorkspaceId sets the value of WorkspaceId.
func (s *WorkspaceTaskRetentionPolicy) SetWorkspaceId(val OptString) {
	s.WorkspaceId = val
}

func (*WorkspaceTaskRetentionPolicy) htcWorkspacesWorkspaceIdTaskRetentionPolicyGetRes() {}
func (*WorkspaceTaskRetentionPolicy) htcWorkspacesWorkspaceIdTaskRetentionPolicyPutRes() {}
